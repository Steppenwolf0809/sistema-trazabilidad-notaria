<div class="card">
  <div class="card-header d-flex justify-content-between align-items-center">
    <span><i class="fas fa-file-alt me-2"></i> Detalle de Documento</span>
    <div>
      <a href="/admin/documentos/listado" class="btn btn-sm btn-outline-secondary">
        <i class="fas fa-arrow-left me-1"></i> Volver al Listado
      </a>
      
      {{#if (eq documento.estado "en_proceso")}}
      <button type="button" class="btn btn-sm btn-success" onclick="marcarListo({{documento.id}})">
        <i class="fas fa-check me-1"></i> Marcar Listo
      </button>
      {{/if}}
      
      {{#if (eq documento.estado "listo_para_entrega")}}
      <a href="/admin/documentos/entrega/{{documento.id}}" class="btn btn-sm btn-primary">
        <i class="fas fa-hand-holding me-1"></i> Entregar
      </a>
      {{/if}}
    </div>
  </div>
  
  <div class="card-body">
    <!-- Información general del documento -->
    <div class="row mb-4">
      <div class="col-12">
        <h5 class="border-bottom pb-2">Información General</h5>
      </div>
      
      <div class="col-md-6">
        <div class="mb-3">
          <label class="fw-bold">Código de Barras:</label>
          <div>{{documento.codigoBarras}}</div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Tipo de Documento:</label>
          <div>{{documento.tipoDocumento}}</div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Estado:</label>
          <div>
            {{#if (eq documento.estado "en_proceso")}}
            <span class="badge bg-warning">En Proceso</span>
            {{else if (eq documento.estado "listo_para_entrega")}}
            <span class="badge bg-success">Listo para Entrega</span>
            {{else if (eq documento.estado "entregado")}}
            <span class="badge bg-info">Entregado</span>
            {{else}}
            <span class="badge bg-secondary">{{translateEstado documento.estado}}</span>
            {{/if}}
          </div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Notas:</label>
          <div>{{documento.notas}}</div>
        </div>
      </div>
      
      <div class="col-md-6">
        <div class="mb-3">
          <label class="fw-bold">Fecha de Creación:</label>
          <div>{{formatDate documento.fechaCreacion}}</div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Matrizador:</label>
          <div>{{documento.matrizador.nombre}}</div>
        </div>
        
        {{#if (eq documento.estado "listo_para_entrega")}}
        <div class="mb-3">
          <label class="fw-bold">Código de Verificación:</label>
          {{#if (hasRole userRole "admin,matrizador")}}
          <div class="badge bg-warning">{{documento.codigoVerificacion}}</div>
          {{else}}
          <div class="badge bg-secondary">**** (Acceso restringido)</div>
          {{/if}}
        </div>
        {{/if}}
        
        {{#if documento.fechaEntrega}}
        <div class="mb-3">
          <label class="fw-bold">Fecha de Entrega:</label>
          <div>{{formatDate documento.fechaEntrega}}</div>
        </div>
        {{/if}}
      </div>
    </div>
    
    <!-- Información del cliente -->
    <div class="row mb-4">
      <div class="col-12">
        <h5 class="border-bottom pb-2">Información del Cliente</h5>
      </div>
      
      <div class="col-md-6">
        <div class="mb-3">
          <label class="fw-bold">Nombre:</label>
          <div>{{documento.nombreCliente}}</div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Identificación:</label>
          <div>{{documento.identificacionCliente}}</div>
        </div>
      </div>
      
      <div class="col-md-6">
        <div class="mb-3">
          <label class="fw-bold">Email:</label>
          <div>{{documento.emailCliente}}</div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Teléfono:</label>
          <div>{{documento.telefonoCliente}}</div>
        </div>
      </div>
    </div>
    
    <!-- Información de comparecientes -->
    {{#if documento.comparecientes.length}}
    <div class="row mb-4">
      <div class="col-12">
        <h5 class="border-bottom pb-2">Comparecientes</h5>
      </div>
      
      {{#each documento.comparecientes}}
      <div class="col-md-4 mb-3">
        <div class="card">
          <div class="card-body p-3">
            <h6 class="mb-2">{{this.nombre}}</h6>
            <div class="small mb-1"><strong>Identificación:</strong> {{this.identificacion}}</div>
            {{#if this.rol}}
            <div class="small"><strong>Rol:</strong> {{this.rol}}</div>
            {{/if}}
          </div>
        </div>
      </div>
      {{/each}}
    </div>
    {{/if}}
    
    <!-- Información de entrega -->
    {{#if (eq documento.estado "entregado")}}
    <div class="row mb-4">
      <div class="col-12">
        <h5 class="border-bottom pb-2">Datos de Entrega</h5>
      </div>
      
      <div class="col-md-6">
        <div class="mb-3">
          <label class="fw-bold">Receptor:</label>
          <div>{{documento.nombreReceptor}}</div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Identificación:</label>
          <div>{{documento.identificacionReceptor}}</div>
        </div>
      </div>
      
      <div class="col-md-6">
        <div class="mb-3">
          <label class="fw-bold">Relación:</label>
          <div>
            {{#if (eq documento.relacionReceptor "titular")}}
            Titular
            {{else if (eq documento.relacionReceptor "familiar")}}
            Familiar
            {{else if (eq documento.relacionReceptor "mandatario")}}
            Mandatario
            {{else}}
            {{documento.relacionReceptor}}
            {{/if}}
          </div>
        </div>
        
        <div class="mb-3">
          <label class="fw-bold">Fecha de Entrega:</label>
          <div>{{formatDate documento.fechaEntrega}}</div>
        </div>
      </div>
    </div>
    {{/if}}
    
    <!-- Panel de Documentos Relacionados -->
    <div class="row mt-4">
      <div class="col-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Documentos Relacionados</h5>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalRelacionar">
              <i class="fas fa-link"></i> Relacionar Documento
            </button>
          </div>
          <div class="card-body">
            <div class="row">
              {{!-- Documentos Principales --}}
              <div class="col-md-6">
                <h6 class="mb-3">Documentos Principales</h6>
                {{#if documentosPrincipales.length}}
                  <div class="list-group">
                    {{#each documentosPrincipales}}
                      <div class="list-group-item">
                        <div class="d-flex justify-content-between align-items-center">
                          <div>
                            <h6 class="mb-1">{{this.codigoBarras}}</h6>
                            <p class="mb-1">{{this.tipoDocumento}} - {{this.nombreCliente}}</p>
                            <small class="text-muted">
                              {{this.tipoRelacion}} - {{this.descripcion}}
                            </small>
                          </div>
                          <div class="btn-group">
                            <a href="/admin/documentos/detalle/{{this.id}}" class="btn btn-sm btn-info">
                              <i class="fas fa-eye"></i>
                            </a>
                            <button class="btn btn-sm btn-danger" onclick="eliminarRelacion('{{../documento.id}}', '{{this.id}}')">
                              <i class="fas fa-unlink"></i>
                            </button>
                          </div>
                        </div>
                      </div>
                    {{/each}}
                  </div>
                {{else}}
                  <p class="text-muted">No hay documentos principales relacionados</p>
                {{/if}}
              </div>

              {{!-- Componentes --}}
              <div class="col-md-6">
                <h6 class="mb-3">Componentes</h6>
                {{#if componentes.length}}
                  <div class="list-group">
                    {{#each componentes}}
                      <div class="list-group-item">
                        <div class="d-flex justify-content-between align-items-center">
                          <div>
                            <h6 class="mb-1">{{this.codigoBarras}}</h6>
                            <p class="mb-1">{{this.tipoDocumento}} - {{this.nombreCliente}}</p>
                            <small class="text-muted">
                              {{this.tipoRelacion}} - {{this.descripcion}}
                            </small>
                          </div>
                          <div class="btn-group">
                            <a href="/admin/documentos/detalle/{{this.id}}" class="btn btn-sm btn-info">
                              <i class="fas fa-eye"></i>
                            </a>
                            <button class="btn btn-sm btn-danger" onclick="eliminarRelacion('{{../documento.id}}', '{{this.id}}')">
                              <i class="fas fa-unlink"></i>
                            </button>
                          </div>
                        </div>
                      </div>
                    {{/each}}
                  </div>
                {{else}}
                  <p class="text-muted">No hay componentes relacionados</p>
                {{/if}}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Historial de eventos -->
    {{#if eventos.length}}
    <div class="row">
      <div class="col-12">
        <h5 class="border-bottom pb-2">Historial de Eventos</h5>
      </div>
      
      <div class="col-12">
        <div class="table-responsive">
          <table class="table table-sm table-hover">
            <thead class="table-light">
              <tr>
                <th>Fecha</th>
                <th>Tipo</th>
                <th>Detalles</th>
                <th>Usuario</th>
              </tr>
            </thead>
            <tbody>
              {{#each eventos}}
              <tr>
                <td>{{formatDate this.createdAt}}</td>
                <td>
                  {{#if (eq this.tipo "creacion")}}
                  <span class="badge bg-primary">Creación</span>
                  {{else if (eq this.tipo "cambio_estado")}}
                  <span class="badge bg-info">Cambio Estado</span>
                  {{else if (eq this.tipo "entrega")}}
                  <span class="badge bg-success">Entrega</span>
                  {{else if (eq this.tipo "cancelacion")}}
                  <span class="badge bg-danger">Cancelación</span>
                  {{else}}
                  <span class="badge bg-secondary">{{this.tipo}}</span>
                  {{/if}}
                </td>
                <td>{{this.detalles}}</td>
                <td>{{this.usuario}}</td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>
    </div>
    {{/if}}
  </div>
</div>

<!-- Modal de confirmación para marcar como listo -->
<div class="modal fade" id="marcarListoModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Marcar documento como listo</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Al marcar este documento como listo para entrega, se generará un código de verificación de 4 dígitos que será enviado al cliente.</p>
        <p>¿Está seguro de que el documento está listo para ser entregado?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <form id="marcarListoForm" action="/admin/documentos/marcar-listo" method="POST">
          <input type="hidden" id="documentoId" name="documentoId" value="{{documento.id}}">
          <button type="submit" class="btn btn-success">Confirmar</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal para Relacionar Documentos -->
<div class="modal fade" id="modalRelacionar" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Relacionar Documento</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <ul class="nav nav-tabs mb-3" id="tabRelacionar" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="tab-pendientes-tab" data-bs-toggle="tab" data-bs-target="#tab-pendientes" type="button" role="tab">Pendientes</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="tab-busqueda-tab" data-bs-toggle="tab" data-bs-target="#tab-busqueda" type="button" role="tab">Buscar</button>
          </li>
        </ul>
        <div class="tab-content" id="tabRelacionarContent">
          <!-- Tab de pendientes -->
          <div class="tab-pane fade show active" id="tab-pendientes" role="tabpanel">
            <div id="pendientesMiosCargando" class="text-center my-3">
              <div class="spinner-border" role="status"><span class="visually-hidden">Cargando...</span></div>
            </div>
            <div id="pendientesMiosLista" style="display:none;"></div>
          </div>
          <!-- Tab de búsqueda -->
          <div class="tab-pane fade" id="tab-busqueda" role="tabpanel">
            <div class="mb-3">
              <label class="form-label">Buscar Documento</label>
              <div class="input-group">
                <input type="text" class="form-control" id="busquedaDocumento" placeholder="Código, cliente o tipo de documento" oninput="buscarDocumentos()">
                <button class="btn btn-outline-secondary" type="button" onclick="buscarDocumentos()">
                  <i class="fas fa-search"></i> Buscar
                </button>
              </div>
            </div>
            <div id="resultadosBusqueda" class="mb-3" style="display: none;">
              <h6>Resultados de la búsqueda</h6>
              <div class="list-group" id="listaResultados">
                <!-- Los resultados se cargarán aquí dinámicamente -->
              </div>
            </div>
          </div>
        </div>
        <form id="formRelacionar" style="display: none;">
          <input type="hidden" id="idDocumentoRelacionado">
          <div class="mb-3">
            <label class="form-label">Tipo de Relación</label>
            <select class="form-select" id="tipoRelacion" required>
              <option value="">Seleccione un tipo</option>
              <option value="componente">Componente</option>
              <option value="relacionado">Relacionado</option>
              <option value="anexo">Anexo</option>
            </select>
          </div>
          <div class="mb-3">
            <label class="form-label">Descripción</label>
            <textarea class="form-control" id="descripcionRelacion" rows="3" required></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" onclick="guardarRelacion()" id="btnGuardarRelacion" style="display: none;">
          Guardar Relación
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Función para mostrar el modal de marcar como listo
  function marcarListo(id) {
    document.getElementById('documentoId').value = id;
    const modal = new bootstrap.Modal(document.getElementById('marcarListoModal'));
    modal.show();
  }

  document.addEventListener('DOMContentLoaded', function() {
    // Inicializar tooltips para información adicional
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
    
    // Manejo de selección de documento relacionado
    document.querySelectorAll('.seleccionar-documento').forEach(button => {
      button.addEventListener('click', function() {
        const id = this.getAttribute('data-id');
        const codigo = this.getAttribute('data-codigo');
        const tipo = this.getAttribute('data-tipo');
        
        document.getElementById('idDocumentoRelacionado').value = id;
        document.getElementById('documentoRelacionadoSeleccionado').value = `${tipo} - ${codigo}`;
        
        // Cerrar el colapso si está abierto
        const collapseSearch = document.getElementById('collapseSearch');
        const bsCollapse = bootstrap.Collapse.getInstance(collapseSearch);
        if (bsCollapse) bsCollapse.hide();
      });
    });
    
    // Buscar documentos por código
    document.getElementById('btnBuscarPorCodigo').addEventListener('click', function() {
      const codigo = document.getElementById('codigoDocumentoBusqueda').value.trim();
      
      if (!codigo) return;
      
      // Realizar la búsqueda mediante AJAX
      fetch(`/api/documentos/buscar/codigo/${encodeURIComponent(codigo)}`)
        .then(response => response.json())
        .then(data => {
          const resultadosDiv = document.getElementById('resultadosBusqueda');
          
          if (data.exito && data.datos) {
            // Mostrar el resultado encontrado
            resultadosDiv.innerHTML = `
              <div class="list-group">
                <button type="button" class="list-group-item list-group-item-action seleccionar-documento-busqueda"
                  data-id="${data.datos.id}" data-codigo="${data.datos.codigoBarras}" data-tipo="${data.datos.tipoDocumento}">
                  <div class="d-flex w-100 justify-content-between">
                    <h6 class="mb-1">${data.datos.tipoDocumento}</h6>
                  </div>
                  <p class="mb-1">Código: ${data.datos.codigoBarras}</p>
                </button>
              </div>
            `;
            
            // Agregar evento al resultado encontrado
            document.querySelector('.seleccionar-documento-busqueda').addEventListener('click', function() {
              const id = this.getAttribute('data-id');
              const codigo = this.getAttribute('data-codigo');
              const tipo = this.getAttribute('data-tipo');
              
              document.getElementById('idDocumentoRelacionado').value = id;
              document.getElementById('documentoRelacionadoSeleccionado').value = `${tipo} - ${codigo}`;
            });
          } else {
            resultadosDiv.innerHTML = `<div class="alert alert-warning">No se encontró ningún documento con ese código</div>`;
          }
        })
        .catch(error => {
          document.getElementById('resultadosBusqueda').innerHTML = `<div class="alert alert-danger">Error al buscar: ${error.message}</div>`;
        });
    });
    
    // Enviar formulario de relación
    document.getElementById('btnGuardarRelacion').addEventListener('click', function() {
      const form = document.getElementById('formRelacionarDocumento');
      const idDocumentoRelacionado = document.getElementById('idDocumentoRelacionado').value;
      
      if (!idDocumentoRelacionado) {
        alert('Debe seleccionar un documento para relacionar');
        return;
      }
      
      form.submit();
    });

    // Al abrir el modal, cargar los pendientes
    $('#modalRelacionar').on('shown.bs.modal', function () {
      cargarPendientesMios();
    });

    async function cargarPendientesMios() {
      const cargando = document.getElementById('pendientesMiosCargando');
      const listaDiv = document.getElementById('pendientesMiosLista');
      cargando.style.display = 'block';
      listaDiv.style.display = 'none';
      try {
        const response = await fetch('/api/documentos/pendientes/mios');
        const data = await response.json();
        console.log('Respuesta de pendientes:', data);
        if (data.exito && data.datos.length > 0) {
          listaDiv.innerHTML = data.datos.map(doc => `
            <a href="#" class="list-group-item list-group-item-action" onclick='seleccionarDocumento(${JSON.stringify(doc).replace(/"/g, "&quot;")})'>
              <div class="d-flex justify-content-between align-items-center">
                <div>
                  <h6 class="mb-1">${doc.codigoBarras}</h6>
                  <p class="mb-1">${doc.tipoDocumento} - ${doc.nombreCliente}</p>
                  <small class="text-muted">Estado: ${doc.estado}</small>
                </div>
              </div>
            </a>
          `).join('');
        } else {
          listaDiv.innerHTML = '<div class="alert alert-info">No tienes documentos pendientes</div>';
        }
        cargando.style.display = 'none';
        listaDiv.style.display = 'block';
      } catch (error) {
        console.error('Error al cargar pendientes:', error);
        listaDiv.innerHTML = '<div class="alert alert-danger">Error al cargar documentos pendientes</div>';
        cargando.style.display = 'none';
        listaDiv.style.display = 'block';
      }
    }
  });

  let documentoSeleccionado = null;

  async function buscarDocumentos() {
    const query = document.getElementById('busquedaDocumento').value;
    if (!query) return;

    try {
      const response = await fetch(`/api/documentos/buscar?query=${encodeURIComponent(query)}`);
      const data = await response.json();

      const resultadosDiv = document.getElementById('resultadosBusqueda');
      const listaResultados = document.getElementById('listaResultados');
      
      if (data.exito && data.datos.length > 0) {
        listaResultados.innerHTML = data.datos.map(doc => `
          <a href="#" class="list-group-item list-group-item-action" onclick="seleccionarDocumento(${JSON.stringify(doc).replace(/"/g, '&quot;')})">
            <div class="d-flex justify-content-between align-items-center">
              <div>
                <h6 class="mb-1">${doc.codigoBarras}</h6>
                <p class="mb-1">${doc.tipoDocumento} - ${doc.nombreCliente}</p>
                <small class="text-muted">Estado: ${doc.estado}</small>
              </div>
            </div>
          </a>
        `).join('');
        
        resultadosDiv.style.display = 'block';
      } else {
        listaResultados.innerHTML = '<div class="alert alert-info">No se encontraron documentos</div>';
        resultadosDiv.style.display = 'block';
      }
    } catch (error) {
      console.error('Error al buscar documentos:', error);
      alert('Error al buscar documentos');
    }
  }

  function seleccionarDocumento(documento) {
    documentoSeleccionado = documento;
    document.getElementById('idDocumentoRelacionado').value = documento.id;
    document.getElementById('formRelacionar').style.display = 'block';
    document.getElementById('btnGuardarRelacion').style.display = 'block';
  }

  async function guardarRelacion() {
    if (!documentoSeleccionado) return;

    const tipoRelacion = document.getElementById('tipoRelacion').value;
    const descripcion = document.getElementById('descripcionRelacion').value;

    if (!tipoRelacion || !descripcion) {
      alert('Por favor complete todos los campos');
      return;
    }

    try {
      const response = await fetch('/api/documentos/relacionar', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          idDocumentoPrincipal: '{{documento.id}}',
          idDocumentoRelacionado: documentoSeleccionado.id,
          tipoRelacion,
          descripcion
        })
      });

      const data = await response.json();

      if (data.exito) {
        alert('Relación creada exitosamente');
        location.reload();
      } else {
        alert(data.mensaje || 'Error al crear la relación');
      }
    } catch (error) {
      console.error('Error al guardar relación:', error);
      alert('Error al guardar la relación');
    }
  }

  async function eliminarRelacion(idPrincipal, idRelacionado) {
    if (!confirm('¿Está seguro de eliminar esta relación?')) return;

    try {
      const response = await fetch(`/api/documentos/relacionar?idDocumentoPrincipal=${idPrincipal}&idDocumentoRelacionado=${idRelacionado}`, {
        method: 'DELETE'
      });

      const data = await response.json();

      if (data.exito) {
        alert('Relación eliminada exitosamente');
        location.reload();
      } else {
        alert(data.mensaje || 'Error al eliminar la relación');
      }
    } catch (error) {
      console.error('Error al eliminar relación:', error);
      alert('Error al eliminar la relación');
    }
  }
</script> 