<div class="card">
  <div class="card-header">
    <i class="fas fa-file-alt me-2"></i> Registro de Nuevo Documento
  </div>
  <div class="card-body">
    <form id="registroDocumentoForm" action="/admin/documentos/registrar" method="POST">
      
      <!-- Sección de información del documento -->
      <div class="row">
        <div class="col-12 mb-3">
          <h5 class="border-bottom pb-2">Información del Documento</h5>
        </div>
        
        <div class="col-md-4 mb-3">
          <label for="codigoBarras" class="form-label">Código de Barras</label>
          <div class="input-group">
            <span class="input-group-text bg-light">20251701018</span>
            <input type="text" class="form-control" id="codigoBarrasSufijo" name="codigoBarrasSufijo" placeholder="Escanear o ingresar" required>
            <input type="hidden" id="codigoBarras" name="codigoBarras">
          </div>
          <div class="form-text">El código debe comenzar con el prefijo 20251701018</div>
        </div>
        
        <div class="col-md-4 mb-3">
          <label for="tipoDocumento" class="form-label">Tipo de Documento</label>
          <select class="form-select" id="tipoDocumento" name="tipoDocumento" required>
            <option value="" selected disabled>Seleccionar tipo...</option>
            <option value="Escritura Pública">Escritura Pública</option>
            <option value="Reconocimiento de Firma">Reconocimiento de Firma</option>
            <option value="Arrendamiento">Arrendamiento</option>
            <option value="Certificación">Certificación</option>
            <option value="Copia de Archivo">Copia de Archivo</option>
            <option value="Marginación">Marginación</option>
            <option value="Otro">Otro</option>
          </select>
        </div>
        
        <div class="col-md-12 mb-3">
          <label for="notas" class="form-label">Notas o Descripción</label>
          <textarea class="form-control" id="notas" name="notas" rows="2"></textarea>
        </div>
      </div>
      
      <!-- Sección de información del cliente -->
      <div class="row mt-4">
        <div class="col-12 mb-3">
          <h5 class="border-bottom pb-2">Información del Cliente</h5>
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="nombreCliente" class="form-label">Nombre Completo</label>
          <input type="text" class="form-control" id="nombreCliente" name="nombreCliente" required>
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="identificacionCliente" class="form-label">Identificación</label>
          <input type="text" class="form-control" id="identificacionCliente" name="identificacionCliente" required>
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="emailCliente" class="form-label">Correo Electrónico</label>
          <input type="email" class="form-control" id="emailCliente" name="emailCliente">
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="telefonoCliente" class="form-label">Teléfono</label>
          <input type="tel" class="form-control" id="telefonoCliente" name="telefonoCliente">
          <div class="form-text">Para notificaciones de entrega</div>
        </div>
      </div>
      
      <!-- Sección de comparecientes adicionales -->
      <div class="row mt-4">
        <div class="col-12 mb-3">
          <h5 class="border-bottom pb-2">
            Comparecientes Adicionales
            <button type="button" id="agregarCompareciente" class="btn btn-sm btn-outline-primary float-end">
              <i class="fas fa-plus"></i> Agregar
            </button>
          </h5>
        </div>
        
        <div id="comparecientesContainer" class="col-12">
          <!-- Aquí se agregarán dinámicamente los comparecientes -->
        </div>
      </div>
      
      <!-- Sección del matrizador -->
      <div class="row mt-4">
        <div class="col-12 mb-3">
          <h5 class="border-bottom pb-2">Matrizador</h5>
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="idMatrizador" class="form-label">Matrizador Asignado</label>
          <select class="form-select" id="idMatrizador" name="idMatrizador" required>
            <option value="" selected disabled>Seleccionar matrizador...</option>
            {{#each matrizadores}}
            <option value="{{this.id}}">{{this.nombre}}</option>
            {{/each}}
          </select>
        </div>
      </div>
      
      <div class="d-flex justify-content-end mt-4">
        <button type="button" class="btn btn-outline-secondary me-2" onclick="window.location.href='/admin/documentos/listado'">
          Cancelar
        </button>
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-save me-1"></i> Registrar Documento
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Template para nuevos comparecientes -->
<template id="comparecienteTemplate">
  <div class="compareciente-item border rounded p-3 mb-3">
    <div class="d-flex justify-content-between mb-2">
      <h6 class="mb-0">Compareciente #<span class="numero-compareciente"></span></h6>
      <button type="button" class="btn btn-sm btn-outline-danger eliminar-compareciente">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="row">
      <div class="col-md-6 mb-3">
        <label class="form-label">Nombre Completo</label>
        <input type="text" class="form-control" name="comparecientes[__index__][nombre]" required>
      </div>
      <div class="col-md-6 mb-3">
        <label class="form-label">Identificación</label>
        <input type="text" class="form-control" name="comparecientes[__index__][identificacion]" required>
      </div>
      <div class="col-md-12 mb-0">
        <label class="form-label">Rol o participación</label>
        <input type="text" class="form-control" name="comparecientes[__index__][rol]">
      </div>
    </div>
  </div>
</template>

{{#if errorCodeDuplicado}}
<!-- Modal Código Duplicado -->
<div class="modal fade" id="modalCodigoDuplicadoAdmin" tabindex="-1" aria-labelledby="modalCodigoDuplicadoAdminLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="modalCodigoDuplicadoAdminLabel"><i class="fas fa-exclamation-triangle me-2"></i> Código de Barras Duplicado</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>{{error}}</p> {{!-- Usamos la variable error que ya se está pasando con el mensaje específico --}}
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="btnEntendidoCodigoDuplicadoAdmin">Entendido</button>
      </div>
    </div>
  </div>
</div>
{{/if}}

<script>
  // Función de validación de teléfono (reutilizable)
  function validarTelefonoFrontend(telefono) {
    if (!telefono) return { valido: true };
    const regex = /^\\d{10}$/;
    if (!regex.test(telefono)) {
      return { valido: false, mensaje: "El número telefónico debe tener 10 dígitos numéricos." };
    }
    return { valido: true };
  }

  // Función de validación de email (reutilizable)
  function validarEmailFrontend(email) {
    if (!email) return { valido: true }; // Permitir vacío si no es requerido explícitamente aquí
    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;
    if (!regex.test(email)) {
      return { valido: false, mensaje: "Ingrese un correo electrónico válido (ejemplo@dominio.com)." };
    }
    return { valido: true };
  }

  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const telefonoInput = document.getElementById('telefonoCliente');
    const emailInput = document.getElementById('emailCliente'); // Asegúrate que el ID sea 'emailCliente'
    const telefonoErrorContainer = telefonoInput ? telefonoInput.parentElement.querySelector('.invalid-feedback') : null;
    const emailErrorContainer = emailInput ? emailInput.parentElement.querySelector('.invalid-feedback') : null;

    if (form && telefonoInput) {
      telefonoInput.addEventListener('input', function() {
        const telefono = telefonoInput.value.trim();
        const validacion = validarTelefonoFrontend(telefono);
        if (telefono) {
            if (!validacion.valido) {
                telefonoInput.classList.add('is-invalid');
                if (telefonoErrorContainer) telefonoErrorContainer.textContent = validacion.mensaje;
            } else {
                telefonoInput.classList.remove('is-invalid');
                if (telefonoErrorContainer) telefonoErrorContainer.textContent = '';
            }
        } else {
            telefonoInput.classList.remove('is-invalid');
            if (telefonoErrorContainer) telefonoErrorContainer.textContent = '';
        }
      });
    }

    if (form && emailInput) {
      emailInput.addEventListener('input', function() {
        const email = emailInput.value.trim();
        const validacion = validarEmailFrontend(email);
        if (email) { // Solo validar si hay algo escrito
            if (!validacion.valido) {
                emailInput.classList.add('is-invalid');
                if (emailErrorContainer) emailErrorContainer.textContent = validacion.mensaje;
            } else {
                emailInput.classList.remove('is-invalid');
                if (emailErrorContainer) emailErrorContainer.textContent = '';
            }
        } else { // Si está vacío, quitar clases de error
            emailInput.classList.remove('is-invalid');
            if (emailErrorContainer) emailErrorContainer.textContent = '';
        }
      });
    }

    if (form) {
      form.addEventListener('submit', function(event) {
        let formValido = true;
        // Validación de teléfono al enviar
        if (telefonoInput) {
            const telefono = telefonoInput.value.trim();
            if (telefono) {
                const validacionTelefono = validarTelefonoFrontend(telefono);
                if (!validacionTelefono.valido) {
                    formValido = false;
                    telefonoInput.classList.add('is-invalid');
                    if (telefonoErrorContainer) telefonoErrorContainer.textContent = validacionTelefono.mensaje;
                    if (formValido) telefonoInput.focus(); // Solo focus si es el primer error
                }
            }
        }
        // Validación de email al enviar
        if (emailInput) {
            const email = emailInput.value.trim();
            if (email) {
                const validacionEmail = validarEmailFrontend(email);
                if (!validacionEmail.valido) {
                    formValido = false;
                    emailInput.classList.add('is-invalid');
                    if (emailErrorContainer) emailErrorContainer.textContent = validacionEmail.mensaje;
                    if (formValido) emailInput.focus(); // Solo focus si es el primer error
                }
            }
        }

        if (!formValido) {
            event.preventDefault(); // Detener envío si algo no es válido
        }
      });
    }
    
    // Lógica para el modal de código de barras duplicado (existente)
    const errorCodeDuplicado = {{#if errorCodeDuplicado}}true{{else}}false{{/if}};
    const codigoBarrasSufijoInput = document.getElementById('codigoBarrasSufijo'); // ID correcto
    if (errorCodeDuplicado && codigoBarrasSufijoInput) {
        const errorModal = new bootstrap.Modal(document.getElementById('modalCodigoDuplicadoAdmin'));
        errorModal.show();
        document.getElementById('modalCodigoDuplicadoAdmin').addEventListener('hidden.bs.modal', function () {
            codigoBarrasSufijoInput.focus();
            codigoBarrasSufijoInput.select();
        });
    }

    // Auto-completar código de barras con prefijo fijo
    const codigoBarrasSufijo = document.getElementById('codigoBarrasSufijo');
    const codigoBarrasCompleto = document.getElementById('codigoBarras');
    
    codigoBarrasSufijo.addEventListener('input', function() {
      codigoBarrasCompleto.value = '20251701018' + this.value;
    });
    
    // Manejo de comparecientes
    const comparecientesContainer = document.getElementById('comparecientesContainer');
    const agregarComparecienteBtn = document.getElementById('agregarCompareciente');
    const comparecienteTemplate = document.getElementById('comparecienteTemplate');
    let contadorComparecientes = 0;
    
    agregarComparecienteBtn.addEventListener('click', function() {
      // Clonar el template
      const nuevoCompareciente = document.importNode(comparecienteTemplate.content, true);
      
      // Actualizar índice y número
      contadorComparecientes++;
      nuevoCompareciente.querySelector('.numero-compareciente').textContent = contadorComparecientes;
      
      // Actualizar nombres de campos reemplazando __index__ con el contador actual
      const inputs = nuevoCompareciente.querySelectorAll('input');
      inputs.forEach(input => {
        input.name = input.name.replace('__index__', contadorComparecientes - 1);
      });
      
      // Agregar evento para eliminar
      const btnEliminar = nuevoCompareciente.querySelector('.eliminar-compareciente');
      btnEliminar.addEventListener('click', function() {
        this.closest('.compareciente-item').remove();
      });
      
      // Agregar al contenedor
      comparecientesContainer.appendChild(nuevoCompareciente);
    });
  });
</script> 