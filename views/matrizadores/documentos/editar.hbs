<div class="container mt-4">
    <h2>Editar Documento <small class="text-muted">#{{documento.codigoBarras}}</small></h2>
    <hr>

    {{#if error}}
        <div class="alert alert-danger" role="alert">
            {{error}}
        </div>
    {{/if}}
    {{#if success}}
        <div class="alert alert-success" role="alert">
            {{success}}
        </div>
    {{/if}}

    <form method="POST" action="/matrizador/documentos/editar/{{documento.id}}">
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="tipoDocumento" class="form-label">Tipo de Documento</label>
                    <input type="text" class="form-control" id="tipoDocumento" name="tipoDocumento" value="{{documento.tipoDocumento}}" required>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="codigoBarras" class="form-label">Código de Barras</label>
                    <input type="text" class="form-control" id="codigoBarras" name="codigoBarras" value="{{documento.codigoBarras}}" readonly>
                    <small class="form-text text-muted">El código de barras no se puede modificar.</small>
                </div>
            </div>
        </div>

        <h5 class="mt-4">Información del Cliente</h5>
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="nombreCliente" class="form-label">Nombre del Cliente</label>
                    <input type="text" class="form-control" id="nombreCliente" name="nombreCliente" value="{{documento.nombreCliente}}" required>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="identificacionCliente" class="form-label">Identificación del Cliente</label>
                    <input type="text" class="form-control" id="identificacionCliente" name="identificacionCliente" value="{{documento.identificacionCliente}}" required>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="emailCliente" class="form-label">Email del Cliente</label>
                    <input type="email" class="form-control" id="emailCliente" name="emailCliente" value="{{documento.emailCliente}}">
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="telefonoCliente" class="form-label">Teléfono del Cliente</label>
                    <input type="tel" class="form-control" id="telefonoCliente" name="telefonoCliente" value="{{documento.telefonoCliente}}">
                </div>
            </div>
        </div>

        <h5 class="mt-4">Detalles Adicionales</h5>
        <div class="mb-3">
            <label for="notas" class="form-label">Notas</label>
            <textarea class="form-control" id="notas" name="notas" rows="3">{{documento.notas}}</textarea>
        </div>

        <!-- Sección de Comparecientes (simplificada) -->
        <div class="mb-3">
            <label class="form-label">Comparecientes</label>
            <div id="comparecientes-wrapper">
                {{#each documento.comparecientes}}
                    <div class="input-group mb-2 compareciente-item">
                        <input type="text" name="comparecientes[{{@index}}][nombre]" class="form-control" placeholder="Nombre Compareciente" value="{{this.nombre}}">
                        <input type="text" name="comparecientes[{{@index}}][identificacion]" class="form-control" placeholder="Identificación" value="{{this.identificacion}}">
                        <button type="button" class="btn btn-danger btn-sm remove-compareciente">Quitar</button>
                    </div>
                {{/each}}
            </div>
            <button type="button" id="add-compareciente" class="btn btn-secondary btn-sm">+ Añadir Compareciente</button>
        </div>
        
        <p class="mt-3">
            <strong>Matrizador Asignado:</strong> {{documento.matrizador.nombre}} (No editable aquí)<br>
            <strong>Estado Actual:</strong> {{documento.estado}} (No editable aquí)
        </p>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Actualizar Documento</button>
            <a href="/matrizador/documentos/detalle/{{documento.id}}" class="btn btn-secondary">Cancelar</a>
        </div>
    </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const wrapper = document.getElementById('comparecientes-wrapper');
    const addButton = document.getElementById('add-compareciente');
    let comparecienteIndex = {{#if documento.comparecientes}}{{documento.comparecientes.length}}{{else}}0{{/if}};

    if (addButton) {
        addButton.addEventListener('click', function () {
            const newItem = document.createElement('div');
            newItem.classList.add('input-group', 'mb-2', 'compareciente-item');
            newItem.innerHTML = `
                <input type="text" name="comparecientes[${comparecienteIndex}][nombre]" class="form-control" placeholder="Nombre Compareciente" required>
                <input type="text" name="comparecientes[${comparecienteIndex}][identificacion]" class="form-control" placeholder="Identificación" required>
                <button type="button" class="btn btn-danger btn-sm remove-compareciente">Quitar</button>
            `;
            wrapper.appendChild(newItem);
            comparecienteIndex++;
        });
    }

    if (wrapper) {
        wrapper.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-compareciente')) {
                e.target.closest('.compareciente-item').remove();
            }
        });
    }
});

// Función de validación de teléfono (reutilizable)
function validarTelefonoFrontend(telefono) {
    if (!telefono) return { valido: true };
    // Eliminar todos los caracteres no numéricos
    const telefonoLimpio = telefono.replace(/\D/g, '');
    if (telefonoLimpio.length !== 10) {
        return { valido: false, mensaje: "El número telefónico debe contener exactamente 10 dígitos. Se ignorarán espacios, guiones y otros caracteres no numéricos." };
    }
    return { valido: true };
}

// Función de validación de email (reutilizable)
function validarEmailFrontend(email) {
    if (!email) return { valido: true };
    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;
    if (!regex.test(email)) {
        return { valido: false, mensaje: "Ingrese un correo electrónico válido (ejemplo@dominio.com)." };
    }
    return { valido: true };
}

document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const telefonoInput = document.getElementById('telefonoCliente');
    const emailInput = document.getElementById('emailCliente');
    const telefonoErrorContainer = telefonoInput ? telefonoInput.parentElement.querySelector('.invalid-feedback') : null;
    const emailErrorContainer = emailInput ? emailInput.parentElement.querySelector('.invalid-feedback') : null;

    if (form && telefonoInput) {
        telefonoInput.addEventListener('input', function() {
            const telefono = telefonoInput.value.trim();
            if (telefono) {
                // Solo eliminar caracteres no numéricos al validar, no al escribir
                const telefonoLimpio = telefono.replace(/\D/g, '');
                const validacion = validarTelefonoFrontend(telefonoLimpio);
                if (!validacion.valido) {
                    telefonoInput.classList.add('is-invalid');
                    if (telefonoErrorContainer) telefonoErrorContainer.textContent = validacion.mensaje;
                } else {
                    telefonoInput.classList.remove('is-invalid');
                    if (telefonoErrorContainer) telefonoErrorContainer.textContent = '';
                }
            } else {
                telefonoInput.classList.remove('is-invalid');
                if (telefonoErrorContainer) telefonoErrorContainer.textContent = '';
            }
        });
    }

    if (form && emailInput) {
        emailInput.addEventListener('input', function() {
            const email = emailInput.value.trim();
            const validacion = validarEmailFrontend(email);
            if (email) {
                if (!validacion.valido) {
                    emailInput.classList.add('is-invalid');
                    if (emailErrorContainer) emailErrorContainer.textContent = validacion.mensaje;
                } else {
                    emailInput.classList.remove('is-invalid');
                    if (emailErrorContainer) emailErrorContainer.textContent = '';
                }
            } else {
                emailInput.classList.remove('is-invalid');
                if (emailErrorContainer) emailErrorContainer.textContent = '';
            }
        });
    }

    if (form) {
        form.addEventListener('submit', function(event) {
            let formValido = true;
            if (telefonoInput) {
                const telefono = telefonoInput.value.trim();
                if (telefono) {
                    // Actualizar el valor del input para eliminar caracteres no numéricos
                    telefonoInput.value = telefono.replace(/\D/g, '');
                    const validacionTelefono = validarTelefonoFrontend(telefonoInput.value);
                    if (!validacionTelefono.valido) {
                        formValido = false;
                        telefonoInput.classList.add('is-invalid');
                        if (telefonoErrorContainer) telefonoErrorContainer.textContent = validacionTelefono.mensaje;
                        if (formValido) telefonoInput.focus();
                    }
                }
            }
            if (emailInput) {
                const email = emailInput.value.trim();
                if (email) {
                    const validacionEmail = validarEmailFrontend(email);
                    if (!validacionEmail.valido) {
                        formValido = false;
                        emailInput.classList.add('is-invalid');
                        if (emailErrorContainer) emailErrorContainer.textContent = validacionEmail.mensaje;
                        if (formValido) emailInput.focus();
                    }
                }
            }
            if (!formValido) {
                event.preventDefault();
            }
        });
    }
});
</script> 