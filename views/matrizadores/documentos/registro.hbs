{{! Registro de Documento - Matrizadores }}
{{! layout: 'matrizador' }}
<div class="container mt-4">
  <h2>Registrar Documento (Matrizadores)</h2>
  <div class="alert alert-info">Aquí se mostrará el formulario para registrar un documento como matrizador.</div>
</div>

<div class="card">
  <div class="card-header">
    <i class="fas fa-file-alt me-2"></i> Registro de Nuevo Documento
  </div>
  <div class="card-body">
    <form id="registroDocumentoForm" action="/matrizador/documentos/registro" method="POST">
      
      <!-- Sección de información del documento -->
      <div class="row">
        <div class="col-12 mb-3">
          <h5 class="border-bottom pb-2">Información del Documento</h5>
        </div>
        
        <div class="col-md-4 mb-3">
          <label for="codigoBarras" class="form-label">Código de documento</label>
          <div class="input-group">
            <input type="text" class="form-control" id="codigoBarras" name="codigoBarras" 
              value="{{formData.codigoBarras}}" required>
          </div>
          <div class="form-text">Ingrese el código completo del documento</div>
        </div>
        
        <div class="col-md-4 mb-3">
          <label for="tipoDocumento" class="form-label">Tipo de Documento</label>
          <select class="form-select" id="tipoDocumento" name="tipoDocumento" required>
            <option value="" selected disabled>Seleccionar tipo...</option>
            <option value="Escritura Pública">Escritura Pública</option>
            <option value="Reconocimiento de Firma">Reconocimiento de Firma</option>
            <option value="Arrendamiento">Arrendamiento</option>
            <option value="Certificación">Certificación</option>
            <option value="Copia de Archivo">Copia de Archivo</option>
            <option value="Marginación">Marginación</option>
            <option value="Otro">Otro</option>
          </select>
        </div>
        
        <div class="col-md-12 mb-3">
          <label for="notas" class="form-label">Notas o Descripción</label>
          <textarea class="form-control" id="notas" name="notas" rows="2">{{formData.notas}}</textarea>
        </div>
      </div>
      
      <!-- Sección de información del cliente -->
      <div class="row mt-4">
        <div class="col-12 mb-3">
          <h5 class="border-bottom pb-2">Información del Cliente</h5>
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="nombreCliente" class="form-label">Nombre Completo</label>
          <input type="text" class="form-control" id="nombreCliente" name="nombreCliente" required>
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="identificacionCliente" class="form-label">Identificación</label>
          <input type="text" class="form-control" id="identificacionCliente" name="identificacionCliente" required>
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="emailCliente" class="form-label">Correo Electrónico</label>
          <input type="email" class="form-control" id="emailCliente" name="emailCliente">
        </div>
        
        <div class="col-md-6 mb-3">
          <label for="telefonoCliente" class="form-label">Teléfono</label>
          <input type="tel" class="form-control" id="telefonoCliente" name="telefonoCliente" pattern="[0-9+\-\s()]*" inputmode="numeric">
          <div class="form-text">Para notificaciones de entrega</div>
        </div>
      </div>
      
      <!-- Sección de comparecientes adicionales -->
      <div class="row mt-4">
        <div class="col-12 mb-3">
          <h5 class="border-bottom pb-2">
            Comparecientes Adicionales
            <button type="button" id="agregarCompareciente" class="btn btn-sm btn-outline-primary float-end">
              <i class="fas fa-plus"></i> Agregar
            </button>
          </h5>
        </div>
        
        <div id="comparecientesContainer" class="col-12">
          <!-- Aquí se agregarán dinámicamente los comparecientes -->
        </div>
      </div>
      
      <!-- El matrizador actual se asigna automáticamente -->
      <input type="hidden" name="idMatrizador" value="{{usuario.id}}">
      
      <!-- Nuevos campos de facturación y pago -->
      <div class="card mb-4">
        <div class="card-header bg-light">
          <h5 class="card-title mb-0">Información de Facturación</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-4 mb-3">
              <label for="numeroFactura" class="form-label">Número de Factura</label>
              <input type="text" class="form-control" id="numeroFactura" name="numeroFactura" 
                value="{{formData.numeroFactura}}">
            </div>
            
            <div class="col-md-4 mb-3">
              <label for="valorFactura" class="form-label">Valor de Factura</label>
              <div class="input-group">
                <span class="input-group-text">$</span>
                <input type="number" step="0.01" class="form-control" id="valorFactura" 
                  name="valorFactura" value="{{formData.valorFactura}}">
              </div>
            </div>
            
            <div class="col-md-4 mb-3">
              <label for="fechaFactura" class="form-label">Fecha de Factura</label>
              <input type="date" class="form-control" id="fechaFactura" name="fechaFactura" 
                value="{{formData.fechaFactura}}">
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="estadoPago" class="form-label">Estado de Pago</label>
              <select class="form-select" id="estadoPago" name="estadoPago">
                <option value="pendiente" {{#if (eq formData.estadoPago "pendiente")}}selected{{/if}}>Pendiente</option>
                <option value="pagado" {{#if (eq formData.estadoPago "pagado")}}selected{{/if}}>Pagado</option>
              </select>
            </div>
            
            <div class="col-md-6 mb-3">
              <label for="metodoPago" class="form-label">Método de Pago</label>
              <select class="form-select" id="metodoPago" name="metodoPago">
                <option value="" {{#if (eq formData.metodoPago "")}}selected{{/if}}>Seleccione...</option>
                <option value="efectivo" {{#if (eq formData.metodoPago "efectivo")}}selected{{/if}}>Efectivo</option>
                <option value="tarjeta" {{#if (eq formData.metodoPago "tarjeta")}}selected{{/if}}>Tarjeta</option>
                <option value="transferencia" {{#if (eq formData.metodoPago "transferencia")}}selected{{/if}}>Transferencia</option>
                <option value="otro" {{#if (eq formData.metodoPago "otro")}}selected{{/if}}>Otro</option>
              </select>
            </div>
          </div>
        </div>
      </div>

      <!-- Opciones de notificación -->
      <div class="card mb-4">
        <div class="card-header bg-light">
          <h5 class="card-title mb-0">Opciones de Notificación</h5>
        </div>
        <div class="card-body">
          <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="omitirNotificacion" name="omitirNotificacion" value="true" 
              {{#if formData.omitirNotificacion}}checked{{/if}}>
            <label class="form-check-label" for="omitirNotificacion">
              Omitir envío de notificaciones
            </label>
          </div>
          
          <div id="motivoOmisionContainer" class="{{#unless formData.omitirNotificacion}}d-none{{/unless}}">
            <div class="mb-3">
              <label for="motivoOmision" class="form-label">Motivo de omisión</label>
              <select class="form-select" id="motivoOmision" name="motivoOmision">
                <option value="entrega_directa" {{#if (eq formData.motivoOmision "entrega_directa")}}selected{{/if}}>Entrega directa</option>
                <option value="parte_expediente" {{#if (eq formData.motivoOmision "parte_expediente")}}selected{{/if}}>Parte de expediente</option>
                <option value="cliente_rechaza" {{#if (eq formData.motivoOmision "cliente_rechaza")}}selected{{/if}}>Cliente rechaza</option>
                <option value="otro" {{#if (eq formData.motivoOmision "otro")}}selected{{/if}}>Otro</option>
              </select>
            </div>
            
            <div id="detalleOmisionContainer" class="{{#unless (eq formData.motivoOmision 'otro')}}d-none{{/unless}} mb-3">
              <label for="detalleOmision" class="form-label">Detalle del motivo</label>
              <textarea class="form-control" id="detalleOmision" name="detalleOmision" rows="2">{{formData.detalleOmision}}</textarea>
            </div>
          </div>
        </div>
      </div>
      
      <div class="d-flex justify-content-end mt-4">
        <button type="button" class="btn btn-outline-secondary me-2" onclick="window.location.href='/matrizador/documentos'">
          Cancelar
        </button>
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-save me-1"></i> Registrar Documento
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Template para nuevos comparecientes -->
<template id="comparecienteTemplate">
  <div class="compareciente-item border rounded p-3 mb-3">
    <div class="d-flex justify-content-between mb-2">
      <h6 class="mb-0">Compareciente #<span class="numero-compareciente"></span></h6>
      <button type="button" class="btn btn-sm btn-outline-danger eliminar-compareciente">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="row">
      <div class="col-md-6 mb-3">
        <label class="form-label">Nombre Completo</label>
        <input type="text" class="form-control" name="comparecientes[__index__][nombre]" required>
      </div>
      <div class="col-md-6 mb-3">
        <label class="form-label">Identificación</label>
        <input type="text" class="form-control" name="comparecientes[__index__][identificacion]" required>
      </div>
      <div class="col-md-12 mb-0">
        <label class="form-label">Rol o participación</label>
        <input type="text" class="form-control" name="comparecientes[__index__][rol]">
      </div>
    </div>
  </div>
</template>

{{#if errorCodeDuplicado}}
<!-- Modal Código Duplicado -->
<div class="modal fade" id="modalCodigoDuplicado" tabindex="-1" aria-labelledby="modalCodigoDuplicadoLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="modalCodigoDuplicadoLabel"><i class="fas fa-exclamation-triangle me-2"></i> Código de Barras Duplicado</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>{{modalErrorMessage}}</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="btnEntendidoCodigoDuplicado">Entendido</button>
      </div>
    </div>
  </div>
</div>
{{/if}}

<script>
  // Función de validación de teléfono (reutilizable)
  function validarTelefonoFrontend(telefono) {
    if (!telefono) return { valido: true };
    // Eliminar todos los caracteres no numéricos
    const telefonoLimpio = telefono.replace(/\D/g, '');
    if (telefonoLimpio.length !== 10) {
      return { valido: false, mensaje: "El número telefónico debe contener exactamente 10 dígitos. Se ignorarán espacios, guiones y otros caracteres no numéricos." };
    }
    return { valido: true };
  }

  // Función de validación de email (reutilizable)
  function validarEmailFrontend(email) {
    if (!email) return { valido: true };
    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;
    if (!regex.test(email)) {
      return { valido: false, mensaje: "Ingrese un correo electrónico válido (ejemplo@dominio.com)." };
    }
    return { valido: true };
  }

  document.addEventListener('DOMContentLoaded', function() {
    // Manejo de comparecientes
    const comparecientesContainer = document.getElementById('comparecientesContainer');
    const agregarComparecienteBtn = document.getElementById('agregarCompareciente');
    const comparecienteTemplate = document.getElementById('comparecienteTemplate');
    let contadorComparecientes = 0;
    
    agregarComparecienteBtn.addEventListener('click', function() {
      // Clonar el template
      const nuevoCompareciente = document.importNode(comparecienteTemplate.content, true);
      
      // Actualizar índice y número
      contadorComparecientes++;
      nuevoCompareciente.querySelector('.numero-compareciente').textContent = contadorComparecientes;
      
      // Actualizar nombres de campos reemplazando __index__ con el contador actual
      const inputs = nuevoCompareciente.querySelectorAll('input');
      inputs.forEach(input => {
        input.name = input.name.replace('__index__', contadorComparecientes - 1);
      });
      
      // Agregar evento para eliminar
      const btnEliminar = nuevoCompareciente.querySelector('.eliminar-compareciente');
      btnEliminar.addEventListener('click', function() {
        this.closest('.compareciente-item').remove();
      });
      
      // Agregar al contenedor
      comparecientesContainer.appendChild(nuevoCompareciente);
    });
    
    // Validación del formulario
    const form = document.getElementById('registroDocumentoForm');
    form.addEventListener('submit', function(event) {
      const telefono = telefonoInput.value.trim();
      if (telefono) {
        // Actualizar el valor del input para eliminar caracteres no numéricos
        telefonoInput.value = telefono.replace(/\D/g, '');
        const validacion = validarTelefonoFrontend(telefonoInput.value);
        if (!validacion.valido) {
          event.preventDefault();
          telefonoInput.classList.add('is-invalid');
          if (errorContainer) errorContainer.textContent = validacion.mensaje;
          telefonoInput.focus();
        }
      }
    });

    {{#if errorCodeDuplicado}}
    var modalCodigoDuplicado = new bootstrap.Modal(document.getElementById('modalCodigoDuplicado'), {
        keyboard: false,
        backdrop: 'static'
    });
    modalCodigoDuplicado.show();

    // Al cerrar el modal, enfocar el campo de código de barras
    document.getElementById('modalCodigoDuplicado').addEventListener('hidden.bs.modal', function () {
        const codigoBarrasInput = document.getElementById('codigoBarras');
        if (codigoBarrasInput) {
            codigoBarrasInput.focus();
            codigoBarrasInput.select(); // Opcional: seleccionar el texto
        }
    });
    {{/if}}

    const telefonoInput = document.getElementById('telefonoCliente');
    const emailInput = document.getElementById('emailCliente');
    const errorContainer = telefonoInput ? telefonoInput.parentElement.querySelector('.invalid-feedback') : null;

    if (telefonoInput) {
      telefonoInput.addEventListener('input', function() {
        const telefono = telefonoInput.value.trim();
        if (telefono) {
          // Solo eliminar caracteres no numéricos al validar, no al escribir
          const telefonoLimpio = telefono.replace(/\D/g, '');
          const validacion = validarTelefonoFrontend(telefonoLimpio);
          if (!validacion.valido) {
            telefonoInput.classList.add('is-invalid');
            if (errorContainer) errorContainer.textContent = validacion.mensaje;
          } else {
            telefonoInput.classList.remove('is-invalid');
            if (errorContainer) errorContainer.textContent = '';
          }
        } else {
          telefonoInput.classList.remove('is-invalid');
          if (errorContainer) errorContainer.textContent = '';
        }
      });
    }

    // Manejo de visibilidad para campos de omisión de notificaciones
    const omitirNotificacionCheckbox = document.getElementById('omitirNotificacion');
    const motivoOmisionContainer = document.getElementById('motivoOmisionContainer');
    const motivoOmisionSelect = document.getElementById('motivoOmision');
    const detalleOmisionContainer = document.getElementById('detalleOmisionContainer');
    
    if (omitirNotificacionCheckbox) {
      omitirNotificacionCheckbox.addEventListener('change', function() {
        motivoOmisionContainer.classList.toggle('d-none', !this.checked);
      });
    }
    
    if (motivoOmisionSelect) {
      motivoOmisionSelect.addEventListener('change', function() {
        detalleOmisionContainer.classList.toggle('d-none', this.value !== 'otro');
      });
    }
  });
</script> 