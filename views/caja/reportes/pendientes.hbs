<!-- Botón Volver -->
<div class="mb-3">
  <a href="/caja/reportes" class="btn btn-outline-secondary">
    <i class="fas fa-arrow-left me-1"></i> Volver a Reportes
  </a>
</div>

<!-- Filtros del Reporte -->
<div class="card mb-4">
  <div class="card-header">
    <i class="fas fa-filter me-2"></i> Filtros
  </div>
  <div class="card-body">
    <form method="GET" action="/caja/reportes/pendientes">
      <div class="row">
        <div class="col-md-3">
          <label for="antiguedad" class="form-label">Filtrar por Antigüedad</label>
          <select class="form-select" id="antiguedad" name="antiguedad">
            <option value="" {{#unless filtros.antiguedad}}selected{{/unless}}>Todos</option>
            <option value="1-7" {{#if (eq filtros.antiguedad '1-7')}}selected{{/if}}>1-7 días</option>
            <option value="8-15" {{#if (eq filtros.antiguedad '8-15')}}selected{{/if}}>8-15 días</option>
            <option value="16-60" {{#if (eq filtros.antiguedad '16-60')}}selected{{/if}}>16-60 días</option>
            <option value="60+" {{#if (eq filtros.antiguedad '60+')}}selected{{/if}}>Más de 60 días</option>
          </select>
        </div>
        <div class="col-md-3">
          <label for="matrizador" class="form-label">Matrizador</label>
          <select class="form-select" id="matrizador" name="matrizador">
            <option value="" {{#unless filtros.matrizador}}selected{{/unless}}>Todos</option>
            {{#each matrizadores}}
            <option value="{{this.id}}" {{#if (eq ../filtros.matrizador this.id)}}selected{{/if}}>{{this.nombre}}</option>
            {{/each}}
          </select>
        </div>
        <div class="col-md-3">
          <label for="ordenar" class="form-label">Ordenar por</label>
          <select class="form-select" id="ordenar" name="ordenar">
            <option value="antiguedad" {{#if (eq filtros.ordenar 'antiguedad')}}selected{{/if}}>Más Antiguos</option>
            <option value="monto" {{#if (eq filtros.ordenar 'monto')}}selected{{/if}}>Mayor Monto</option>
            <option value="fecha" {{#if (eq filtros.ordenar 'fecha')}}selected{{/if}}>Fecha Reciente</option>
          </select>
        </div>
        <div class="col-md-3 d-flex align-items-end">
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-search me-1"></i> Aplicar Filtros
          </button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- Reporte de Documentos Pendientes -->
<div class="card mb-4">
  <div class="card-header d-flex justify-content-between align-items-center">
    <span><i class="fas fa-clock me-2"></i> Documentos Pendientes de Pago</span>
    <span class="badge bg-warning">{{stats.totalPendientes}} documentos pendientes</span>
  </div>
  <div class="card-body">
    <!-- Estadísticas por Antigüedad -->
    <div class="row mb-4">
      <div class="col-md-3">
        <div class="card bg-success text-white h-100">
          <div class="card-body text-center">
            <h6 class="card-title">1-7 días</h6>
            <h2 class="display-6">{{stats.rango1_7}}</h2>
            <p class="mb-0">${{stats.monto1_7}}</p>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="card bg-warning text-white h-100">
          <div class="card-body text-center">
            <h6 class="card-title">8-15 días</h6>
            <h2 class="display-6">{{stats.rango8_15}}</h2>
            <p class="mb-0">${{stats.monto8_15}}</p>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="card bg-danger text-white h-100">
          <div class="card-body text-center">
            <h6 class="card-title">16-60 días</h6>
            <h2 class="display-6">{{stats.rango16_60}}</h2>
            <p class="mb-0">${{stats.monto16_60}}</p>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="card bg-dark text-white h-100">
          <div class="card-body text-center">
            <h6 class="card-title">+60 días</h6>
            <h2 class="display-6">{{stats.rango60}}</h2>
            <p class="mb-0">${{stats.monto60}}</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Gráfico de Distribución por Antigüedad (FIJO - SIN LOOPS INFINITOS) -->
    <div class="row mb-4">
      <div class="col-md-6">
        <div class="card h-100">
          <div class="card-header">
            <i class="fas fa-chart-pie me-2"></i> Distribución por Antigüedad
          </div>
          <div class="card-body">
            {{#if (or stats.rango1_7 stats.rango8_15 stats.rango16_60 stats.rango60)}}
            <div style="position: relative; height: 300px; width: 100%; max-height: 300px; overflow: hidden;">
              <canvas id="graficoAntiguedad"></canvas>
            </div>
            {{else}}
            <div class="text-center py-5">
              <i class="fas fa-chart-pie fa-3x text-muted mb-3"></i>
              <p>No hay documentos pendientes</p>
            </div>
            {{/if}}
          </div>
        </div>
      </div>
      <div class="col-md-6">
        <div class="card h-100">
          <div class="card-header">
            <i class="fas fa-chart-bar me-2"></i> Monto por Antigüedad
          </div>
          <div class="card-body">
            {{#if (or stats.monto1_7 stats.monto8_15 stats.monto16_60 stats.monto60)}}
            <div style="position: relative; height: 300px; width: 100%; max-height: 300px; overflow: hidden;">
              <canvas id="graficoMontos"></canvas>
            </div>
            {{else}}
            <div class="text-center py-5">
              <i class="fas fa-chart-bar fa-3x text-muted mb-3"></i>
              <p>No hay montos pendientes</p>
            </div>
            {{/if}}
          </div>
        </div>
      </div>
    </div>

    <!-- Acciones Masivas -->
    <div class="row mb-4">
      <div class="col-md-12">
        <div class="card">
          <div class="card-header">
            <i class="fas fa-tools me-2"></i> Acciones Masivas
          </div>
          <div class="card-body">
            <div class="d-flex gap-3">
              <button type="button" class="btn btn-primary" onclick="recordarMasivo('todos')">
                <i class="fas fa-envelope me-1"></i> Recordar Todos
              </button>
              <button type="button" class="btn btn-warning" onclick="recordarMasivo('criticos')">
                <i class="fas fa-exclamation-triangle me-1"></i> Recordar Críticos (+60 días)
              </button>
              <button type="button" class="btn btn-info" onclick="exportarPendientes()">
                <i class="fas fa-file-excel me-1"></i> Exportar a Excel
              </button>
              <button type="button" class="btn btn-success" onclick="generarReportePDF()">
                <i class="fas fa-file-pdf me-1"></i> Generar PDF
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Tabla de Documentos Pendientes -->
    <div class="card">
      <div class="card-header">
        <i class="fas fa-table me-2"></i> Listado de Documentos Pendientes
      </div>
      <div class="card-body">
        {{#if documentosPendientes.length}}
        <div class="table-responsive">
          <table class="table table-striped table-hover">
            <thead class="table-light">
              <tr>
                <th><input type="checkbox" id="selectAll" onchange="toggleSelectAll()"></th>
                <th>Código</th>
                <th>Cliente</th>
                <th>Tipo</th>
                <th>Fecha Factura</th>
                <th class="text-end">Valor</th>
                <th>Antigüedad</th>
                <th>Matrizador</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody>
              {{#each documentosPendientes}}
              <tr class="{{#if (gte this.diasAntiguedad 60)}}table-danger{{else if (gte this.diasAntiguedad 16)}}table-warning{{else if (gte this.diasAntiguedad 8)}}table-warning{{else}}table-success{{/if}}">
                <td><input type="checkbox" class="documento-checkbox" value="{{this.id}}"></td>
                <td><small class="font-monospace">{{this.codigoBarras}}</small></td>
                <td>{{this.nombreCliente}}</td>
                <td>{{this.tipoDocumento}}</td>
                <td>{{formatDate this.fechaFactura}}</td>
                <td class="text-end">${{formatMoney this.valorFactura}}</td>
                <td>
                  <span class="badge {{#if (gte this.diasAntiguedad 60)}}bg-danger{{else if (gte this.diasAntiguedad 16)}}bg-warning{{else if (gte this.diasAntiguedad 8)}}bg-warning{{else}}bg-success{{/if}}">
                    {{this.diasAntiguedad}} días
                  </span>
                </td>
                <td>{{this.matrizador}}</td>
                <td>
                  <div class="btn-group btn-group-sm" role="group">
                    <a href="/caja/documentos/detalle/{{this.id}}" class="btn btn-outline-primary" title="Ver detalle">
                      <i class="fas fa-eye"></i>
                    </a>
                    <button type="button" class="btn btn-outline-warning" onclick="recordarPago({{this.id}})" title="Enviar recordatorio">
                      <i class="fas fa-envelope"></i>
                    </button>
                    <button type="button" class="btn btn-outline-success" onclick="marcarComoPagado({{this.id}})" title="Marcar como pagado">
                      <i class="fas fa-check"></i>
                    </button>
                  </div>
                </td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
        
        <!-- Paginación -->
        {{#if pagination}}
        <nav aria-label="Navegación de páginas">
          <ul class="pagination justify-content-center">
            {{#if pagination.prev}}
            <li class="page-item">
              <a class="page-link" href="?page={{pagination.prev}}{{#if filtros.antiguedad}}&antiguedad={{filtros.antiguedad}}{{/if}}{{#if filtros.matrizador}}&matrizador={{filtros.matrizador}}{{/if}}{{#if filtros.ordenar}}&ordenar={{filtros.ordenar}}{{/if}}">Anterior</a>
            </li>
            {{/if}}
            
            {{#each pagination.pages}}
            <li class="page-item {{#if this.active}}active{{/if}}">
              <a class="page-link" href="?page={{this.page}}{{#if ../filtros.antiguedad}}&antiguedad={{../filtros.antiguedad}}{{/if}}{{#if ../filtros.matrizador}}&matrizador={{../filtros.matrizador}}{{/if}}{{#if ../filtros.ordenar}}&ordenar={{../filtros.ordenar}}{{/if}}">{{this.page}}</a>
            </li>
            {{/each}}
            
            {{#if pagination.next}}
            <li class="page-item">
              <a class="page-link" href="?page={{pagination.next}}{{#if filtros.antiguedad}}&antiguedad={{filtros.antiguedad}}{{/if}}{{#if filtros.matrizador}}&matrizador={{filtros.matrizador}}{{/if}}{{#if filtros.ordenar}}&ordenar={{filtros.ordenar}}{{/if}}">Siguiente</a>
            </li>
            {{/if}}
          </ul>
        </nav>
        {{/if}}
        
        {{else}}
        <div class="text-center py-5">
          <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
          <h5>¡Excelente! No hay documentos pendientes</h5>
          <p>Todos los documentos han sido pagados o no hay documentos en el sistema.</p>
        </div>
        {{/if}}
      </div>
    </div>
  </div>
</div>

<!-- Toast Container para Notificaciones -->
<div class="toast-container position-fixed bottom-0 end-0 p-3" id="toastContainer"></div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    
    // ====== GRÁFICOS ESTÁTICOS (SIN LOOPS INFINITOS) ======
    
    // Datos estáticos extraídos del backend
    const statsData = {
      rango1_7: {{stats.rango1_7}},
      rango8_15: {{stats.rango8_15}},
      rango16_60: {{stats.rango16_60}},
      rango60: {{stats.rango60}},
      monto1_7: {{stats.monto1_7}},
      monto8_15: {{stats.monto8_15}},
      monto16_60: {{stats.monto16_60}},
      monto60: {{stats.monto60}}
    };
    
    // Gráfico de distribución por antigüedad (PIE CHART)
    if (statsData.rango1_7 || statsData.rango8_15 || statsData.rango16_60 || statsData.rango60) {
      const ctxAntiguedad = document.getElementById('graficoAntiguedad').getContext('2d');
      
      new Chart(ctxAntiguedad, {
        type: 'doughnut',
        data: {
          labels: ['1-7 días', '8-15 días', '16-60 días', '+60 días'],
          datasets: [{
            data: [statsData.rango1_7, statsData.rango8_15, statsData.rango16_60, statsData.rango60],
            backgroundColor: [
              'rgba(25, 135, 84, 0.8)',
              'rgba(255, 193, 7, 0.8)', 
              'rgba(220, 53, 69, 0.8)',
              'rgba(108, 117, 125, 0.8)'
            ],
            borderColor: '#fff',
            borderWidth: 2
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'bottom'
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  const total = context.dataset.data.reduce((acc, val) => acc + val, 0);
                  const percentage = Math.round((context.raw / total) * 100);
                  return `${context.label}: ${context.raw} documentos (${percentage}%)`;
                }
              }
            }
          }
        }
      });
    }
    
    // Gráfico de montos por antigüedad (BAR CHART)
    if (statsData.monto1_7 || statsData.monto8_15 || statsData.monto16_60 || statsData.monto60) {
      const ctxMontos = document.getElementById('graficoMontos').getContext('2d');
      
      new Chart(ctxMontos, {
        type: 'bar',
        data: {
          labels: ['1-7 días', '8-15 días', '16-60 días', '+60 días'],
          datasets: [{
            label: 'Monto Pendiente',
            data: [statsData.monto1_7, statsData.monto8_15, statsData.monto16_60, statsData.monto60],
            backgroundColor: [
              'rgba(25, 135, 84, 0.8)',
              'rgba(255, 193, 7, 0.8)',
              'rgba(220, 53, 69, 0.8)',
              'rgba(108, 117, 125, 0.8)'
            ],
            borderColor: [
              'rgba(25, 135, 84, 1)',
              'rgba(255, 193, 7, 1)',
              'rgba(220, 53, 69, 1)',
              'rgba(108, 117, 125, 1)'
            ],
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  return `${context.label}: $${context.raw.toLocaleString()}`;
                }
              }
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                callback: function(value) {
                  return '$' + value.toLocaleString();
                }
              }
            }
          }
        }
      });
    }
    
    // ====== FUNCIONES DE UTILIDAD ======
    
    // Toggle select all checkboxes
    window.toggleSelectAll = function() {
      const selectAll = document.getElementById('selectAll');
      const checkboxes = document.querySelectorAll('.documento-checkbox');
      checkboxes.forEach(checkbox => {
        checkbox.checked = selectAll.checked;
      });
    };
    
    // Función para recordar pago individual (ya existente)
    window.recordarPago = function(documentoId) {
      fetch(`/caja/reportes/recordar-pago/${documentoId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          mostrarToast('success', data.message || 'Recordatorio enviado exitosamente');
        } else {
          mostrarToast('error', data.message || 'Error al enviar recordatorio');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        mostrarToast('error', 'Error de conexión al enviar recordatorio');
      });
    };
    
    // Función para recordatorios masivos
    window.recordarMasivo = function(tipo) {
      let documentosIds = [];
      
      if (tipo === 'todos') {
        documentosIds = Array.from(document.querySelectorAll('.documento-checkbox:checked')).map(cb => cb.value);
        if (documentosIds.length === 0) {
          mostrarToast('warning', 'Selecciona al menos un documento');
          return;
        }
      } else if (tipo === 'criticos') {
        // Todos los documentos con más de 60 días (filas con class table-danger)
        documentosIds = Array.from(document.querySelectorAll('.table-danger .documento-checkbox')).map(cb => cb.value);
        if (documentosIds.length === 0) {
          mostrarToast('info', 'No hay documentos críticos (+60 días) para recordar');
          return;
        }
      }
      
      fetch('/caja/reportes/recordar-masivo', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ documentosIds, tipo })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          mostrarToast('success', `${data.enviados} recordatorios enviados exitosamente`);
        } else {
          mostrarToast('error', data.message || 'Error al enviar recordatorios masivos');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        mostrarToast('error', 'Error de conexión al enviar recordatorios');
      });
    };
    
    // Función para marcar como pagado
    window.marcarComoPagado = function(documentoId) {
      if (confirm('¿Estás seguro de marcar este documento como pagado?')) {
        fetch(`/caja/documentos/marcar-pagado/${documentoId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            mostrarToast('success', 'Documento marcado como pagado');
            // Recargar la página para actualizar la lista
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            mostrarToast('error', data.message || 'Error al marcar como pagado');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          mostrarToast('error', 'Error de conexión');
        });
      }
    };
    
    // Función para exportar a Excel
    window.exportarPendientes = function() {
      const documentosSeleccionados = Array.from(document.querySelectorAll('.documento-checkbox:checked')).map(cb => cb.value);
      
      let url = '/caja/reportes/exportar-pendientes';
      if (documentosSeleccionados.length > 0) {
        url += '?ids=' + documentosSeleccionados.join(',');
      }
      
      window.open(url, '_blank');
      mostrarToast('info', 'Descargando archivo Excel...');
    };
    
    // Función para generar PDF
    window.generarReportePDF = function() {
      window.open('/caja/reportes/pendientes-pdf', '_blank');
      mostrarToast('info', 'Generando reporte PDF...');
    };
    
    // Función para mostrar toasts (ya existente pero mejorada)
    function mostrarToast(tipo, mensaje) {
      const toastContainer = document.getElementById('toastContainer');
      const toastId = 'toast-' + Date.now();
      
      const toastColors = {
        success: 'text-bg-success',
        error: 'text-bg-danger',
        warning: 'text-bg-warning',
        info: 'text-bg-info'
      };
      
      const toastIcons = {
        success: 'fas fa-check-circle',
        error: 'fas fa-exclamation-circle',
        warning: 'fas fa-exclamation-triangle',
        info: 'fas fa-info-circle'
      };
      
      const toastHtml = `
        <div id="${toastId}" class="toast ${toastColors[tipo] || 'text-bg-primary'}" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true" data-bs-delay="4000">
          <div class="toast-header">
            <i class="${toastIcons[tipo] || 'fas fa-info'} me-2"></i>
            <strong class="me-auto">Sistema Notaría</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
          </div>
          <div class="toast-body">
            ${mensaje}
          </div>
        </div>
      `;
      
      toastContainer.insertAdjacentHTML('beforeend', toastHtml);
      
      const toastElement = document.getElementById(toastId);
      const toast = new bootstrap.Toast(toastElement);
      toast.show();
      
      // Remover el toast del DOM después de que se oculte
      toastElement.addEventListener('hidden.bs.toast', function() {
        toastElement.remove();
      });
    }
  });
</script> 