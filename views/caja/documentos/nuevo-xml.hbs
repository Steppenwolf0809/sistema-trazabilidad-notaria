<div class="card">
  <div class="card-header">
    <i class="fas fa-file-code me-2"></i> Cargar Documento XML
  </div>
  <div class="card-body">
    <!-- Secci√≥n inicial de carga -->
    <div id="seccion-carga" class="mb-4">
      <div class="alert alert-info">
        <div class="d-flex align-items-center">
          <div class="me-3">
            <i class="fas fa-info-circle fa-2x"></i>
          </div>
          <div>
            <h5 class="alert-heading mb-1">Cargar Documento desde XML</h5>
            <p class="mb-0">Cargue el archivo XML de facturaci√≥n electr√≥nica para extraer autom√°ticamente los datos del documento.</p>
            <small class="text-info">‚úÖ Vista previa antes del registro - Podr√° editar los datos antes de confirmar</small>
          </div>
        </div>
      </div>
      
      <form id="xmlUploadForm" action="/caja/documentos/procesar-xml" method="POST" enctype="multipart/form-data">
        <div class="mb-4">
          <label for="xmlFile" class="form-label">Seleccionar archivo XML</label>
          <input type="file" class="form-control" id="xmlFile" name="xmlFile" accept=".xml" required>
          <div class="form-text">Solo se permiten archivos con extensi√≥n .xml (m√°ximo 5MB)</div>
        </div>
        
        <div class="d-flex justify-content-end">
          <button type="button" class="btn btn-outline-secondary me-2" onclick="window.location.href='/caja/documentos'">
            Volver a Documentos
          </button>
          <button type="submit" class="btn btn-primary" id="btnProcesar">
            <i class="fas fa-search me-1"></i> Procesar y Vista Previa
          </button>
        </div>
      </form>
    </div>

    <!-- Vista previa del documento (similar al editor de matrizador) -->
    <div id="vista-previa" style="display: none;">
      <div class="alert alert-success">
        <h6><i class="fas fa-check-circle me-2"></i>XML Procesado Exitosamente</h6>
        <p class="mb-0">Revise y confirme los datos extra√≠dos antes del registro final.</p>
      </div>

      <form id="formConfirmarRegistro">
        <!-- Informaci√≥n principal del documento -->
        <div class="row mb-4">
          <div class="col-md-6">
            <h6 class="text-primary">Tipo de Documento</h6>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="tipoDocumento" id="tipoProtocolo" value="Protocolo">
              <label class="form-check-label" for="tipoProtocolo">üìã Protocolo</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="tipoDocumento" id="tipoDiligencias" value="Diligencias">
              <label class="form-check-label" for="tipoDiligencias">üìë Diligencias</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="tipoDocumento" id="tipoCertificaciones" value="Certificaciones">
              <label class="form-check-label" for="tipoCertificaciones">üèÜ Certificaciones</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="tipoDocumento" id="tipoArrendamientos" value="Arrendamientos">
              <label class="form-check-label" for="tipoArrendamientos">üè† Arrendamientos</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="tipoDocumento" id="tipoOtros" value="Otros">
              <label class="form-check-label" for="tipoOtros">üìÑ Otros</label>
            </div>
          </div>
          
          <div class="col-md-6">
            <h6 class="text-primary">C√≥digo de Barras</h6>
            <input type="text" class="form-control" id="codigoBarras" name="codigoBarras" readonly style="background-color: #f8f9fa;">
            <small class="text-muted">El c√≥digo de barras no se puede modificar</small>
          </div>
        </div>

        <!-- Informaci√≥n del Cliente -->
        <h6 class="text-primary">Informaci√≥n del Cliente</h6>
        <div class="row mb-4">
          <div class="col-md-6">
            <label for="nombreCliente" class="form-label">Nombre del Cliente</label>
            <input type="text" class="form-control" id="nombreCliente" name="nombreCliente" required>
          </div>
          <div class="col-md-6">
            <label for="identificacionCliente" class="form-label">Identificaci√≥n del Cliente</label>
            <input type="text" class="form-control" id="identificacionCliente" name="identificacionCliente" required>
          </div>
        </div>

        <div class="row mb-4">
          <div class="col-md-6">
            <label for="emailCliente" class="form-label">Email del Cliente</label>
            <input type="email" class="form-control" id="emailCliente" name="emailCliente">
          </div>
          <div class="col-md-6">
            <label for="telefonoCliente" class="form-label">Tel√©fono del Cliente</label>
            <input type="text" class="form-control" id="telefonoCliente" name="telefonoCliente">
          </div>
        </div>

        <!-- Informaci√≥n Financiera -->
        <h6 class="text-primary">Informaci√≥n Financiera</h6>
        <div class="row mb-4">
          <div class="col-md-4">
            <label for="numeroFactura" class="form-label">N√∫mero de Factura</label>
            <input type="text" class="form-control" id="numeroFactura" name="numeroFactura">
          </div>
          <div class="col-md-4">
            <label for="valorFactura" class="form-label">Valor de Factura</label>
            <input type="number" class="form-control" id="valorFactura" name="valorFactura" step="0.01">
          </div>
          <div class="col-md-4">
            <label for="fechaFactura" class="form-label">Fecha de Factura</label>
            <input type="date" class="form-control" id="fechaFactura" name="fechaFactura">
          </div>
        </div>

        <!-- Selecci√≥n de Matrizador -->
        <h6 class="text-primary">Asignaci√≥n de Matrizador</h6>
        <div class="row mb-4">
          <div class="col-md-8">
            <label for="idMatrizador" class="form-label">Seleccionar Matrizador</label>
            <select class="form-select" id="idMatrizador" name="idMatrizador" required>
              <option value="">Seleccione un matrizador</option>
            </select>
            <small class="text-info" id="matrizadorSugerido" style="display: none;">
              üí° Matrizador sugerido del XML: <span id="nombreMatrizadorXML"></span>
            </small>
          </div>
        </div>

        <!-- Detalles Adicionales -->
        <h6 class="text-primary">Detalles Adicionales</h6>
        <div class="mb-4">
          <label for="observaciones" class="form-label">Notas</label>
          <textarea class="form-control" id="observaciones" name="observaciones" rows="3" placeholder="Observaciones adicionales..."></textarea>
        </div>

        <!-- NUEVA SECCI√ìN: Gesti√≥n de Pago Inmediato -->
        <div class="card mb-4" id="seccion-gestion-pago">
          <div class="card-header bg-success text-white py-2">
            <h6 class="mb-0">
              <i class="fas fa-money-bill-wave me-2"></i>üí∞ GESTI√ìN DE PAGO
            </h6>
          </div>
          <div class="card-body">
            <!-- Toggle para activar pago inmediato -->
            <div class="d-flex align-items-center justify-content-between mb-3">
              <div>
                <h6 class="mb-1">¬øEl cliente paga en este momento?</h6>
                <small class="text-muted">Active esta opci√≥n si el cliente realiza el pago al crear el documento</small>
              </div>
              <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="togglePagoInmediato" style="transform: scale(1.5);">
                <label class="form-check-label fw-bold" for="togglePagoInmediato" id="labelTogglePago">
                  <span class="text-danger">‚ùå No paga ahora</span>
                </label>
              </div>
            </div>

            <!-- Formulario de pago (inicialmente oculto) -->
            <div id="formulario-pago-inmediato" style="display: none;">
              <div class="alert alert-info">
                <div class="row">
                  <div class="col-md-8">
                    <h6><i class="fas fa-info-circle text-primary"></i> Informaci√≥n del Pago</h6>
                    <p class="mb-1">Se registrar√° el documento y el pago en una sola operaci√≥n.</p>
                    <small class="text-info">‚úÖ Operaci√≥n segura - Si falla el pago, no se crea el documento</small>
                  </div>
                  <div class="col-md-4 text-end">
                    <div class="bg-white p-2 rounded border">
                      <div class="text-muted small">VALOR FACTURA</div>
                      <div class="fs-4 text-success" id="valor-factura-pago">$0.00</div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Tipo de pago -->
              <div class="row mb-3">
                <div class="col-12">
                  <label class="form-label fw-bold">
                    <i class="fas fa-hand-holding-usd text-success"></i> Tipo de Pago
                  </label>
                  <div class="row">
                    <div class="col-md-4">
                      <div class="card border-2 tipo-pago-card" id="card-pago-completo" style="cursor: pointer;">
                        <div class="card-body text-center py-3">
                          <input type="radio" name="tipoPago" id="pago-completo" value="completo" style="display: none;">
                          <i class="fas fa-check-circle fa-2x text-success mb-2"></i>
                          <h6 class="card-title text-success">PAGO COMPLETO</h6>
                          <p class="card-text small mb-0">Paga el valor total</p>
                        </div>
                      </div>
                    </div>
                    
                    <div class="col-md-4">
                      <div class="card border-2 tipo-pago-card" id="card-pago-parcial" style="cursor: pointer;">
                        <div class="card-body text-center py-3">
                          <input type="radio" name="tipoPago" id="pago-parcial" value="parcial" style="display: none;">
                          <i class="fas fa-coins fa-2x text-warning mb-2"></i>
                          <h6 class="card-title text-warning">PAGO PARCIAL</h6>
                          <p class="card-text small mb-0">Monto espec√≠fico</p>
                        </div>
                      </div>
                    </div>
                    
                    <div class="col-md-4">
                      <div class="card border-2 tipo-pago-card" id="card-pago-retencion" style="cursor: pointer;">
                        <div class="card-body text-center py-3">
                          <input type="radio" name="tipoPago" id="pago-retencion" value="retencion" style="display: none;">
                          <i class="fas fa-receipt fa-2x text-info mb-2"></i>
                          <h6 class="card-title text-info">CON RETENCI√ìN</h6>
                          <p class="card-text small mb-0">Incluye retenci√≥n</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Campos espec√≠ficos seg√∫n tipo de pago -->
              <div id="campos-pago-especificos">
                
                <!-- Campos para pago parcial -->
                <div id="campos-pago-parcial" style="display: none;">
                  <div class="row mb-3">
                    <div class="col-md-6">
                      <label for="montoPagoParcial" class="form-label">
                        <i class="fas fa-dollar-sign text-warning"></i> Monto a Pagar ($)
                      </label>
                      <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input type="number" class="form-control" id="montoPagoParcial" 
                               step="0.01" min="0.01" placeholder="0.00">
                      </div>
                      <div class="form-text">Debe ser menor al valor total de la factura</div>
                    </div>
                    <div class="col-md-6">
                      <label for="metodoPagoParcial" class="form-label">
                        <i class="fas fa-credit-card text-primary"></i> M√©todo de Pago
                      </label>
                      <select class="form-select" id="metodoPagoParcial">
                        <option value="">Seleccionar m√©todo</option>
                        <option value="efectivo">üíµ Efectivo</option>
                        <option value="tarjeta_credito">üí≥ Tarjeta de Cr√©dito</option>
                        <option value="tarjeta_debito">üí≥ Tarjeta de D√©bito</option>
                        <option value="transferencia">üè¶ Transferencia Bancaria</option>
                        <option value="cheque">üìù Cheque</option>
                      </select>
                    </div>
                  </div>
                </div>

                <!-- Campos para pago completo -->
                <div id="campos-pago-completo" style="display: none;">
                  <div class="row mb-3">
                    <div class="col-md-6">
                      <label for="metodoPagoCompleto" class="form-label">
                        <i class="fas fa-credit-card text-primary"></i> M√©todo de Pago
                      </label>
                      <select class="form-select" id="metodoPagoCompleto">
                        <option value="">Seleccionar m√©todo</option>
                        <option value="efectivo">üíµ Efectivo</option>
                        <option value="tarjeta_credito">üí≥ Tarjeta de Cr√©dito</option>
                        <option value="tarjeta_debito">üí≥ Tarjeta de D√©bito</option>
                        <option value="transferencia">üè¶ Transferencia Bancaria</option>
                        <option value="cheque">üìù Cheque</option>
                      </select>
                    </div>
                    <div class="col-md-6">
                      <label for="numeroComprobante" class="form-label">
                        <i class="fas fa-hashtag text-secondary"></i> N¬∞ Comprobante (Opcional)
                      </label>
                      <input type="text" class="form-control" id="numeroComprobante" 
                             placeholder="N√∫mero de referencia">
                      <div class="form-text">Ej: n√∫mero de transacci√≥n, cheque, etc.</div>
                    </div>
                  </div>
                </div>

                <!-- Campos para pago con retenci√≥n -->
                <div id="campos-pago-retencion" style="display: none;">
                  <div class="alert alert-warning">
                    <h6><i class="fas fa-exclamation-triangle text-warning"></i> Pago con Retenci√≥n</h6>
                    <p class="mb-2">El cliente pagar√° un monto menor debido a retenciones aplicadas.</p>
                    <small class="text-warning">‚ö†Ô∏è La retenci√≥n se elaborar√° despu√©s seg√∫n normativa espec√≠fica del cliente</small>
                  </div>
                  
                  <div class="row mb-3">
                    <div class="col-md-4">
                      <label for="montoPagoRetencion" class="form-label">
                        <i class="fas fa-dollar-sign text-info"></i> Monto Pagado ($)
                      </label>
                      <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input type="number" class="form-control" id="montoPagoRetencion" 
                               step="0.01" min="0.01" placeholder="0.00">
                      </div>
                      <div class="form-text">Monto efectivamente recibido</div>
                    </div>
                    <div class="col-md-4">
                      <label for="metodoPagoRetencion" class="form-label">
                        <i class="fas fa-credit-card text-primary"></i> M√©todo de Pago
                      </label>
                      <select class="form-select" id="metodoPagoRetencion">
                        <option value="">Seleccionar m√©todo</option>
                        <option value="efectivo">üíµ Efectivo</option>
                        <option value="tarjeta_credito">üí≥ Tarjeta de Cr√©dito</option>
                        <option value="tarjeta_debito">üí≥ Tarjeta de D√©bito</option>
                        <option value="transferencia">üè¶ Transferencia Bancaria</option>
                        <option value="cheque">üìù Cheque</option>
                      </select>
                    </div>
                    <div class="col-md-4">
                      <label for="montoRetencionEstimado" class="form-label">
                        <i class="fas fa-receipt text-secondary"></i> Retenci√≥n Estimada ($)
                      </label>
                      <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input type="number" class="form-control" id="montoRetencionEstimado" 
                               step="0.01" min="0" placeholder="0.00" readonly>
                      </div>
                      <div class="form-text">Calculado autom√°ticamente</div>
                    </div>
                  </div>
                </div>

                <!-- Observaciones del pago -->
                <div class="row mb-3">
                  <div class="col-12">
                    <label for="observacionesPago" class="form-label">
                      <i class="fas fa-sticky-note text-secondary"></i> Observaciones del Pago (Opcional)
                    </label>
                    <textarea class="form-control" id="observacionesPago" rows="2" 
                              placeholder="Detalles adicionales sobre el pago..."></textarea>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Informaci√≥n del XML (solo lectura) -->
        <div class="alert alert-light">
          <h6><i class="fas fa-file-code me-2"></i>Informaci√≥n del XML</h6>
          <div class="row">
            <div class="col-md-6">
              <strong>Raz√≥n Social Emisor:</strong> <span id="razonSocialEmisor"></span><br>
              <strong>RUC Emisor:</strong> <span id="rucEmisor"></span>
            </div>
            <div class="col-md-6">
              <strong>Archivo Original:</strong> <span id="archivoOriginal"></span>
            </div>
          </div>
        </div>

        <!-- Botones de acci√≥n -->
        <div class="d-flex justify-content-between">
          <button type="button" class="btn btn-outline-secondary" onclick="volverACarga()">
            <i class="fas fa-arrow-left me-1"></i> Cargar Otro XML
          </button>
          <button type="submit" class="btn btn-success" id="btnConfirmarRegistro">
              <i class="fas fa-check me-1"></i> Confirmar y Registrar Documento
          </button>
        </div>
      </form>
    </div>

    <!-- Resultado del registro exitoso -->
    <div id="resultado-exitoso" style="display: none;" class="mt-4">
      <div class="alert alert-success">
        <h6><i class="fas fa-check-circle me-2"></i>Documento Registrado Exitosamente</h6>
        <div id="datos-documento-final"></div>
        
        <div class="mt-3">
          <button type="button" class="btn btn-primary" id="btnVerDocumentoFinal">
            <i class="fas fa-eye me-1"></i> Ver Documento
          </button>
          <button type="button" class="btn btn-outline-success ms-2" onclick="limpiarTodo()">
            <i class="fas fa-plus me-1"></i> Registrar Otro Documento
          </button>
        </div>
      </div>
    </div>

    <!-- Error del procesamiento -->
    <div id="error-procesamiento" style="display: none;" class="mt-4">
      <div class="alert alert-danger">
        <h6><i class="fas fa-exclamation-triangle me-2"></i>Error al Procesar</h6>
        <p id="mensaje-error"></p>
        <button type="button" class="btn btn-outline-danger" onclick="volverACarga()">
          <i class="fas fa-redo me-1"></i> Intentar de Nuevo
        </button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const formUpload = document.getElementById('xmlUploadForm');
  const formConfirmar = document.getElementById('formConfirmarRegistro');
  const fileInput = document.getElementById('xmlFile');
  const btnProcesar = document.getElementById('btnProcesar');
  
  // Secciones
  const seccionCarga = document.getElementById('seccion-carga');
  const vistaPrevia = document.getElementById('vista-previa');
  const resultadoExitoso = document.getElementById('resultado-exitoso');
  const errorProcesamiento = document.getElementById('error-procesamiento');
  
  let datosDocumento = null;
  let pagoInmediatoActivo = false;
  
  // ==================== GESTI√ìN DE PAGO INMEDIATO ====================
  
  // Toggle para activar/desactivar pago inmediato
  document.getElementById('togglePagoInmediato').addEventListener('change', function() {
    pagoInmediatoActivo = this.checked;
    const formularioPago = document.getElementById('formulario-pago-inmediato');
    const labelToggle = document.getElementById('labelTogglePago');
    const textoBoton = document.getElementById('textoBotonConfirmar');
    const btnConfirmar = document.getElementById('btnConfirmarRegistro');
    
    if (pagoInmediatoActivo) {
      // Activar pago inmediato
      formularioPago.style.display = 'block';
      labelToggle.innerHTML = '<span class="text-success">‚úÖ Paga ahora</span>';
      textoBoton.textContent = 'Guardar Documento + Pago';
      btnConfirmar.className = 'btn btn-primary';
      
      // Actualizar valor de factura en la secci√≥n de pago
      actualizarValorFacturaPago();
      
      // Animaci√≥n suave
      formularioPago.style.opacity = '0';
      setTimeout(() => {
        formularioPago.style.transition = 'opacity 0.3s ease-in-out';
        formularioPago.style.opacity = '1';
      }, 50);
    } else {
      // Desactivar pago inmediato
      formularioPago.style.display = 'none';
      labelToggle.innerHTML = '<span class="text-danger">‚ùå No paga ahora</span>';
      textoBoton.textContent = 'Confirmar y Registrar Documento';
      btnConfirmar.className = 'btn btn-success';
      
      // Limpiar formulario de pago
      limpiarFormularioPago();
    }
  });
  
  // Manejo de selecci√≥n de tipo de pago
  document.querySelectorAll('.tipo-pago-card').forEach(card => {
    card.addEventListener('click', function() {
      // Remover selecci√≥n anterior
      document.querySelectorAll('.tipo-pago-card').forEach(c => {
        c.classList.remove('border-primary', 'bg-light');
        c.querySelector('input[type="radio"]').checked = false;
      });
      
      // Seleccionar nueva opci√≥n
      this.classList.add('border-primary', 'bg-light');
      this.querySelector('input[type="radio"]').checked = true;
      
      // Mostrar campos espec√≠ficos
      mostrarCamposEspecificosPago(this.querySelector('input[type="radio"]').value);
    });
  });
  
  // Funci√≥n para mostrar campos espec√≠ficos seg√∫n tipo de pago
  function mostrarCamposEspecificosPago(tipoPago) {
    // Ocultar todos los campos espec√≠ficos
    document.getElementById('campos-pago-parcial').style.display = 'none';
    document.getElementById('campos-pago-completo').style.display = 'none';
    document.getElementById('campos-pago-retencion').style.display = 'none';
    
    // Mostrar campos seg√∫n tipo seleccionado
    switch (tipoPago) {
      case 'completo':
        document.getElementById('campos-pago-completo').style.display = 'block';
        break;
      case 'parcial':
        document.getElementById('campos-pago-parcial').style.display = 'block';
        break;
      case 'retencion':
        document.getElementById('campos-pago-retencion').style.display = 'block';
        break;
    }
  }
  
  // Funci√≥n para actualizar el valor de factura en la secci√≥n de pago
  function actualizarValorFacturaPago() {
    const valorFactura = document.getElementById('valorFactura').value;
    const valorFormateado = valorFactura ? parseFloat(valorFactura).toFixed(2) : '0.00';
    document.getElementById('valor-factura-pago').textContent = '$' + valorFormateado;
    
    // Actualizar l√≠mites en campos de pago
    document.getElementById('montoPagoParcial').max = valorFactura;
    document.getElementById('montoPagoRetencion').max = valorFactura;
    
    // Calcular retenci√≥n estimada (aproximada)
    if (valorFactura > 0) {
      const retencionEstimada = calcularRetencionEstimada(parseFloat(valorFactura));
      document.getElementById('montoRetencionEstimado').value = retencionEstimada.toFixed(2);
    }
  }
  
  // Funci√≥n para calcular retenci√≥n estimada (aproximada)
  function calcularRetencionEstimada(valorTotal) {
    // C√°lculo aproximado: 
    // Subtotal sin IVA = valorTotal / 1.15
    // Retenci√≥n IVA (100%) = (valorTotal - subtotal) 
    // Retenci√≥n Renta (10%) = subtotal * 0.10
    const subtotalSinIva = valorTotal / 1.15;
    const iva = valorTotal - subtotalSinIva;
    const retencionIva = iva; // 100% del IVA
    const retencionRenta = subtotalSinIva * 0.10; // 10% del subtotal
    
    return retencionIva + retencionRenta;
  }
  
  // Funci√≥n para limpiar formulario de pago
  function limpiarFormularioPago() {
    // Limpiar selecci√≥n de tipo de pago
    document.querySelectorAll('.tipo-pago-card').forEach(card => {
      card.classList.remove('border-primary', 'bg-light');
      card.querySelector('input[type="radio"]').checked = false;
    });
    
    // Limpiar campos espec√≠ficos
    document.getElementById('montoPagoParcial').value = '';
    document.getElementById('metodoPagoParcial').value = '';
    document.getElementById('metodoPagoCompleto').value = '';
    document.getElementById('numeroComprobante').value = '';
    document.getElementById('montoPagoRetencion').value = '';
    document.getElementById('metodoPagoRetencion').value = '';
    document.getElementById('observacionesPago').value = '';
    
    // Ocultar campos espec√≠ficos
    mostrarCamposEspecificosPago('');
  }
  
     // Listener para actualizar valor de factura en tiempo real
   document.getElementById('valorFactura').addEventListener('input', function() {
     if (pagoInmediatoActivo) {
       actualizarValorFacturaPago();
     }
   });
   
   // Funci√≥n para validar datos de pago
   function validarDatosPago() {
    if (!pagoInmediatoActivo) {
      return { valido: true }; // No hay pago, no hay que validar
    }
    
    const tipoPagoSeleccionado = document.querySelector('input[name="tipoPago"]:checked');
    if (!tipoPagoSeleccionado) {
      return { valido: false, mensaje: 'Debe seleccionar un tipo de pago' };
    }
    
    const tipoPago = tipoPagoSeleccionado.value;
    const valorFactura = parseFloat(document.getElementById('valorFactura').value) || 0;
    
    switch (tipoPago) {
      case 'completo':
        const metodoPagoCompleto = document.getElementById('metodoPagoCompleto').value;
        if (!metodoPagoCompleto) {
          return { valido: false, mensaje: 'Debe seleccionar un m√©todo de pago' };
        }
        return { 
          valido: true, 
          datos: {
            tipoPago: 'completo',
            monto: valorFactura,
            metodoPago: metodoPagoCompleto,
            numeroComprobante: document.getElementById('numeroComprobante').value,
            observaciones: document.getElementById('observacionesPago').value
          }
        };
        
      case 'parcial':
        const montoParcial = parseFloat(document.getElementById('montoPagoParcial').value) || 0;
        const metodoPagoParcial = document.getElementById('metodoPagoParcial').value;
        
        if (montoParcial <= 0) {
          return { valido: false, mensaje: 'El monto del pago parcial debe ser mayor a 0' };
        }
        if (montoParcial >= valorFactura) {
          return { valido: false, mensaje: 'El monto del pago parcial debe ser menor al valor total' };
        }
        if (!metodoPagoParcial) {
          return { valido: false, mensaje: 'Debe seleccionar un m√©todo de pago' };
        }
        
        return { 
          valido: true, 
          datos: {
            tipoPago: 'parcial',
            monto: montoParcial,
            metodoPago: metodoPagoParcial,
            observaciones: document.getElementById('observacionesPago').value
          }
        };
        
      case 'retencion':
        const montoPagoRetencion = parseFloat(document.getElementById('montoPagoRetencion').value) || 0;
        const metodoPagoRetencion = document.getElementById('metodoPagoRetencion').value;
        
        if (montoPagoRetencion <= 0) {
          return { valido: false, mensaje: 'El monto pagado debe ser mayor a 0' };
        }
        if (montoPagoRetencion >= valorFactura) {
          return { valido: false, mensaje: 'El monto pagado debe ser menor al valor total (hay retenci√≥n)' };
        }
        if (!metodoPagoRetencion) {
          return { valido: false, mensaje: 'Debe seleccionar un m√©todo de pago' };
        }
        
        return { 
          valido: true, 
          datos: {
            tipoPago: 'retencion',
            monto: montoPagoRetencion,
            metodoPago: metodoPagoRetencion,
            observaciones: document.getElementById('observacionesPago').value
          }
        };
        
      default:
        return { valido: false, mensaje: 'Tipo de pago no v√°lido' };
    }
  }
  
  // ==================== PASO 1: PROCESAR XML ====================
  formUpload.addEventListener('submit', function(event) {
    event.preventDefault();
    
    // Verificar que se haya seleccionado un archivo
    if (!fileInput.files || fileInput.files.length === 0) {
      alert('Por favor, seleccione un archivo XML para continuar.');
      return false;
    }
    
    // Verificar extensi√≥n del archivo
    const fileName = fileInput.files[0].name;
    if (!fileName.toLowerCase().endsWith('.xml')) {
      alert('Solo se permiten archivos con extensi√≥n .xml');
      return false;
    }
    
    // Verificar tama√±o del archivo (5MB m√°ximo)
    if (fileInput.files[0].size > 5 * 1024 * 1024) {
      alert('El archivo es demasiado grande. M√°ximo 5MB permitido.');
      return false;
    }
    
    procesarXML();
  });
  
  function procesarXML() {
    const formData = new FormData(formUpload);
    
    // Mostrar loading
    btnProcesar.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Procesando XML...';
    btnProcesar.disabled = true;
    
    // Ocultar elementos anteriores
    ocultarTodasLasSecciones();
    
    fetch('/caja/documentos/procesar-xml', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success && data.vistaPrevia) {
        mostrarVistaPrevia(data);
      } else {
        mostrarError(data.message || 'Error desconocido al procesar XML');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      mostrarError('Error de conexi√≥n al procesar el archivo XML');
    })
    .finally(() => {
      // Restaurar bot√≥n
      btnProcesar.innerHTML = '<i class="fas fa-search me-1"></i> Procesar y Vista Previa';
      btnProcesar.disabled = false;
    });
  }
  
  function mostrarVistaPrevia(data) {
    console.log('Mostrando vista previa con datos:', data);
    datosDocumento = data.datosExtraidos;
    
    // Ocultar secci√≥n de carga y mostrar vista previa
    seccionCarga.style.display = 'none';
    vistaPrevia.style.display = 'block';
    
    // Llenar datos en la vista previa
    llenarDatosVistaPrevia(data);
  }
  
  function llenarDatosVistaPrevia(data) {
    const datos = data.datosExtraidos;
    
    // Tipo de documento (seleccionar radio button correcto)
    const tipoRadios = document.querySelectorAll('input[name="tipoDocumento"]');
    tipoRadios.forEach(radio => {
      if (radio.value === datos.tipoDocumento) {
        radio.checked = true;
      }
    });
    
    // C√≥digo de barras (readonly)
    document.getElementById('codigoBarras').value = datos.codigoBarras || '';
    
    // Informaci√≥n del cliente
    document.getElementById('nombreCliente').value = datos.nombreCliente || '';
    document.getElementById('identificacionCliente').value = datos.identificacionCliente || '';
    document.getElementById('emailCliente').value = datos.emailCliente || '';
    document.getElementById('telefonoCliente').value = datos.telefonoCliente || '';
    
    // Informaci√≥n financiera
    document.getElementById('numeroFactura').value = datos.numeroFactura || '';
    
    // CORREGIDO: Mostrar valor de factura correctamente (incluso si es 0)
    const valorFactura = datos.valorFactura !== undefined && datos.valorFactura !== null ? 
                        parseFloat(datos.valorFactura).toFixed(2) : '';
    document.getElementById('valorFactura').value = valorFactura;
    
    console.log('üí∞ Valor de factura asignado al campo:', valorFactura);
    
    // ============== VALIDACI√ìN CR√çTICA: VALOR DE FACTURA ==============
    // Verificar que el valor de factura no sea $0
    const valorFacturaInput = document.getElementById('valorFactura');
    const valorFacturaNum = parseFloat(valorFactura || 0);
    
    console.log('üîç Analizando valor de factura:', {
      valorOriginal: datos.valorFactura,
      valorFormateado: valorFactura,
      valorNumerico: valorFacturaNum,
      esFacturaExenta: datos.esFacturaExenta,
      requiereValidacion: datos.requiereValidacion
    });
    
    if (valorFacturaNum <= 0) {
      console.log('üîç Valor $0 detectado - Verificando si es factura exenta...');
      
      // Verificar si es una factura exenta v√°lida
      if (datos.esFacturaExenta) {
        console.log('‚úÖ Factura exenta v√°lida detectada');
        
        // Mostrar alerta informativa (no de error)
        const alertaExenta = document.createElement('div');
        alertaExenta.className = 'alert alert-info mt-3';
        alertaExenta.innerHTML = `
          <h6><i class="fas fa-info-circle text-info"></i> Factura Exenta Detectada</h6>
          <p class="mb-1">${datos.notaExencion}</p>
          <div class="small text-info">
            <strong>‚úÖ Esta es una factura v√°lida con valor $0.00 por exenci√≥n tributaria.</strong><br>
            Puede continuar con el registro normalmente.
          </div>
        `;
        
        // Insertar alerta despu√©s del campo valor factura
        valorFacturaInput.parentNode.appendChild(alertaExenta);
        
        // Marcar campo como informativo (no error)
        valorFacturaInput.classList.add('is-valid');
        valorFacturaInput.style.borderColor = '#17a2b8'; // Color azul info
        valorFacturaInput.style.backgroundColor = '#e7f3ff';
        
        // Asegurar que el bot√≥n est√© habilitado
        const btnConfirmar = document.getElementById('btnConfirmarRegistro');
        btnConfirmar.disabled = false;
        btnConfirmar.innerHTML = '<i class="fas fa-check me-1"></i> Confirmar y Registrar Documento Exento';
        btnConfirmar.className = 'btn btn-info'; // Color azul para factura exenta
        
      } else if (datos.requiereValidacion) {
        console.log('‚ö†Ô∏è Factura $0 requiere validaci√≥n manual');
        
        // Mostrar alerta de advertencia para validaci√≥n manual
        const alertaValidacion = document.createElement('div');
        alertaValidacion.className = 'alert alert-warning mt-3';
        alertaValidacion.innerHTML = `
          <h6><i class="fas fa-exclamation-triangle text-warning"></i> Validaci√≥n Manual Requerida</h6>
          <p class="mb-1">${datos.notaValidacion}</p>
          <div class="small">
            <strong>‚ö†Ô∏è Por favor, verifique los siguientes puntos:</strong><br>
            ‚Ä¢ ¬øEs realmente una factura con valor $0.00?<br>
            ‚Ä¢ ¬øLos productos/servicios est√°n exentos de impuestos?<br>
            ‚Ä¢ ¬øEl XML contiene toda la informaci√≥n correcta?<br>
          </div>
          <div class="mt-2">
            <button type="button" class="btn btn-sm btn-warning" onclick="editarValorFactura()">
              <i class="fas fa-edit me-1"></i> Editar Valor
            </button>
            <button type="button" class="btn btn-sm btn-success ms-2" onclick="confirmarValorCero()">
              <i class="fas fa-check me-1"></i> Confirmar $0.00
            </button>
          </div>
        `;
        
        // Insertar alerta despu√©s del campo valor factura
        valorFacturaInput.parentNode.appendChild(alertaValidacion);
        
        // Marcar campo como advertencia
        valorFacturaInput.classList.add('border-warning');
        valorFacturaInput.style.borderColor = '#ffc107';
        valorFacturaInput.style.backgroundColor = '#fff8e1';
        
        // Permitir edici√≥n del campo
        valorFacturaInput.removeAttribute('readonly');
        
        // Deshabilitar bot√≥n hasta confirmaci√≥n
        const btnConfirmar = document.getElementById('btnConfirmarRegistro');
        btnConfirmar.disabled = true;
        btnConfirmar.innerHTML = '<i class="fas fa-pause me-1"></i> Confirme el Valor Antes de Continuar';
        btnConfirmar.className = 'btn btn-warning';
        
        return; // Salir hasta que se confirme
        
      } else {
        console.error('üö® ERROR CR√çTICO: Valor de factura es $0 y no es factura exenta');
        
        // Mostrar alerta de error para valor $0 problem√°tico
        const alertaValor = document.createElement('div');
        alertaValor.className = 'alert alert-danger mt-3';
        alertaValor.innerHTML = `
          <h6><i class="fas fa-exclamation-triangle text-danger"></i> Error: Valor de Factura $0</h6>
          <p class="mb-2">El XML procesado no contiene un valor de factura v√°lido.</p>
          <div class="small">
            <strong>Posibles causas:</strong><br>
            ‚Ä¢ El XML no es una factura electr√≥nica v√°lida<br>
            ‚Ä¢ Falta el campo "importeTotal" en la estructura XML<br>
            ‚Ä¢ El archivo XML est√° incompleto o corrupto<br>
          </div>
          <div class="mt-2">
            <strong>Soluci√≥n:</strong> Verifique que el archivo XML sea una factura electr√≥nica v√°lida emitida por el SRI.
          </div>
        `;
        
        // Insertar alerta despu√©s del campo valor factura
        valorFacturaInput.parentNode.appendChild(alertaValor);
        
        // Marcar campo como error
        valorFacturaInput.classList.add('is-invalid');
        valorFacturaInput.style.borderColor = '#dc3545';
        
        // Enfocar en el campo para que el usuario lo note
        valorFacturaInput.focus();
        
        // Deshabilitar bot√≥n de confirmar registro hasta que se corrija
        const btnConfirmar = document.getElementById('btnConfirmarRegistro');
        btnConfirmar.disabled = true;
        btnConfirmar.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i> Valor de Factura Requerido';
        btnConfirmar.className = 'btn btn-danger';
        
        return; // Salir de la funci√≥n sin continuar
      }
    } else {
      console.log('‚úÖ Valor de factura v√°lido:', valorFacturaNum);
      // Asegurar que el campo est√© marcado como v√°lido
      valorFacturaInput.classList.remove('is-invalid');
      valorFacturaInput.classList.add('is-valid');
      valorFacturaInput.style.borderColor = '#198754';
    }
    
    // Actualizar valor de factura en secci√≥n de pago si est√° activa
    if (pagoInmediatoActivo) {
      actualizarValorFacturaPago();
    }
    
    // Convertir fecha si es necesario (DD/MM/YYYY a YYYY-MM-DD)
    if (datos.fechaFactura) {
      let fechaFormatted = datos.fechaFactura;
      if (datos.fechaFactura.includes('/')) {
        const partes = datos.fechaFactura.split('/');
        if (partes.length === 3) {
          fechaFormatted = `${partes[2]}-${partes[1].padStart(2, '0')}-${partes[0].padStart(2, '0')}`;
        }
      }
      document.getElementById('fechaFactura').value = fechaFormatted;
    }
    
    // Llenar dropdown de matrizadores
    const selectMatrizador = document.getElementById('idMatrizador');
    selectMatrizador.innerHTML = '<option value="">Seleccione un matrizador</option>';
    
    data.matrizadores.forEach(matrizador => {
      const option = document.createElement('option');
      option.value = matrizador.id;
      option.textContent = matrizador.nombre;
      
      // Seleccionar autom√°ticamente si es el sugerido
      if (datos.matrizadorSugerido && matrizador.id === datos.matrizadorSugerido.id) {
        option.selected = true;
      }
      
      selectMatrizador.appendChild(option);
    });
    
    // Mostrar informaci√≥n del matrizador sugerido
    if (datos.matrizadorSugerido) {
      document.getElementById('matrizadorSugerido').style.display = 'block';
      document.getElementById('nombreMatrizadorXML').textContent = datos.nombreMatrizadorXML || datos.matrizadorSugerido.nombre;
    }
    
    // Informaci√≥n del XML (solo lectura)
    document.getElementById('razonSocialEmisor').textContent = datos.razonSocialEmisor || 'N/A';
    document.getElementById('rucEmisor').textContent = datos.rucEmisor || 'N/A';
    document.getElementById('archivoOriginal').textContent = data.archivoOriginal || 'N/A';
    
    // CR√çTICO: Actualizar valor de factura en la secci√≥n de pago
    actualizarValorFacturaPago();
    console.log('‚úÖ Valor de factura actualizado en secci√≥n de pago');
  }
  
  // ==================== PASO 2: CONFIRMAR REGISTRO ====================
  formConfirmar.addEventListener('submit', function(event) {
    event.preventDefault();
    
    // Validar campos requeridos del documento
    const campos = ['codigoBarras', 'nombreCliente', 'identificacionCliente', 'idMatrizador'];
    const tipoDocumento = document.querySelector('input[name="tipoDocumento"]:checked');
    
    if (!tipoDocumento) {
      alert('Por favor, seleccione un tipo de documento');
      return false;
    }
    
    for (const campo of campos) {
      const elemento = document.getElementById(campo);
      if (!elemento.value.trim()) {
        alert(`El campo ${campo} es requerido`);
        elemento.focus();
        return false;
      }
    }
    
    // Validar datos de pago si est√° activo
    if (pagoInmediatoActivo) {
      const validacionPago = validarDatosPago();
      if (!validacionPago.valido) {
        alert('Error en datos de pago: ' + validacionPago.mensaje);
        return false;
      }
    }
    
    confirmarRegistro();
  });
  
  function confirmarRegistro() {
    // Recopilar datos del formulario
    const datosFormulario = {
      codigoBarras: document.getElementById('codigoBarras').value,
      tipoDocumento: document.querySelector('input[name="tipoDocumento"]:checked').value,
      nombreCliente: document.getElementById('nombreCliente').value,
      identificacionCliente: document.getElementById('identificacionCliente').value,
      emailCliente: document.getElementById('emailCliente').value,
      telefonoCliente: document.getElementById('telefonoCliente').value,
      numeroFactura: document.getElementById('numeroFactura').value,
      valorFactura: document.getElementById('valorFactura').value,
      fechaFactura: document.getElementById('fechaFactura').value,
      idMatrizador: document.getElementById('idMatrizador').value,
      observaciones: document.getElementById('observaciones').value
    };
    
    // Agregar datos de pago si est√° activo
    if (pagoInmediatoActivo) {
      const validacionPago = validarDatosPago();
      if (validacionPago.valido && validacionPago.datos) {
        datosFormulario.pagoInmediato = true;
        datosFormulario.datosPago = validacionPago.datos;
      }
    } else {
      datosFormulario.pagoInmediato = false;
    }
    
    console.log('Enviando datos para registro:', datosFormulario);
    
    // Mostrar loading en el bot√≥n
    const btnConfirmar = document.getElementById('btnConfirmarRegistro');
    btnConfirmar.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Registrando...';
    btnConfirmar.disabled = true;
    
    fetch('/caja/documentos/registrar-desde-xml', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(datosFormulario)
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        mostrarResultadoFinal(data);
      } else {
        mostrarError(data.message || 'Error al registrar el documento');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      mostrarError('Error de conexi√≥n al registrar el documento');
    })
    .finally(() => {
      // Restaurar bot√≥n
      btnConfirmar.innerHTML = '<i class="fas fa-check me-1"></i> Confirmar y Registrar Documento';
      btnConfirmar.disabled = false;
    });
  }
  
  function mostrarResultadoFinal(data) {
    // Ocultar vista previa y mostrar resultado
    vistaPrevia.style.display = 'none';
    resultadoExitoso.style.display = 'block';
    
    // Mostrar datos del documento registrado
    let htmlResultado = `
      <div class="row">
        <div class="col-md-6">
          <strong>üìã ID del Documento:</strong> ${data.documento.id}<br>
          <strong>üè∑Ô∏è C√≥digo de Barras:</strong> ${data.documento.codigoBarras}<br>
          <strong>üìë Tipo:</strong> ${data.documento.tipoDocumento}<br>
          <strong>üë§ Cliente:</strong> ${data.documento.nombreCliente}
        </div>
        <div class="col-md-6">
          <strong>üë®‚Äçüíº Matrizador:</strong> ${data.documento.matrizador}<br>
          <strong>üìÖ Fecha de Registro:</strong> ${new Date().toLocaleDateString()}<br>
          <strong>‚úÖ Estado:</strong> ${data.pago ? 'Con Pago Registrado' : 'En Proceso'}
        </div>
      </div>
    `;
    
    // Agregar informaci√≥n del pago si se registr√≥
    if (data.pago) {
      htmlResultado += `
        <div class="alert alert-success mt-3">
          <h6><i class="fas fa-money-bill-wave text-success"></i> Pago Registrado Exitosamente</h6>
          <div class="row">
            <div class="col-md-6">
              <strong>üí∞ Monto Pagado:</strong> $${data.pago.monto}<br>
              <strong>üí≥ M√©todo:</strong> ${data.pago.metodoPago}<br>
              <strong>üìä Estado:</strong> <span class="badge bg-success">${data.pago.estadoPago}</span>
            </div>
            <div class="col-md-6">
              <strong>üìÖ Fecha Pago:</strong> ${new Date().toLocaleDateString()}<br>
              ${data.pago.numeroComprobante ? `<strong>üßæ Comprobante:</strong> ${data.pago.numeroComprobante}<br>` : ''}
              ${data.pago.valorPendiente > 0 ? `<strong>‚ö†Ô∏è Pendiente:</strong> $${data.pago.valorPendiente}` : '<strong>‚úÖ Pagado Completo</strong>'}
            </div>
          </div>
        </div>
      `;
    }
    
    document.getElementById('datos-documento-final').innerHTML = htmlResultado;
    
    // Configurar bot√≥n para ver documento
    document.getElementById('btnVerDocumentoFinal').onclick = function() {
      window.location.href = `/caja/documentos/detalle/${data.documento.id}`;
    };
  }
  
  function mostrarError(mensaje) {
    document.getElementById('mensaje-error').textContent = mensaje;
    errorProcesamiento.style.display = 'block';
  }
  
  function ocultarTodasLasSecciones() {
    vistaPrevia.style.display = 'none';
    resultadoExitoso.style.display = 'none';
    errorProcesamiento.style.display = 'none';
  }
  
  // ==================== FUNCIONES GLOBALES ====================
  window.volverACarga = function() {
    seccionCarga.style.display = 'block';
    ocultarTodasLasSecciones();
    formUpload.reset();
    datosDocumento = null;
  };
  
  window.limpiarTodo = function() {
    volverACarga();
  };
  
  // ==================== FUNCIONES PARA VALIDACI√ìN MANUAL ====================
  
  window.confirmarValorCero = function() {
    console.log('‚úÖ Usuario confirm√≥ valor $0.00 como v√°lido');
    const btnConfirmar = document.getElementById('btnConfirmarRegistro');
    
    // Habilitar bot√≥n de confirmar
    btnConfirmar.disabled = false;
    btnConfirmar.innerHTML = '<i class="fas fa-check me-1"></i> Confirmar Documento con Valor $0.00';
    btnConfirmar.className = 'btn btn-warning';
    
    // Limpiar alertas de validaci√≥n
    const alertaValidacion = document.querySelector('.alert-warning');
    if (alertaValidacion) {
      alertaValidacion.style.display = 'none';
    }
    
    // Agregar nota confirmada
    const notaConfirmada = document.createElement('div');
    notaConfirmada.className = 'alert alert-success mt-2';
    notaConfirmada.innerHTML = `
      <h6><i class="fas fa-check text-success"></i> Valor $0.00 Confirmado</h6>
      <p class="mb-0">Valor confirmado por el usuario. Proceda con el registro.</p>
    `;
    
    const valorFacturaInput = document.getElementById('valorFactura');
    valorFacturaInput.parentNode.appendChild(notaConfirmada);
    
    // Marcar campo como confirmado
    valorFacturaInput.classList.remove('border-warning');
    valorFacturaInput.classList.add('border-success');
    valorFacturaInput.style.borderColor = '#28a745';
    valorFacturaInput.style.backgroundColor = '#e8f5e8';
  };
  
  window.editarValorFactura = function() {
    console.log('‚úèÔ∏è Usuario va a editar el valor de factura');
    const valorFacturaInput = document.getElementById('valorFactura');
    
    // Limpiar estilos de advertencia
    valorFacturaInput.classList.remove('border-warning');
    valorFacturaInput.style.borderColor = '';
    valorFacturaInput.style.backgroundColor = '';
    
    // Enfocar en el campo para edici√≥n
    valorFacturaInput.focus();
    valorFacturaInput.select();
    
    // Mostrar mensaje de ayuda
    const mensajeAyuda = document.createElement('div');
    mensajeAyuda.className = 'alert alert-info mt-2';
    mensajeAyuda.id = 'mensaje-ayuda-edicion';
    mensajeAyuda.innerHTML = `
      <h6><i class="fas fa-edit text-info"></i> Editando Valor de Factura</h6>
      <p class="mb-1">Ingrese el valor correcto de la factura y presione Enter para confirmar.</p>
      <small class="text-info">üí° Si realmente es $0.00, ingrese 0 y confirme.</small>
    `;
    
    valorFacturaInput.parentNode.appendChild(mensajeAyuda);
    
    // A√±adir listener para validar en tiempo real
    valorFacturaInput.addEventListener('input', function() {
      const valor = parseFloat(this.value || 0);
      const btnConfirmar = document.getElementById('btnConfirmarRegistro');
      
      if (valor >= 0) {
        btnConfirmar.disabled = false;
        btnConfirmar.innerHTML = '<i class="fas fa-check me-1"></i> Confirmar y Registrar Documento';
        btnConfirmar.className = valor > 0 ? 'btn btn-success' : 'btn btn-info';
        
        // Actualizar valor en secci√≥n de pago si est√° activa
        if (pagoInmediatoActivo) {
          actualizarValorFacturaPago();
        }
      }
    });
  };
  
  window.confirmarValorCero = function() {
    console.log('‚úÖ Usuario confirma que el valor $0.00 es correcto');
    const valorFacturaInput = document.getElementById('valorFactura');
    const btnConfirmar = document.getElementById('btnConfirmarRegistro');
    
    // Limpiar estilos de advertencia
    valorFacturaInput.classList.remove('border-warning');
    valorFacturaInput.classList.add('is-valid', 'border-info');
    valorFacturaInput.style.borderColor = '#17a2b8';
    valorFacturaInput.style.backgroundColor = '#e7f3ff';
    
    // Habilitar bot√≥n de confirmaci√≥n
    btnConfirmar.disabled = false;
    btnConfirmar.innerHTML = '<i class="fas fa-check me-1"></i> Confirmar y Registrar Documento ($0.00)';
    btnConfirmar.className = 'btn btn-info';
    
    // Mostrar mensaje de confirmaci√≥n
    const mensajeConfirmacion = document.createElement('div');
    mensajeConfirmacion.className = 'alert alert-success mt-2';
    mensajeConfirmacion.innerHTML = `
      <h6><i class="fas fa-check-circle text-success"></i> Valor Confirmado</h6>
      <p class="mb-0">Ha confirmado que el valor $0.00 es correcto. Puede proceder con el registro.</p>
    `;
    
    // Remover mensaje de ayuda si existe
    const mensajeAyuda = document.getElementById('mensaje-ayuda-edicion');
    if (mensajeAyuda) {
      mensajeAyuda.remove();
    }
    
    valorFacturaInput.parentNode.appendChild(mensajeConfirmacion);
  };
});
</script>

<style>
/* Estilos para la funcionalidad de pago inmediato */
.tipo-pago-card {
  transition: all 0.3s ease;
  border: 2px solid #dee2e6 !important;
}

.tipo-pago-card:hover {
  border-color: #0d6efd !important;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.tipo-pago-card.border-primary {
  border-color: #0d6efd !important;
  background-color: #f8f9ff !important;
}

.form-check-input:checked {
  background-color: #198754;
  border-color: #198754;
}

.form-check-input:focus {
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

/* Animaci√≥n para el formulario de pago */
#formulario-pago-inmediato {
  transition: all 0.3s ease-in-out;
}

/* Estilos para campos espec√≠ficos de pago */
#campos-pago-especificos > div {
  transition: all 0.3s ease-in-out;
}

/* Mejorar apariencia de inputs de dinero */
.input-group-text {
  background-color: #e9ecef;
  border-color: #ced4da;
  color: #495057;
  font-weight: 600;
}

/* Estilos para alertas de informaci√≥n */
.alert-info {
  border-left: 4px solid #0dcaf0;
}

.alert-warning {
  border-left: 4px solid #ffc107;
}

/* Bot√≥n din√°mico */
#btnConfirmarRegistro {
  transition: all 0.3s ease;
  min-width: 250px;
}

/* Valor de factura destacado */
#valor-factura-pago {
  font-weight: 700;
  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
}

/* Mejorar apariencia de selects */
.form-select:focus {
  border-color: #86b7fe;
  outline: 0;
  box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

/* Responsive para cards de tipo de pago */
@media (max-width: 768px) {
  .tipo-pago-card {
    margin-bottom: 1rem;
  }
  
  .tipo-pago-card .card-body {
    padding: 1rem;
  }
  
  .tipo-pago-card i {
    font-size: 1.5rem !important;
  }
}
</style> 