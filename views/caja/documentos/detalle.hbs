<div class="card">
  <div class="card-header d-flex justify-content-between align-items-center">
    <div>
      <i class="fas fa-file-alt me-2"></i> Detalle de Documento
    </div>
    <div>
      <a href="/caja/documentos" class="btn btn-sm btn-outline-secondary">
        <i class="fas fa-arrow-left me-1"></i> Volver
      </a>
    </div>
  </div>
  <div class="card-body">
    <!-- Informaci√≥n general -->
    <div class="row mb-4">
      <div class="col-md-4">
        <div class="mb-3">
          <h5 class="border-bottom pb-2">Informaci√≥n General</h5>
          <p><strong>C√≥digo:</strong> <span class="badge bg-primary">{{documento.codigoBarras}}</span></p>
          <p><strong>Tipo:</strong> {{documento.tipoDocumento}}</p>
          <p><strong>Estado:</strong> 
            {{#if (eq documento.estado "en_proceso")}}
            <span class="badge bg-warning text-dark">En Proceso</span>
            {{else if (eq documento.estado "listo_para_entrega")}}
            <span class="badge bg-info">Listo para Entrega</span>
            {{else if (eq documento.estado "entregado")}}
            <span class="badge bg-success">Entregado</span>
            {{else if (eq documento.estado "nota_credito")}}
            <span class="badge bg-secondary">Nota de Cr√©dito</span>
            {{else if (eq documento.estado "eliminado")}}
            <span class="badge bg-danger">Eliminado</span>
            {{else}}
            <span class="badge bg-secondary">{{translateEstado documento.estado}}</span>
            {{/if}}
          </p>
          <p><strong>üìÖ Fecha Registro Sistema:</strong> {{formatDate documento.created_at}}</p>
          <small class="text-muted">Cu√°ndo se subi√≥ al sistema</small>
          {{#if documento.fechaFactura}}
          <p><strong>üìÑ Fecha Documento:</strong> {{formatDateDocument documento.fechaFactura}}</p>
          <small class="text-muted">Fecha original del documento (XML)</small>
          {{/if}}
          {{#if documento.fechaEntrega}}
          <p><strong>üöÄ Fecha Entrega:</strong> {{formatDate documento.fechaEntrega}}</p>
          {{/if}}
        </div>
      </div>
      
      <div class="col-md-4">
        <div class="mb-3">
          <h5 class="border-bottom pb-2">Cliente</h5>
          <p><strong>Nombre:</strong> {{documento.nombreCliente}}</p>
          <p><strong>Identificaci√≥n:</strong> {{documento.identificacionCliente}}</p>
          {{#if documento.emailCliente}}
          <p><strong>Email:</strong> {{documento.emailCliente}}</p>
          {{/if}}
          {{#if documento.telefonoCliente}}
          <p><strong>Tel√©fono:</strong> {{documento.telefonoCliente}}</p>
          {{/if}}
        </div>
      </div>
      
      <div class="col-md-4">
        <div class="mb-3">
          <h5 class="border-bottom pb-2">Matrizador Asignado</h5>
          {{#if documento.matrizador}}
          <p><strong>Nombre:</strong> {{documento.matrizador.nombre}}</p>
          <p><strong>Email:</strong> {{documento.matrizador.email}}</p>
          <button class="btn btn-sm btn-outline-secondary mt-2" 
                  data-bs-toggle="modal" data-bs-target="#cambiarMatrizadorModal"
                  data-documento-id="{{documento.id}}"
                  data-matrizador-actual-id="{{documento.matrizador.id}}"
                  data-matrizador-actual-nombre="{{documento.matrizador.nombre}}">
            <i class="fas fa-exchange-alt me-1"></i> Cambiar Matrizador
          </button>
          {{else}}
          <p>No hay matrizador asignado</p>
          <button class="btn btn-sm btn-primary mt-2" 
                  data-bs-toggle="modal" data-bs-target="#cambiarMatrizadorModal"
                  data-documento-id="{{documento.id}}">
            <i class="fas fa-user-plus me-1"></i> Asignar Matrizador
          </button>
          {{/if}}
        </div>
      </div>
    </div>
    
    <!-- Informaci√≥n de facturaci√≥n -->
    <div class="row mb-4">
      <div class="col-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center" id="pago">
            <h5 class="mb-0">Informaci√≥n de Facturaci√≥n</h5>
            {{#if (and (neq documento.estado "entregado") (neq documento.estado "eliminado") (neq documento.estado "nota_credito"))}}
            <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#registrarPagoModal">
              <i class="fas fa-plus-circle me-1"></i> Registrar Pago
            </button>
            {{/if}}
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-md-3">
                <p><strong>Estado:</strong> 
                  {{#if (eq documento.estadoPago "pagado_completo")}}
                  <span class="badge bg-success">Pagado Completo</span>
                  {{else if (eq documento.estadoPago "pagado_con_retencion")}}
                  <span class="badge bg-info">Pagado con Retenci√≥n</span>
                  {{else if (eq documento.estadoPago "pago_parcial")}}
                  <span class="badge bg-warning text-dark">Pago Parcial</span>
                  {{else}}
                  <span class="badge bg-danger">Pendiente</span>
                  {{/if}}
                </p>
              </div>
              <div class="col-md-3">
                <p><strong>N¬∞ Factura:</strong> {{#if documento.numeroFactura}}{{documento.numeroFactura}}{{else}}No registrado{{/if}}</p>
              </div>
              <div class="col-md-3">
                <p><strong>Valor:</strong> ${{#if documento.valorFactura}}{{formatMoney documento.valorFactura}}{{else}}0.00{{/if}}</p>
              </div>
              <div class="col-md-3">
                <p><strong>M√©todo de Pago:</strong> {{#if documento.metodoPago}}{{documento.metodoPago}}{{else}}No registrado{{/if}}</p>
              </div>
              {{#if documento.fechaFactura}}
              <div class="col-md-6">
                <p><strong>Fecha de Factura:</strong> {{formatDateDocument documento.fechaFactura}}</p>
              </div>
              {{/if}}
              {{#if (or (eq documento.estadoPago "pagado_completo") (eq documento.estadoPago "pagado_con_retencion") (eq documento.estadoPago "pago_parcial"))}}
              <div class="col-md-6">
                <p><strong>üìÖ Fecha de Pago:</strong> 
                  <span class="badge bg-success-subtle text-success-emphasis px-3 py-2">
                    {{#if documento.fechaPago}}
                    {{formatDateTime documento.fechaPago}}
                    {{else}}
                    No registrada
                    {{/if}}
                  </span>
                </p>
              </div>
              {{#if usuarioPago}}
              <div class="col-md-12">
                <p><strong>üë§ Registrado por:</strong> 
                  <span class="badge bg-info-subtle text-info-emphasis px-3 py-2">
                    {{usuarioPago.nombre}} ({{usuarioPago.rol}})
                  </span>
                </p>
              </div>
              {{/if}}
              {{/if}}
              
              <!-- Mostrar informaci√≥n adicional de pago -->
              {{#if (neq documento.estadoPago "pendiente")}}
              <div class="col-md-12">
                <hr>
                <div class="row">
                  <div class="col-md-3">
                    <p><strong>üí∞ Valor Total:</strong> ${{#if documento.valorFactura}}{{formatMoney documento.valorFactura}}{{else}}0.00{{/if}}</p>
                  </div>
                  <div class="col-md-3">
                    <p><strong>üí≥ Pagado:</strong> 
                      <span class="text-success">${{#if documento.valorPagado}}{{formatMoney documento.valorPagado}}{{else}}0.00{{/if}}</span>
                    </p>
                  </div>
                  <div class="col-md-3">
                    <p><strong>‚è≥ Pendiente:</strong> 
                      <span class="text-danger">${{#if documento.valorPendiente}}{{formatMoney documento.valorPendiente}}{{else}}0.00{{/if}}</span>
                    </p>
                  </div>
                  {{#if documento.tieneRetencion}}
                  <div class="col-md-3">
                    <p><strong>üîí Retenci√≥n:</strong> 
                      <span class="text-warning">${{#if documento.valorRetenido}}{{formatMoney documento.valorRetenido}}{{else}}0.00{{/if}}</span>
                    </p>
                  </div>
                  {{/if}}
                </div>
              </div>
              {{/if}}
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Notas -->
    {{#if documento.notas}}
    <div class="row mb-4">
      <div class="col-12">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">Notas</h5>
          </div>
          <div class="card-body">
            <p>{{documento.notas}}</p>
          </div>
        </div>
      </div>
    </div>
    {{/if}}
    
    <!-- Comparecientes -->
    {{#if documento.comparecientes.length}}
    <div class="row mb-4">
      <div class="col-12">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">Comparecientes</h5>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Nombre</th>
                    <th>Identificaci√≥n</th>
                    <th>Rol</th>
                  </tr>
                </thead>
                <tbody>
                  {{#each documento.comparecientes}}
                  <tr>
                    <td>{{this.nombre}}</td>
                    <td>{{this.identificacion}}</td>
                    <td>{{this.rol}}</td>
                  </tr>
                  {{/each}}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    {{/if}}
    
    <!-- Historial de eventos SIMPLIFICADO PARA CAJA -->
    {{#if eventos.length}}
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
              <i class="fas fa-history me-2"></i>Historial del Documento
            </h5>
            <small class="text-muted">Eventos m√°s recientes primero</small>
          </div>
          <div class="card-body">
            <!-- Lista simple de eventos para caja -->
            <div class="historial-simple-caja">
              {{#each eventos}}
              <div class="evento-simple mb-3 p-3 border-start border-4 border-{{this.color}} bg-light">
                <div class="d-flex justify-content-between align-items-start">
                  <div class="flex-grow-1">
                    <!-- Fecha y t√≠tulo del evento -->
                    <div class="fw-bold text-{{this.color}} mb-1">
                      üìÖ {{formatDate this.fecha}} - {{this.titulo}}
                    </div>
                    
                    <!-- Informaci√≥n espec√≠fica del evento -->
                    {{#if (eq this.tipo "pago")}}
                    <div class="small text-dark">
                      üí∞ <strong>Valor:</strong> ${{formatMoney this.detalles.valor}} | 
                      üí≥ <strong>M√©todo:</strong> {{this.detalles.metodoPago}} | 
                      üë§ <strong>Por:</strong> {{this.detalles.usuarioCaja}}
                      {{#if this.detalles.numeroFactura}}
                      <br>üìÑ <strong>Factura:</strong> {{this.detalles.numeroFactura}}
                      {{/if}}
                    </div>
                    {{else if (eq this.tipo "entrega")}}
                    <div class="small text-dark">
                      üì§ <strong>Entregado a:</strong> {{this.detalles.receptor}} ({{this.detalles.relacion}}) | 
                      üÜî <strong>ID:</strong> {{this.detalles.identificacionReceptor}} | 
                      üë§ <strong>Por:</strong> {{this.usuario}}
                    </div>
                    {{else if (eq this.categoria "estado")}}
                    <div class="small text-dark">
                      üìã <strong>Cambio:</strong> {{this.descripcion}} | 
                      üë§ <strong>Por:</strong> {{this.usuario}}
                    </div>
                    {{else}}
                    <div class="small text-dark">
                      {{this.descripcion}} | üë§ <strong>Por:</strong> {{this.usuario}}
                    </div>
                    {{/if}}
                  </div>
                  
                  <!-- Tiempo transcurrido -->
                  {{#if this.tiempoTranscurrido}}
                  <div class="small text-muted">
                    <i class="fas fa-clock me-1"></i>{{this.tiempoTranscurrido}}
                  </div>
                  {{/if}}
                </div>
              </div>
              {{/each}}
            </div>
            
            <!-- Leyenda simple -->
            <div class="row mt-3">
              <div class="col-12">
                <small class="text-muted">
                  üí∞ Pagos | üì§ Entregas | üìã Estados | üìÖ Fecha/Hora | üë§ Usuario
                </small>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    {{else}}
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0">
              <i class="fas fa-history me-2"></i>Historial del Documento
            </h5>
          </div>
          <div class="card-body text-center text-muted">
            <i class="fas fa-clock fa-3x mb-3"></i>
            <h5>Sin eventos operativos registrados</h5>
            <p>No hay pagos ni entregas registrados para este documento.</p>
          </div>
        </div>
      </div>
    </div>
    {{/if}}
  </div>
</div>

<!-- Modal para cambiar matrizador -->
<div class="modal fade" id="cambiarMatrizadorModal" tabindex="-1" aria-labelledby="cambiarMatrizadorModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="formCambiarMatrizador" action="/caja/documentos/cambiar-matrizador" method="POST">
        <div class="modal-header">
          <h5 class="modal-title" id="cambiarMatrizadorModalLabel">Cambiar Matrizador</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="documentoId" name="documentoId" value="{{documento.id}}">
          
          <div class="mb-3">
            <label for="matrizadorActual" class="form-label">Matrizador Actual</label>
            <input type="text" class="form-control bg-light" id="matrizadorActual" readonly 
                   value="{{#if documento.matrizador}}{{documento.matrizador.nombre}}{{else}}No asignado{{/if}}">
          </div>
          
          <div class="mb-3">
            <label for="matrizadorId" class="form-label">Nuevo Matrizador</label>
            <select class="form-select" id="matrizadorIdModal" name="matrizadorId" required>
              <option value="" selected disabled>Seleccionar matrizador...</option>
              {{#each matrizadores}}
              <option value="{{this.id}}">{{this.nombre}}</option>
              {{/each}}
            </select>
          </div>
          
          <div class="mb-3">
            <label for="justificacion" class="form-label">Justificaci√≥n</label>
            <textarea class="form-control" id="justificacion" name="justificacion" rows="3" required></textarea>
            <div class="form-text">Por favor, explique brevemente el motivo del cambio de matrizador.</div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-primary">Guardar Cambios</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal para registrar pago -->
<div class="modal fade" id="registrarPagoModal" tabindex="-1" aria-labelledby="registrarPagoModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <form id="formRegistrarPago" action="/caja/registrar-pago" method="POST" enctype="multipart/form-data">
        <div class="modal-header bg-primary text-white">
          <h5 class="modal-title" id="registrarPagoModalLabel">
            <i class="fas fa-credit-card me-2"></i>Registrar Pago - Sistema Avanzado
          </h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" name="documentoId" value="{{documento.id}}">
          
          <!-- Informaci√≥n del documento -->
          <div class="alert alert-info mb-4">
            <div class="row">
              <div class="col-md-4">
                <strong>üìÑ Documento:</strong> {{documento.codigoBarras}}<br>
                <strong>üë§ Cliente:</strong> {{documento.nombreCliente}}
              </div>
              <div class="col-md-4">
                <strong>üìã Tipo:</strong> {{documento.tipoDocumento}}<br>
                <strong>üè∑Ô∏è Estado:</strong> 
                {{#if (eq documento.estadoPago "pagado_completo")}}
                <span class="badge bg-success">Pagado Completo</span>
                {{else if (eq documento.estadoPago "pagado_con_retencion")}}
                <span class="badge bg-info">Pagado con Retenci√≥n</span>
                {{else if (eq documento.estadoPago "pago_parcial")}}
                <span class="badge bg-warning text-dark">Pago Parcial</span>
                {{else}}
                <span class="badge bg-danger">Pendiente</span>
                {{/if}}
              </div>
              <div class="col-md-4">
                <strong>üí∞ Valor Total:</strong> $<span id="valorTotalDocumento">{{#if documento.valorFactura}}{{formatMoney documento.valorFactura}}{{else}}0.00{{/if}}</span><br>
                <strong>üí≥ Pagado:</strong> $<span id="valorPagadoDocumento">{{#if documento.valorPagado}}{{formatMoney documento.valorPagado}}{{else}}0.00{{/if}}</span><br>
                <strong>‚è≥ Pendiente:</strong> $<span id="valorPendienteDocumento">{{#if documento.valorPendiente}}{{formatMoney documento.valorPendiente}}{{else if documento.valorFactura}}{{formatMoney documento.valorFactura}}{{else}}0.00{{/if}}</span>
              </div>
            </div>
          </div>

          <div class="row">
            <!-- Columna izquierda: Informaci√≥n de pago -->
            <div class="col-md-8">
              <div class="card">
                <div class="card-header bg-light">
                  <h6 class="mb-0"><i class="fas fa-money-bill-wave me-2"></i>Informaci√≥n del Pago</h6>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="monto" class="form-label">üí∞ Monto a Pagar ($) <span class="text-danger">*</span></label>
                        <div class="input-group">
                          <span class="input-group-text">$</span>
                          <input type="number" class="form-control" id="monto" name="monto" 
                                 min="0.01" step="0.01" required 
                                 placeholder="0.00">
                          <div class="invalid-feedback" id="montoError"></div>
                        </div>
                        <div class="form-text">M√°ximo: $<span id="montoMaximo">{{#if documento.valorPendiente}}{{formatMoney documento.valorPendiente}}{{else if documento.valorFactura}}{{formatMoney documento.valorFactura}}{{else}}0.00{{/if}}</span></div>
                      </div>
                    </div>
                    
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="formaPago" class="form-label">üí≥ Forma de Pago <span class="text-danger">*</span></label>
                        <select class="form-select" id="formaPago" name="formaPago" required>
                          <option value="" disabled selected>Seleccionar m√©todo...</option>
                          <option value="efectivo">üíµ Efectivo</option>
                          <option value="transferencia">üè¶ Transferencia Bancaria</option>
                          <option value="tarjeta_credito">üí≥ Tarjeta de Cr√©dito</option>
                          <option value="tarjeta_debito">üí≥ Tarjeta de D√©bito</option>
                          <option value="cheque">üìù Cheque</option>
                          <option value="otro">üîÑ Otro</option>
                        </select>
                      </div>
                    </div>
                  </div>

                  <!-- BOTONES DE PAGO R√ÅPIDO MEJORADOS -->
                  <div class="row mb-3">
                    <div class="col-12">
                      <h6 class="text-primary">üí∞ Opciones de Pago R√°pido:</h6>
                      <div class="d-flex gap-2 flex-wrap mb-2">
                        <!-- Bot√≥n Pago Total Normal -->
                        <button type="button" class="btn btn-success" onclick="pagarTotalCompleto()">
                          üí∞ PAGO TOTAL $<span id="valor-total-btn">{{documento.valorPendiente}}</span>
                        </button>
                        
                        <!-- Bot√≥n Nuevo: Pago con Retenci√≥n -->
                        <button type="button" class="btn btn-info" onclick="pagarConRetencion()">
                          üßÆ CON RETENCI√ìN ~$<span class="calcular-neto" data-total="{{documento.valorPendiente}}">0.00</span>
                        </button>
                        
                        <!-- Bot√≥n Pago Personalizado -->
                        <button type="button" class="btn btn-outline-secondary" onclick="mostrarFormularioPersonalizado()">
                          ‚úèÔ∏è MONTO PERSONALIZADO
                        </button>
                      </div>
                      
                      <!-- Nota explicativa -->
                      <small class="text-muted">
                        <i class="fas fa-info-circle"></i> 
                        "Con Retenci√≥n" calcula autom√°ticamente: Ret. IVA 100% + Ret. Renta 10%
                      </small>
                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="numeroComprobante" class="form-label">üßæ N√∫mero de Comprobante</label>
                        <input type="text" class="form-control" id="numeroComprobante" name="numeroComprobante" 
                               placeholder="Opcional">
                        <div class="form-text">N√∫mero de recibo, factura o comprobante</div>
                      </div>
                    </div>
                    
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="fechaPago" class="form-label">üìÖ Fecha de Pago</label>
                        <input type="date" class="form-control" id="fechaPago" name="fechaPago" 
                               value="">
                        <div class="form-text">Dejar vac√≠o para usar fecha actual</div>
                      </div>
                    </div>
                  </div>

                  <div class="mb-3">
                    <label for="observaciones" class="form-label">üìù Observaciones</label>
                    <textarea class="form-control" id="observaciones" name="observaciones" rows="2" 
                              placeholder="Informaci√≥n adicional sobre el pago (opcional)"></textarea>
                  </div>

                  <!-- Secci√≥n de retenci√≥n XML (inicialmente oculta) -->
                  <div id="seccionRetencion" style="display: none;">
                    <div class="card border-success">
                      <div class="card-header bg-success text-white">
                        <h6 class="mb-0">
                          <i class="fas fa-file-code me-2"></i>Comprobante de Retenci√≥n XML
                        </h6>
                      </div>
                      <div class="card-body">
                        <div class="alert alert-info">
                          <h6><i class="fas fa-info-circle me-1"></i>Formato √önico Soportado</h6>
                          <p class="mb-0">
                            <strong>üìã Solo archivos XML del SRI</strong><br>
                            <small class="text-muted">100% preciso - Sin errores de procesamiento</small>
                          </p>
                        </div>
                        
                        <!-- Upload de XML -->
                        <div class="mb-3">
                          <label for="xmlRetencion" class="form-label">
                            <i class="fas fa-upload me-1"></i>Subir XML de Retenci√≥n:
                          </label>
                          <input type="file" class="form-control" id="xmlRetencion" name="xmlRetencion" 
                                 accept=".xml" aria-describedby="xmlHelp">
                          <div id="xmlHelp" class="form-text">
                            üìÅ Solo archivos .xml del SRI | M√°ximo 5MB
                          </div>
                        </div>
                        
                        <!-- Bot√≥n de procesamiento -->
                        <div class="mb-3">
                          <button type="button" class="btn btn-primary" id="btnProcesarXml" onclick="procesarXmlRetencion()" disabled>
                            <i class="fas fa-cogs me-1"></i>üîç PROCESAR XML
                          </button>
                        </div>
                        
                        <!-- √Årea de resultados del procesamiento XML -->
                        <div id="resultadosProcesamientoXml" style="display: none;">
                          <div class="alert alert-success">
                            <h6><i class="fas fa-check-circle me-1"></i>XML Procesado Exitosamente:</h6>
                            <div class="row">
                              <div class="col-md-6">
                                <strong>üìÑ Comprobante:</strong> <span id="numeroComprobanteExtraido">-</span><br>
                                <strong>üè¢ Empresa:</strong> <span id="empresaRetenedoraExtraida">-</span><br>
                                <strong>üÜî RUC:</strong> <span id="rucEmpresaExtraido">-</span>
                              </div>
                              <div class="col-md-6">
                                <strong>üí∞ Ret. IVA:</strong> $<span id="retencionIvaExtraida">0.00</span><br>
                                <strong>üíº Ret. Renta:</strong> $<span id="retencionRentaExtraida">0.00</span><br>
                                <strong>üéØ Total Ret.:</strong> $<span id="totalRetencionExtraida">0.00</span>
                              </div>
                            </div>
                            
                            <!-- Validaci√≥n autom√°tica -->
                            <div class="mt-2" id="validacionRetencion">
                              <div class="d-flex align-items-center">
                                <span id="iconoValidacion" class="me-2">‚úÖ</span>
                                <span id="mensajeValidacion">XML validado correctamente</span>
                              </div>
                            </div>
                            
                            <!-- Botones de acci√≥n -->
                            <div class="mt-3">
                              <button type="button" class="btn btn-success btn-sm" onclick="aplicarDatosXml()">
                                <i class="fas fa-check me-1"></i>APLICAR DATOS
                              </button>
                              <button type="button" class="btn btn-secondary btn-sm" onclick="limpiarResultados()">
                                <i class="fas fa-times me-1"></i>LIMPIAR
                              </button>
                            </div>
                          </div>
                        </div>
                        
                        <!-- √Årea de error del procesamiento -->
                        <div id="errorProcesamientoXml" style="display: none;">
                          <div class="alert alert-danger">
                            <h6><i class="fas fa-exclamation-triangle me-1"></i>Error Procesando XML</h6>
                            <p id="mensajeErrorXml">Error desconocido</p>
                            <div class="mt-3">
                              <button type="button" class="btn btn-secondary btn-sm" onclick="limpiarError()">
                                <i class="fas fa-times me-1"></i>CERRAR
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Columna derecha: Resumen y validaci√≥n -->
            <div class="col-md-4">
              <div class="card">
                <div class="card-header bg-success text-white">
                  <h6 class="mb-0"><i class="fas fa-calculator me-2"></i>Resumen del Pago</h6>
                </div>
                <div class="card-body">
                  <div class="mb-3">
                    <div class="d-flex justify-content-between">
                      <span>üí∞ Valor Total:</span>
                      <strong>$<span id="resumenTotal">{{#if documento.valorFactura}}{{formatMoney documento.valorFactura}}{{else}}0.00{{/if}}</span></strong>
                    </div>
                  </div>
                  
                  <div class="mb-3">
                    <div class="d-flex justify-content-between">
                      <span>üí≥ Ya Pagado:</span>
                      <span class="text-success">$<span id="resumenPagado">{{#if documento.valorPagado}}{{formatMoney documento.valorPagado}}{{else}}0.00{{/if}}</span></span>
                    </div>
                  </div>
                  
                  <div class="mb-3">
                    <div class="d-flex justify-content-between">
                      <span>‚ûï Este Pago:</span>
                      <span class="text-primary">$<span id="resumenEstePago">0.00</span></span>
                    </div>
                  </div>
                  
                  <div class="mb-3">
                    <div class="d-flex justify-content-between">
                      <span>üîí Retenci√≥n:</span>
                      <span class="text-warning">$<span id="resumenRetencion">0.00</span></span>
                    </div>
                  </div>
                  
                  <hr>
                  
                  <div class="mb-3">
                    <div class="d-flex justify-content-between">
                      <span><strong>‚è≥ Quedar√° Pendiente:</strong></span>
                      <strong class="text-danger">$<span id="resumenPendiente">{{#if documento.valorPendiente}}{{formatMoney documento.valorPendiente}}{{else if documento.valorFactura}}{{formatMoney documento.valorFactura}}{{else}}0.00{{/if}}</span></strong>
                    </div>
                  </div>
                  
                  <div class="mb-3">
                    <div class="d-flex justify-content-between">
                      <span><strong>üéØ Estado Final:</strong></span>
                      <span id="estadoFinal" class="badge bg-secondary">Pendiente</span>
                    </div>
                  </div>

                  <!-- Validaci√≥n matem√°tica -->
                  <div class="alert alert-light border" id="validacionMatematica">
                    <small>
                      <i class="fas fa-check-circle text-success me-1"></i>
                      <strong>Validaci√≥n:</strong><br>
                      <span id="ecuacionMatematica">Total = Pagado + Pendiente + Retenido</span>
                    </small>
                  </div>

                  <!-- Checkbox para retenci√≥n -->
                  <div class="form-check mb-3">
                    <input class="form-check-input" type="checkbox" id="tieneRetencion" name="tieneRetencion" value="true">
                    <label class="form-check-label" for="tieneRetencion">
                      <i class="fas fa-file-code me-1"></i>Este pago tiene retenci√≥n
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Confirmaci√≥n final -->
          <div class="alert alert-warning mt-3">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>‚ö†Ô∏è Confirmaci√≥n:</strong> Al registrar este pago se actualizar√° el estado del documento 
            y se registrar√° en el historial. Esta acci√≥n no se puede deshacer f√°cilmente.
          </div>
        </div>
        
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            <i class="fas fa-times me-1"></i>Cancelar
          </button>
          <button type="submit" class="btn btn-success" id="btnConfirmarPago" disabled>
            <i class="fas fa-check me-1"></i>Confirmar Pago
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<style>
  /* === ESTILOS SIMPLIFICADOS PARA HISTORIAL DE CAJA === */
  .historial-simple-caja {
    margin-top: 10px;
  }
  
  .evento-simple {
    border-radius: 8px;
    transition: all 0.3s ease;
    background-color: #f8f9fa !important;
  }
  
  .evento-simple:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  }
  
  /* Colores de borde por tipo */
  .border-success {
    border-color: #28a745 !important;
  }
  
  .border-info {
    border-color: #17a2b8 !important;
  }
  
  .border-warning {
    border-color: #ffc107 !important;
  }
  
  .border-primary {
    border-color: #007bff !important;
  }
  
  .border-secondary {
    border-color: #6c757d !important;
  }
  
  /* Colores de texto por tipo */
  .text-success {
    color: #28a745 !important;
  }
  
  .text-info {
    color: #17a2b8 !important;
  }
  
  .text-warning {
    color: #856404 !important;
  }
  
  .text-primary {
    color: #004085 !important;
  }
  
  .text-secondary {
    color: #383d41 !important;
  }
  
  /* Responsive para m√≥viles */
  @media (max-width: 768px) {
    .evento-simple {
      padding: 15px !important;
      margin-bottom: 15px !important;
    }
    
    .evento-simple .fw-bold {
      font-size: 0.9rem;
    }
    
    .evento-simple .small {
      font-size: 0.8rem;
    }
  }
  
  /* Emojis para mejor visualizaci√≥n */
  .evento-simple .small {
    line-height: 1.4;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // ============ VARIABLES GLOBALES ============
    const valorTotalDocumento = parseFloat('{{documento.valorFactura}}') || 0;
    const valorPagadoDocumento = parseFloat('{{documento.valorPagado}}') || 0;
    const valorPendienteDocumento = parseFloat('{{documento.valorPendiente}}') || (valorTotalDocumento - valorPagadoDocumento);
    
    // ============ FUNCIONES DE C√ÅLCULO DE RETENCI√ìN ============
    
    // Funci√≥n principal de c√°lculo de retenci√≥n (f√≥rmula est√°ndar Ecuador)
    function calcularNetoConRetencion(totalFactura) {
      const subtotal = totalFactura / 1.15;        // Quitar IVA (15%)
      const iva = totalFactura - subtotal;         // IVA = diferencia
      
      // Retenciones t√≠picas
      const retencionIVA = iva * 1.00;             // 100% del IVA
      const retencionRenta = subtotal * 0.10;      // 10% del subtotal
      const totalRetencion = retencionIVA + retencionRenta;
      
      const netoARecibir = totalFactura - totalRetencion;
      
      return {
        total: parseFloat(totalFactura.toFixed(2)),
        subtotal: parseFloat(subtotal.toFixed(2)),
        iva: parseFloat(iva.toFixed(2)),
        retencionIVA: parseFloat(retencionIVA.toFixed(2)),
        retencionRenta: parseFloat(retencionRenta.toFixed(2)),
        totalRetencion: parseFloat(totalRetencion.toFixed(2)),
        neto: parseFloat(netoARecibir.toFixed(2))
      };
    }
    
    // ============ FUNCIONES DE BOTONES DE PAGO R√ÅPIDO ============
    
    // Funci√≥n global para pago total completo
    window.pagarTotalCompleto = function() {
      console.log('üü¢ Pago total completo seleccionado');
      const montoInput = document.getElementById('monto');
      const retencionCheck = document.getElementById('tieneRetencion');
      
      if (montoInput) {
        montoInput.value = valorPendienteDocumento.toFixed(2);
        montoInput.dispatchEvent(new Event('input'));
      }
      
      if (retencionCheck) {
        retencionCheck.checked = false;
        retencionCheck.dispatchEvent(new Event('change'));
      }
      
      // Scroll al formulario
      if (montoInput) {
        montoInput.focus();
        montoInput.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    };

    // Funci√≥n global para pago con retenci√≥n
    window.pagarConRetencion = function() {
      console.log('üßÆ Pago con retenci√≥n seleccionado');
      const total = valorPendienteDocumento;
      const calculo = calcularNetoConRetencion(total);
      
      const montoInput = document.getElementById('monto');
      const retencionCheck = document.getElementById('tieneRetencion');
      
      // Pre-llenar formulario con c√°lculo autom√°tico
      if (montoInput) {
        montoInput.value = calculo.neto.toFixed(2);
        montoInput.dispatchEvent(new Event('input'));
      }
      
      if (retencionCheck) {
        retencionCheck.checked = true;
        retencionCheck.dispatchEvent(new Event('change'));
      }
      
      // Mostrar desglose del c√°lculo
      if (mostrarDesglose(calculo)) {
        // Focus en forma de pago si acepta
        const formaPagoSelect = document.getElementById('formaPago');
        if (formaPagoSelect) {
          formaPagoSelect.focus();
        }
        
        if (montoInput) {
          montoInput.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      }
    };

    // Funci√≥n global para monto personalizado
    window.mostrarFormularioPersonalizado = function() {
      console.log('‚úèÔ∏è Monto personalizado seleccionado');
      const montoInput = document.getElementById('monto');
      const retencionCheck = document.getElementById('tieneRetencion');
      
      if (montoInput) {
        montoInput.value = '';
        montoInput.dispatchEvent(new Event('input'));
      }
      
      if (retencionCheck) {
        retencionCheck.checked = false;
        retencionCheck.dispatchEvent(new Event('change'));
      }
      
      // Focus en monto para que usuario escriba
      if (montoInput) {
        montoInput.focus();
        montoInput.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    };
    
    // Mostrar desglose del c√°lculo autom√°tico
    function mostrarDesglose(calculo) {
      const mensaje = `üí∞ C√ÅLCULO AUTOM√ÅTICO DE RETENCI√ìN:

üìä DESGLOSE:
‚Ä¢ Total Factura: $${calculo.total}
‚Ä¢ Subtotal s/IVA: $${calculo.subtotal}
‚Ä¢ IVA (15%): $${calculo.iva}

üîª RETENCIONES:
‚Ä¢ Retenci√≥n IVA (100%): -$${calculo.retencionIVA}
‚Ä¢ Retenci√≥n Renta (10%): -$${calculo.retencionRenta}
‚Ä¢ Total Retenciones: -$${calculo.totalRetencion}

üéØ NETO A RECIBIR: $${calculo.neto}

‚úÖ Monto pre-cargado en formulario
‚ö†Ô∏è Recuerde subir el XML de retenci√≥n para validaci√≥n`;
      
      // Mostrar como alert mejorado
      return confirm(mensaje + '\n\n¬øContinuar con este c√°lculo?');
    }
    
    // ============ INICIALIZACI√ìN Y EVENTOS ============
    
    // Calcular y mostrar montos estimados al cargar p√°gina
    function inicializarCalculosRetenciones() {
      console.log('üßÆ Inicializando c√°lculos de retenci√≥n...');
      
      const elementos = document.querySelectorAll('.calcular-neto');
      elementos.forEach(function(elemento) {
        const total = parseFloat(elemento.dataset.total);
        if (!isNaN(total) && total > 0) {
          const calculo = calcularNetoConRetencion(total);
          elemento.textContent = calculo.neto.toFixed(2);
          console.log(`üí∞ Calculado para $${total}: Neto = $${calculo.neto}`);
        }
      });
      
      // Tambi√©n actualizar el valor total en el bot√≥n
      const valorTotalBtn = document.getElementById('valor-total-btn');
      if (valorTotalBtn) {
        valorTotalBtn.textContent = valorPendienteDocumento.toFixed(2);
      }
      
      console.log('‚úÖ C√°lculos de retenci√≥n inicializados');
    }
    
    // ============ CONFIGURACI√ìN DE EVENTOS MEJORADA ============
    function configurarEventos() {
      // Evento para cambio en monto
      const montoInput = document.getElementById('monto');
      if (montoInput) {
        montoInput.addEventListener('input', function() {
          validarMonto();
          actualizarResumen();
        });
      }
      
      // Evento para checkbox de retenci√≥n
      const tieneRetencionCheck = document.getElementById('tieneRetencion');
      if (tieneRetencionCheck) {
        tieneRetencionCheck.addEventListener('change', function() {
          console.log('üîç Checkbox retenci√≥n cambiado:', this.checked);
          toggleSeccionRetencion();
          actualizarResumen();
        });
      }
      
      // Eventos para botones de pago r√°pido (legacy - mantener por compatibilidad)
      document.querySelectorAll('.btn-pago-rapido').forEach(btn => {
        btn.addEventListener('click', function() {
          const porcentaje = parseInt(this.dataset.porcentaje);
          const monto = (valorPendienteDocumento * porcentaje / 100).toFixed(2);
          document.getElementById('monto').value = monto;
          validarMonto();
          actualizarResumen();
        });
      });
      
      // Evento para bot√≥n de retenci√≥n autom√°tica (legacy)
      document.querySelectorAll('.btn-pago-rapido-retencion').forEach(btn => {
        btn.addEventListener('click', function() {
          pagarConRetencion(); // Usar nueva funci√≥n
        });
      });
      
      // Validaci√≥n del formulario antes de enviar
      const form = document.getElementById('formRegistrarPago');
      if (form) {
        form.addEventListener('submit', function(e) {
          const monto = parseFloat(document.getElementById('monto').value);
          const pendiente = valorPendienteDocumento;
          
          if (monto > pendiente) {
            e.preventDefault();
            alert('‚ùå El monto no puede ser mayor al valor pendiente ($' + pendiente + ')');
            return false;
          }
          
          // Validaci√≥n simplificada - XML es opcional
          const tieneRetencion = document.getElementById('tieneRetencion').checked;
          const xmlFile = document.getElementById('xmlRetencion') ? document.getElementById('xmlRetencion').files[0] : null;
          
          if (tieneRetencion && !xmlFile && !window.datosRetencionActuales) {
            if (!confirm('‚ö†Ô∏è No se subi√≥ XML de retenci√≥n ni se procesaron datos. ¬øContinuar sin retenci√≥n?')) {
              e.preventDefault();
              return false;
            }
          }
          
          return true;
        });
      }
      
      console.log('‚úÖ Eventos configurados correctamente');
    }
    
    // ============ VALIDACI√ìN DE MONTO ============
    function validarMonto() {
      const montoInput = document.getElementById('monto');
      const montoError = document.getElementById('montoError');
      const btnConfirmar = document.getElementById('btnConfirmarPago');
      
      if (!montoInput) return;
      
      const monto = parseFloat(montoInput.value) || 0;
      const maxPermitido = valorPendienteDocumento;
      
      // Limpiar errores previos
      montoInput.classList.remove('is-invalid');
      if (montoError) montoError.textContent = '';
      
      let esValido = true;
      let mensajeError = '';
      
      if (monto <= 0) {
        esValido = false;
        mensajeError = 'El monto debe ser mayor a 0';
      } else if (monto > maxPermitido) {
        esValido = false;
        mensajeError = `El monto no puede ser mayor al pendiente ($${maxPermitido.toFixed(2)})`;
      }
      
      if (!esValido) {
        montoInput.classList.add('is-invalid');
        if (montoError) montoError.textContent = mensajeError;
        if (btnConfirmar) btnConfirmar.disabled = true;
      } else {
        if (btnConfirmar) btnConfirmar.disabled = false;
      }
      
      return esValido;
    }
    
    // ============ MANEJO DEL MODAL ============
    const pagoModal = document.getElementById('registrarPagoModal');
    if (pagoModal) {
      pagoModal.addEventListener('hidden.bs.modal', function() {
        // Quitar #pago de la URL cuando se cierre el modal
        if (window.location.hash === '#pago') {
          window.history.pushState("", document.title, window.location.pathname + window.location.search);
        }
        
        // Resetear formulario
        const form = document.getElementById('formRegistrarPago');
        if (form) {
          form.reset();
          // Restaurar bot√≥n
          const btnConfirmar = document.getElementById('btnConfirmarPago');
          if (btnConfirmar) {
            btnConfirmar.innerHTML = '<i class="fas fa-check me-1"></i>Confirmar Pago';
            btnConfirmar.disabled = true;
          }
        }
      });
      
      pagoModal.addEventListener('shown.bs.modal', function() {
        // Enfocar en el campo de monto al abrir
        const montoInput = document.getElementById('monto');
        if (montoInput) {
          setTimeout(() => montoInput.focus(), 100);
        }
      });
    }
    
    // ============ FUNCIONALIDAD DE CAMBIO DE MATRIZADOR ============
    
    // Manejar modal de cambio de matrizador
    const cambiarMatrizadorModal = document.getElementById('cambiarMatrizadorModal');
    if (cambiarMatrizadorModal) {
      cambiarMatrizadorModal.addEventListener('show.bs.modal', function(event) {
        const button = event.relatedTarget;
        const documentoId = button.getAttribute('data-documento-id');
        const matrizadorActualId = button.getAttribute('data-matrizador-actual-id');
        const matrizadorActualNombre = button.getAttribute('data-matrizador-actual-nombre');
        
        // Actualizar el formulario del modal
        const form = this.querySelector('#formCambiarMatrizador');
        if (form) {
          form.querySelector('input[name="documentoId"]').value = documentoId;
          
          // Actualizar el select para excluir el matrizador actual
          const select = form.querySelector('select[name="matrizadorId"]');
          if (select && matrizadorActualId) {
            Array.from(select.options).forEach(option => {
              if (option.value === matrizadorActualId) {
                option.disabled = true;
                option.textContent += ' (Actual)';
              }
            });
          }
        }
        
        // Actualizar texto del modal
        const modalTitle = this.querySelector('.modal-title');
        if (modalTitle && matrizadorActualNombre) {
          modalTitle.textContent = `Cambiar Matrizador (Actual: ${matrizadorActualNombre})`;
        }
      });
    }
    
    // ============ MANEJO DE SECCI√ìN DE RETENCI√ìN ============
    function toggleSeccionRetencion() {
      const checkbox = document.getElementById('tieneRetencion');
      const seccion = document.getElementById('seccionRetencion');
      
      if (!checkbox || !seccion) return;
      
      if (checkbox.checked) {
        seccion.style.display = 'block';
        seccion.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        console.log('üìÑ Secci√≥n de retenci√≥n mostrada');
      } else {
        seccion.style.display = 'none';
        // Limpiar archivo si se deselecciona
        const xmlInput = document.getElementById('xmlRetencion');
        if (xmlInput) xmlInput.value = '';
        console.log('üìÑ Secci√≥n de retenci√≥n ocultada');
      }
    }
    
    // ============ ACTUALIZACI√ìN DEL RESUMEN ============
    function actualizarResumen() {
      const monto = parseFloat(document.getElementById('monto')?.value) || 0;
      const tieneRetencion = document.getElementById('tieneRetencion')?.checked || false;
      
      // üîß NUEVO: Considerar datos de retenci√≥n guardados del XML
      let valorRetencion = 0;
      if (window.datosRetencionActuales && tieneRetencion) {
        valorRetencion = parseFloat(window.datosRetencionActuales.totalRetencion) || 0;
        console.log('üîÑ Usando retenci√≥n del XML:', valorRetencion);
      }
      
      // Calcular valores considerando retenci√≥n
      const nuevoValorPagado = valorPagadoDocumento + monto;
      const totalCubierto = nuevoValorPagado + valorRetencion;
      const nuevoValorPendiente = Math.max(0, valorTotalDocumento - totalCubierto);
      
      // Actualizar elementos del resumen
      actualizarElemento('resumenTotal', valorTotalDocumento);
      actualizarElemento('resumenPagado', valorPagadoDocumento);
      actualizarElemento('resumenEstePago', monto);
      actualizarElemento('resumenRetencion', valorRetencion);
      actualizarElemento('resumenPendiente', nuevoValorPendiente);
      
      // Determinar estado final
      let estadoFinal = 'Pendiente';
      let claseEstado = 'bg-danger';
      
      if (nuevoValorPendiente <= 0.01) { // Tolerancia para decimales
        if (valorRetencion > 0) {
          estadoFinal = 'Pagado con Retenci√≥n';
          claseEstado = 'bg-info';
        } else {
          estadoFinal = 'Pagado Completo';
          claseEstado = 'bg-success';
        }
      } else if (monto > 0 || valorRetencion > 0) {
        estadoFinal = 'Pago Parcial';
        claseEstado = 'bg-warning';
      }
      
      // Actualizar estado final
      const estadoFinalElement = document.getElementById('estadoFinal');
      if (estadoFinalElement) {
        estadoFinalElement.textContent = estadoFinal;
        estadoFinalElement.className = `badge ${claseEstado}`;
      }
      
      // Actualizar ecuaci√≥n matem√°tica
      actualizarEcuacionMatematica(valorTotalDocumento, nuevoValorPagado, nuevoValorPendiente, valorRetencion);
      
      // üîß NUEVO: Log para debugging
      console.log(`üìä Resumen actualizado: Monto=$${monto}, Retenci√≥n=$${valorRetencion}, Pendiente=$${nuevoValorPendiente}, Estado=${estadoFinal}`);
    }
    
    // ============ FUNCIONES AUXILIARES ============
    function actualizarElemento(id, valor) {
      const elemento = document.getElementById(id);
      if (elemento) {
        elemento.textContent = valor.toFixed(2);
      }
    }
    
    function actualizarEcuacionMatematica(total, pagado, pendiente, retenido) {
      const ecuacion = document.getElementById('ecuacionMatematica');
      if (!ecuacion) return;
      
      const suma = pagado + pendiente + retenido;
      const esCorrecta = Math.abs(suma - total) < 0.01; // Tolerancia para decimales
      
      ecuacion.innerHTML = `
        $${total.toFixed(2)} = $${pagado.toFixed(2)} + $${pendiente.toFixed(2)} + $${retenido.toFixed(2)}
        <br><small class="${esCorrecta ? 'text-success' : 'text-danger'}">
          ${esCorrecta ? '‚úì Ecuaci√≥n correcta' : '‚ö† Verificar c√°lculos'}
        </small>
      `;
    }
    
    // ============ INICIALIZACI√ìN COMPLETA ============
    function inicializarSistemaPagos() {
      console.log('üöÄ Inicializando sistema de pagos avanzado...');
      
      // 1. Inicializar c√°lculos de retenci√≥n en botones
      inicializarCalculosRetenciones();
      
      // 2. Configurar todos los eventos
      configurarEventos();
      
      // 3. Configurar eventos del XML
      configurarEventosXml();
      
      // 4. Inicializar resumen
      actualizarResumen();
      
      // 5. Detectar si la URL contiene el fragmento #pago
      if (window.location.hash === '#pago') {
        const pagoModal = new bootstrap.Modal(document.getElementById('registrarPagoModal'));
        pagoModal.show();
        console.log('üîó Modal abierto autom√°ticamente por URL #pago');
      }
      
      // 6. Configurar fecha por defecto (hoy)
      const fechaPagoInput = document.getElementById('fechaPago');
      if (fechaPagoInput && !fechaPagoInput.value) {
        const today = new Date().toISOString().split('T')[0];
        fechaPagoInput.value = today;
      }
      
      console.log('‚úÖ Sistema de pagos inicializado correctamente');
    }
    
    // ============ EVENTOS DE INICIALIZACI√ìN ============
    
    // Inicializar cuando el DOM est√© listo
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', inicializarSistemaPagos);
    } else {
      inicializarSistemaPagos();
    }
    
    // Verificar cuando cambie el hash de la URL
    window.addEventListener('hashchange', function() {
      if (window.location.hash === '#pago') {
        const pagoModal = new bootstrap.Modal(document.getElementById('registrarPagoModal'));
        pagoModal.show();
        console.log('üîó Modal abierto por cambio de hash');
      }
    });

    // ============ FUNCIONES DE PROCESAMIENTO DE XML ============
    
    // Funci√≥n global para procesar XML de retenci√≥n
    window.procesarXmlRetencion = async function() {
      const xmlInput = document.getElementById('xmlRetencion');
      const btnProcesar = document.getElementById('btnProcesarXml');
      
      // Validar archivo seleccionado
      if (!xmlInput.files[0]) {
        alert('‚ùå Por favor, seleccione un archivo XML primero');
        return;
      }
      
      if (!xmlInput.files[0].name.toLowerCase().endsWith('.xml')) {
        alert('‚ùå Por favor, seleccione solo archivos XML');
        return;
      }
      
      // Mostrar loading
      const textoOriginal = btnProcesar.innerHTML;
      btnProcesar.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Procesando...';
      btnProcesar.disabled = true;
      
      try {
        const formData = new FormData();
        formData.append('xmlRetencion', xmlInput.files[0]);
        formData.append('documentoId', '{{documento.id}}');
        
        console.log('üì§ Enviando XML al servidor para procesamiento...');
        
        // Enviar al servidor
        const response = await fetch('/caja/procesar-xml-retencion', {
          method: 'POST',
          body: formData
        });
        
        const resultado = await response.json();
        
        if (resultado.success) {
          console.log('‚úÖ XML procesado exitosamente');
          mostrarResultadosXml(resultado.data);
          onXmlProcesadoExitosamente(resultado);
        } else {
          console.log('‚ùå Error procesando XML:', resultado.message);
          mostrarErrorXml(
            resultado.message || 'Error desconocido al procesar el XML'
          );
        }
        
      } catch (error) {
        console.error('‚ùå Error de conexi√≥n:', error);
        
        mostrarErrorXml(
          'Error de conexi√≥n al procesar el XML. Verifique su conexi√≥n a internet.'
        );
        
      } finally {
        // Restaurar bot√≥n
        btnProcesar.innerHTML = textoOriginal;
        btnProcesar.disabled = false;
      }
    };
    
    // Mostrar resultados extra√≠dos del XML
    function mostrarResultadosXml(datos) {
      // Ocultar errores
      document.getElementById('errorProcesamientoXml').style.display = 'none';
      
      // Mostrar datos extra√≠dos
      document.getElementById('numeroComprobanteExtraido').textContent = datos.numeroComprobanteRetencion || '-';
      document.getElementById('empresaRetenedoraExtraida').textContent = datos.razonSocialRetenedora || '-';
      document.getElementById('rucEmpresaExtraido').textContent = datos.rucEmpresaRetenedora || '-';
      document.getElementById('retencionIvaExtraida').textContent = (datos.retencionIva || 0).toFixed(2);
      document.getElementById('retencionRentaExtraida').textContent = (datos.retencionRenta || 0).toFixed(2);
      document.getElementById('totalRetencionExtraida').textContent = (datos.totalRetenido || 0).toFixed(2);
      
      // Mostrar panel de resultados
      document.getElementById('resultadosProcesamientoXml').style.display = 'block';
      
      console.log('üìÑ Datos extra√≠dos del XML:', datos);
    }
    
    // Mostrar error del procesamiento XML
    function mostrarErrorXml(mensaje) {
      document.getElementById('mensajeErrorXml').textContent = mensaje;
      document.getElementById('errorProcesamientoXml').style.display = 'block';
      document.getElementById('resultadosProcesamientoXml').style.display = 'none';
    }
    
    // Aplicar datos extra√≠dos del XML a los campos del formulario
    window.aplicarDatosXml = function() {
      const numeroComprobante = document.getElementById('numeroComprobanteExtraido').textContent;
      const empresaRetenedora = document.getElementById('empresaRetenedoraExtraida').textContent;
      const retencionIva = document.getElementById('retencionIvaExtraida').textContent;
      const retencionRenta = document.getElementById('retencionRentaExtraida').textContent;
      const totalRetencion = document.getElementById('totalRetencionExtraida').textContent;
      
      console.log('üìã Aplicando datos del XML al formulario...');
      
      // Crear objeto de datos de retenci√≥n
      const datosRetencion = {
        retencionIva: parseFloat(retencionIva) || 0,
        retencionRenta: parseFloat(retencionRenta) || 0,
        totalRetencion: parseFloat(totalRetencion) || 0,
        numeroComprobante: numeroComprobante,
        razonSocial: empresaRetenedora
      };
      
      // Guardar datos para uso posterior
      window.datosRetencionActuales = datosRetencion;
      
      // Actualizar resumen inmediatamente
      actualizarResumenConRetencion(datosRetencion);
      
      // Marcar checkbox de retenci√≥n autom√°ticamente
      const checkboxRetencion = document.getElementById('tieneRetencion');
      if (checkboxRetencion && datosRetencion.totalRetencion > 0) {
        checkboxRetencion.checked = true;
        toggleSeccionRetencion(); // Activar secci√≥n de retenci√≥n
      }
      
      // Mostrar confirmaci√≥n
      const mensaje = `‚úÖ Datos del XML aplicados correctamente:

üìã Informaci√≥n del comprobante:
‚Ä¢ N√∫mero: ${numeroComprobante}
‚Ä¢ Empresa: ${empresaRetenedora}

üí∞ Valores monetarios:
‚Ä¢ Retenci√≥n IVA: $${retencionIva}
‚Ä¢ Retenci√≥n RENTA: $${retencionRenta}
‚Ä¢ Total retenci√≥n: $${totalRetencion}

üßÆ El resumen del pago ha sido actualizado autom√°ticamente.`;
      
      alert(mensaje);
      
      // Scroll al formulario principal
      document.getElementById('monto').scrollIntoView({ behavior: 'smooth', block: 'center' });
      
      console.log('‚úÖ Todos los datos del XML aplicados al formulario y resumen');
    };
    
    // Limpiar resultados del procesamiento
    window.limpiarResultados = function() {
      document.getElementById('resultadosProcesamientoXml').style.display = 'none';
      document.getElementById('errorProcesamientoXml').style.display = 'none';
      
      // Limpiar valores mostrados
      document.getElementById('numeroComprobanteExtraido').textContent = '-';
      document.getElementById('empresaRetenedoraExtraida').textContent = '-';
      document.getElementById('rucEmpresaExtraido').textContent = '-';
      document.getElementById('retencionIvaExtraida').textContent = '0.00';
      document.getElementById('retencionRentaExtraida').textContent = '0.00';
      document.getElementById('totalRetencionExtraida').textContent = '0.00';
      
      // Limpiar datos guardados
      window.datosRetencionActuales = null;
      
      console.log('üßπ Resultados del XML limpiados');
    };
    
    // Limpiar error
    window.limpiarError = function() {
      document.getElementById('errorProcesamientoXml').style.display = 'none';
    };
    
    // Habilitar/deshabilitar bot√≥n de procesar seg√∫n archivo seleccionado
    function configurarEventosXml() {
      const xmlInput = document.getElementById('xmlRetencion');
      const btnProcesar = document.getElementById('btnProcesarXml');
      
      if (xmlInput && btnProcesar) {
        xmlInput.addEventListener('change', function() {
          if (this.files[0]) {
            btnProcesar.disabled = false;
            console.log('üìÅ Archivo XML seleccionado:', this.files[0].name);
          } else {
            btnProcesar.disabled = true;
          }
        });
      }
    }
    
    // Callback que se ejecuta cuando el XML se procesa exitosamente
    function onXmlProcesadoExitosamente(resultadoXml) {
      console.log('üîó Conectando procesamiento XML con resumen del pago');
      
      // Mostrar resultados
      mostrarResultadosXml(resultadoXml.data);
      
      // Actualizar resumen autom√°ticamente
      actualizarResumenConRetencion(resultadoXml.data);
      
      // Guardar datos globalmente
      window.datosRetencionActuales = resultadoXml.data;
      
      console.log('‚úÖ XML procesado y resumen actualizado autom√°ticamente');
    }
  });
</script> 