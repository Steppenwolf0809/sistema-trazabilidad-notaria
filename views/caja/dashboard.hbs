<!-- Dashboard Caja Corregido -->
<div class="row">
  <div class="col-md-12 mb-4">
    <div class="alert alert-info d-flex justify-content-between align-items-center">
      <span><i class="fas fa-info-circle me-2"></i> Bienvenido al panel de Caja. Desde aqu√≠ podr√°s gestionar pagos, facturas y documentos.</span>
      <button type="button" class="btn btn-sm btn-outline-secondary" id="toggleValores">
        <i class="fas fa-eye-slash me-1"></i> <span id="toggleText">Ocultar Valores</span>
      </button>
    </div>
  </div>
  
  <!-- üéØ INDICADOR ELEGANTE DE PER√çODO ACTIVO -->
  <div class="col-md-12 mb-4">
    <div class="alert alert-light border-left-primary shadow-sm">
      <div class="d-flex align-items-center justify-content-between">
        <div class="d-flex align-items-center">
          <i class="fas fa-calendar-day text-primary me-3" style="font-size: 1.2rem;"></i>
          <div>
            <span class="text-muted me-2">Mostrando datos de:</span>
            <strong class="text-primary" id="periodoActivo">{{periodo.periodoTexto}}</strong>
          </div>
        </div>
        <div class="text-end">
          {{#if (and periodo.esHoy (eq metricas.documentosFacturados 0))}}
            <small class="text-warning">
              <i class="fas fa-info-circle me-1"></i>Sin actividad hoy
            </small>
            <br>
            <small class="text-muted">Use otros filtros para ver per√≠odos anteriores</small>
          {{else}}
            <small class="text-success">
              <i class="fas fa-check-circle me-1"></i>{{metricas.documentosFacturados}} documentos
            </small>
            <br>
            <small class="text-muted">en este per√≠odo</small>
          {{/if}}
        </div>
      </div>
    </div>
  </div>
  
  <!-- Filtros de Fecha -->
  <div class="col-md-12 mb-4">
    <div class="card">
      <div class="card-header">
        <i class="fas fa-filter me-2"></i> Filtros de Per√≠odo
      </div>
      <div class="card-body">
        <div class="row align-items-end">
          <div class="col-md-3">
            <label for="fechaDesde" class="form-label">Desde</label>
            <input type="date" class="form-control" id="fechaDesde" name="fechaDesde">
          </div>
          <div class="col-md-3">
            <label for="fechaHasta" class="form-label">Hasta</label>
            <input type="date" class="form-control" id="fechaHasta" name="fechaHasta">
          </div>
          <div class="col-md-6">
            <div class="btn-group mb-2" role="group">
              <button type="button" class="btn btn-outline-primary btn-sm" data-periodo="hoy">Hoy</button>
              <button type="button" class="btn btn-outline-primary btn-sm" data-periodo="semana">Esta Semana</button>
              <button type="button" class="btn btn-outline-primary btn-sm" data-periodo="mes">Este Mes</button>
              <button type="button" class="btn btn-outline-primary btn-sm" data-periodo="ano">A√±o Actual</button>
            </div>
            <div class="d-flex">
              <button type="button" class="btn btn-outline-secondary me-2" id="limpiarFiltros">
                <i class="fas fa-times me-1"></i>Limpiar
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Tarjetas de estad√≠sticas financieras - ORDEN PROFESIONAL: FACTURADO ‚Üí COBRADO ‚Üí RETENIDO ‚Üí PENDIENTE -->
  <div class="col-md-3 mb-4">
    <div class="card bg-primary text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-0">Total Facturado</h6>
            <h2 class="display-6 mt-2 mb-0 valor-financiero" id="totalFacturado" data-valor-original="${{finanzas.facturado}}">${{finanzas.facturado}}</h2>
            <small class="opacity-75">{{metricas.documentosFacturados}} documentos</small>
          </div>
          <i class="fas fa-file-invoice fa-3x opacity-50"></i>
        </div>
      </div>
    </div>
  </div>
  
  <div class="col-md-3 mb-4">
    <div class="card bg-success text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-0">Total Cobrado</h6>
            <h2 class="display-6 mt-2 mb-0 valor-financiero" id="totalCobrado" data-valor-original="${{finanzas.cobrado}}">${{finanzas.cobrado}}</h2>
            <small class="opacity-75">{{finanzas.documentosCobradosPeriodo}} cobrados</small>
          </div>
          <i class="fas fa-hand-holding-usd fa-3x opacity-50"></i>
        </div>
      </div>
    </div>
  </div>
  
  <div class="col-md-3 mb-4">
    <div class="card bg-info text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-0">Total Retenido</h6>
            <h2 class="display-6 mt-2 mb-0 valor-financiero" id="totalRetenido" data-valor-original="${{finanzas.retenido}}">${{finanzas.retenido}}</h2>
            <small class="opacity-75">Retenciones aplicadas</small>
          </div>
          <i class="fas fa-receipt fa-3x opacity-50"></i>
        </div>
      </div>
    </div>
  </div>
  
  <div class="col-md-3 mb-4">
    <div class="card bg-warning text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-0">Total Pendiente</h6>
            <h2 class="display-6 mt-2 mb-0 valor-financiero" id="totalPendiente" data-valor-original="${{finanzas.pendiente}}">${{finanzas.pendiente}}</h2>
            <small class="opacity-75">{{metricas.documentosPendientesPago}} por cobrar</small>
          </div>
          <i class="fas fa-clock fa-3x opacity-50"></i>
        </div>
      </div>
    </div>
  </div>

  <!-- Alertas Cr√≠ticas -->
  {{#if alertasCriticas.length}}
  <div class="col-md-12 mb-4">
    <div class="card border-warning">
      <div class="card-header bg-warning text-dark">
        <h6 class="mb-0">
          <i class="fas fa-exclamation-triangle me-2"></i>
          Alertas Cr√≠ticas ({{alertasCriticas.length}})
        </h6>
      </div>
      <div class="card-body p-0">
        {{#each alertasCriticas}}
        <div class="alert alert-{{this.tipo}} border-0 rounded-0 mb-0 {{#unless @last}}border-bottom{{/unless}}">
          <div class="d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
              <i class="{{this.icono}} me-3"></i>
              <div>
                <strong>{{this.titulo}}</strong>
                <br><small>{{this.descripcion}}</small>
              </div>
            </div>
            <a href="{{this.accion}}" class="btn btn-sm btn-outline-{{this.tipo}}">
              <i class="fas fa-arrow-right"></i> Ver
            </a>
          </div>
        </div>
        {{/each}}
      </div>
    </div>
  </div>
  {{/if}}

  <!-- Validaci√≥n Matem√°tica (Solo visible si hay error) -->
  {{#unless validacionMatematica.esValida}}
  <div class="col-md-12 mb-4">
    <div class="alert alert-danger">
      <i class="fas fa-exclamation-triangle me-2"></i>
      <strong>Error Matem√°tico Detectado:</strong> 
      La ecuaci√≥n financiera no cuadra. Diferencia: ${{validacionMatematica.diferencia}}
      <br><small>Ecuaci√≥n esperada: {{validacionMatematica.ecuacion}}</small>
    </div>
  </div>
  {{/unless}}

  <!-- Accesos r√°pidos -->
  <div class="col-md-12 mb-4">
    <div class="card">
      <div class="card-header">
        <i class="fas fa-bolt me-2"></i> Acciones R√°pidas
        {{#if validacionMatematica.esValida}}
          <small class="text-success ms-2">
            <i class="fas fa-check-circle"></i> Matem√°tica verificada
          </small>
        {{/if}}
      </div>
      <div class="card-body">
        <div class="row text-center">
          <div class="col-md-3 mb-3">
            <a href="/caja/documentos?estadoPago=pendiente" class="btn btn-lg btn-success w-100 h-100 py-4">
              <i class="fas fa-search fa-2x mb-3"></i><br>
              <strong>Buscar Documento</strong><br>
              <small>Para registrar pago</small>
            </a>
          </div>
          <div class="col-md-3 mb-3">
            <a href="/caja/documentos" class="btn btn-lg btn-outline-primary w-100 h-100 py-4">
              <i class="fas fa-file-invoice-dollar d-block mb-3 fa-2x"></i>
              Ver Documentos
            </a>
          </div>
          <div class="col-md-3 mb-3">
            <a href="/caja/documentos/nuevo-xml" class="btn btn-lg btn-outline-info w-100 h-100 py-4">
              <i class="fas fa-file-code d-block mb-3 fa-2x"></i>
              Cargar XML
            </a>
          </div>
          <div class="col-md-3 mb-3">
            <a href="/caja/reportes" class="btn btn-lg btn-outline-success w-100 h-100 py-4">
              <i class="fas fa-chart-bar d-block mb-3 fa-2x"></i>
              Ver Reportes
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Documentos pendientes de pago -->
  <div class="col-md-6 mb-4">
    <div class="card h-100">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span><i class="fas fa-exclamation-circle text-warning me-2"></i> Documentos Pendientes de Pago (<span id="cantidadPendientes">{{metricas.documentosPendientesPago}}</span>)</span>
        <a href="/caja/documentos?estadoPago=pendiente" class="btn btn-sm btn-outline-secondary">Ver Todos</a>
      </div>
      <div class="card-body p-0" id="tablaPendientes">
        {{#if documentosPendientes.length}}
          <div class="table-responsive">
            <table class="table table-hover mb-0">
              <thead>
                <tr>
                  <th>C√≥digo</th>
                  <th>Cliente</th>
                  <th>Factura</th>
                  <th>Valor</th>
                  <th>Fecha</th>
                  <th>Acciones</th>
                </tr>
              </thead>
              <tbody>
                {{#each documentosPendientes}}
                  <tr>
                    <td>{{this.codigoBarras}}</td>
                    <td>{{this.nombreCliente}}</td>
                    <td>{{this.numeroFactura}}</td>
                    <td class="valor-financiero" data-valor-original="{{this.valorFacturaFormato}}">{{this.valorFacturaFormato}}</td>
                    <td>{{this.fechaCreacionFormato}}</td>
                    <td>
                      <a href="/caja/documentos/detalle/{{this.id}}" class="btn btn-sm btn-primary">
                        <i class="fas fa-edit"></i>
                      </a>
                    </td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        {{else}}
          <div class="text-center py-5">
            <i class="fas fa-check-circle text-success fa-3x mb-3"></i>
            <p class="mb-0">No hay documentos pendientes de pago</p>
          </div>
        {{/if}}
      </div>
    </div>
  </div>
  
  <!-- Pagos recientes -->
  <div class="col-md-6 mb-4">
    <div class="card h-100">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span><i class="fas fa-check-circle text-success me-2"></i> Pagos Recientes</span>
        <a href="/caja/pagos" class="btn btn-sm btn-outline-secondary">Ver Todos</a>
      </div>
      <div class="card-body p-0" id="tablaPagosRecientes">
        {{#if documentosPagadosRecientes.length}}
          <div class="table-responsive">
            <table class="table table-hover mb-0">
              <thead>
                <tr>
                  <th>C√≥digo</th>
                  <th>Cliente</th>
                  <th>Valor</th>
                  <th>M√©todo</th>
                  <th>Fecha</th>
                </tr>
              </thead>
              <tbody>
                {{#each documentosPagadosRecientes}}
                  <tr>
                    <td>{{this.codigoBarras}}</td>
                    <td>{{this.nombreCliente}}</td>
                    <td class="valor-financiero" data-valor-original="{{this.valorFacturaFormato}}">{{this.valorFacturaFormato}}</td>
                    <td>{{this.metodoPago}}</td>
                    <td>{{this.fechaPagoFormato}}</td>
                  </tr>
                {{/each}}
              </tbody>
            </table>
          </div>
        {{else}}
          <div class="text-center py-5">
            <i class="fas fa-exclamation-triangle text-warning fa-3x mb-3"></i>
            <p class="mb-0">No hay pagos recientes</p>
          </div>
        {{/if}}
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // CORREGIDO: Valores visibles por defecto
  let valoresOcultos = false;
  
  // Configurar fechas por defecto
  const hoy = new Date();
  const primerDiaMes = new Date(hoy.getFullYear(), hoy.getMonth(), 1);
  
  document.getElementById('fechaDesde').value = primerDiaMes.toISOString().split('T')[0];
  document.getElementById('fechaHasta').value = hoy.toISOString().split('T')[0];
  
  // CORREGIDO: Toggle para ocultar/mostrar valores (empezar mostrando)
  document.getElementById('toggleValores').addEventListener('click', function() {
    const toggleText = document.getElementById('toggleText');
    const toggleIcon = this.querySelector('i');
    const valoresFinancieros = document.querySelectorAll('.valor-financiero');
    
    if (valoresOcultos) {
      // Mostrar valores
      valoresFinancieros.forEach(element => {
        const valorOriginal = element.getAttribute('data-valor-original');
        if (valorOriginal) {
          element.textContent = valorOriginal;
        }
      });
      toggleText.textContent = 'Ocultar Valores';
      toggleIcon.className = 'fas fa-eye-slash me-1';
      valoresOcultos = false;
    } else {
      // Ocultar valores
      valoresFinancieros.forEach(element => {
        element.textContent = '***';
      });
      toggleText.textContent = 'Mostrar Valores';
      toggleIcon.className = 'fas fa-eye me-1';
      valoresOcultos = true;
    }
  });
  
  // CORREGIDO: Aplicar filtros autom√°ticamente al cambiar fechas
  document.getElementById('fechaDesde').addEventListener('change', aplicarFiltrosFecha);
  document.getElementById('fechaHasta').addEventListener('change', aplicarFiltrosFecha);
  
  // Botones de per√≠odo predefinido
  document.querySelectorAll('[data-periodo]').forEach(btn => {
    btn.addEventListener('click', function() {
      const periodo = this.getAttribute('data-periodo');
      const hoy = new Date();
      let fechaDesde, fechaHasta;
      
      switch(periodo) {
        case 'hoy':
          fechaDesde = fechaHasta = hoy;
          break;
        case 'semana':
          fechaDesde = new Date(hoy);
          fechaDesde.setDate(hoy.getDate() - hoy.getDay()); // Lunes de esta semana
          fechaHasta = hoy;
          break;
        case 'mes':
          fechaDesde = new Date(hoy.getFullYear(), hoy.getMonth(), 1); // CORREGIDO: Primer d√≠a del mes
          fechaHasta = hoy;
          break;
        case 'ano':
          fechaDesde = new Date(hoy.getFullYear(), 0, 1); // CORREGIDO: 1 de enero
          fechaHasta = hoy;
          break;
      }
      
      document.getElementById('fechaDesde').value = fechaDesde.toISOString().split('T')[0];
      document.getElementById('fechaHasta').value = fechaHasta.toISOString().split('T')[0];
      
      // Aplicar filtros autom√°ticamente
      aplicarFiltrosFecha();
    });
  });
  
  // Limpiar filtros
  document.getElementById('limpiarFiltros').addEventListener('click', function() {
    const hoy = new Date();
    const primerDiaMes = new Date(hoy.getFullYear(), hoy.getMonth(), 1);
    
    document.getElementById('fechaDesde').value = primerDiaMes.toISOString().split('T')[0];
    document.getElementById('fechaHasta').value = hoy.toISOString().split('T')[0];
    
    aplicarFiltrosFecha();
  });
  
  function aplicarFiltrosFecha() {
    const fechaDesde = document.getElementById('fechaDesde').value;
    const fechaHasta = document.getElementById('fechaHasta').value;
    
    if (!fechaDesde || !fechaHasta) {
      console.warn('Fechas incompletas');
      return;
    }
    
    console.log('üîÑ Aplicando filtros:', { fechaDesde, fechaHasta });
    
    // Enviar solicitud AJAX
    fetch('/caja/dashboard/filtrar', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        fechaDesde,
        fechaHasta
      })
    })
    .then(response => response.json())
    .then(datos => {
      console.log('‚úÖ Datos recibidos:', datos);
      actualizarDashboard(datos);
    })
    .catch(error => {
      console.error('‚ùå Error al aplicar filtros:', error);
      alert('Error al aplicar filtros. Por favor, intente nuevamente.');
    });
  }
  
  function actualizarDashboard(datos) {
    if (!datos.datos || !datos.datos.finanzas) {
      console.error('‚ùå Datos de finanzas no recibidos correctamente');
      return;
    }
    
    const finanzas = datos.datos.finanzas;
    const metricas = datos.datos.metricas;
    
    console.log('üìä Actualizando m√©tricas:', finanzas);
    
    // Actualizar m√©tricas principales - CORRECCI√ìN: Actualizar tanto atributos como texto
    const totalFacturado = document.getElementById('totalFacturado');
    const totalCobrado = document.getElementById('totalCobrado');
    const totalRetenido = document.getElementById('totalRetenido');
    const totalPendiente = document.getElementById('totalPendiente');
    
    if (totalFacturado) {
      const valorFacturado = '$' + finanzas.facturado;
      totalFacturado.setAttribute('data-valor-original', valorFacturado);
      totalFacturado.textContent = valoresOcultos ? '***' : valorFacturado;
    }
    
    if (totalCobrado) {
      const valorCobrado = '$' + finanzas.cobrado;
      totalCobrado.setAttribute('data-valor-original', valorCobrado);
      totalCobrado.textContent = valoresOcultos ? '***' : valorCobrado;
    }
    
    if (totalRetenido) {
      const valorRetenido = '$' + finanzas.retenido;
      totalRetenido.setAttribute('data-valor-original', valorRetenido);
      totalRetenido.textContent = valoresOcultos ? '***' : valorRetenido;
    }
    
    if (totalPendiente) {
      const valorPendiente = '$' + finanzas.pendiente;
      totalPendiente.setAttribute('data-valor-original', valorPendiente);
      totalPendiente.textContent = valoresOcultos ? '***' : valorPendiente;
    }
    
    // Actualizar contadores
    const cantidadPendientesElement = document.getElementById('cantidadPendientes');
    if (cantidadPendientesElement && metricas) {
      cantidadPendientesElement.textContent = metricas.documentosPendientesPago || 0;
    }
    
    // Actualizar tablas
    actualizarTablaPendientes(datos.datos.documentosPendientes);
    actualizarTablaPagosRecientes(datos.datos.documentosPagadosRecientes);
    
    // Actualizar indicador de per√≠odo
    const fechaDesdeFormateada = new Date(datos.datos.fechaDesde || new Date()).toLocaleDateString('es-EC');
    const fechaHastaFormateada = new Date(datos.datos.fechaHasta || new Date()).toLocaleDateString('es-EC');
    actualizarIndicadorPeriodo(fechaDesdeFormateada, fechaHastaFormateada);
    
    console.log('‚úÖ Dashboard actualizado correctamente');
  }
  
  function actualizarTablaPendientes(documentos) {
    const tabla = document.getElementById('tablaPendientes');
    
    if (!documentos || documentos.length === 0) {
      tabla.innerHTML = `
        <div class="text-center py-5">
          <i class="fas fa-check-circle text-success fa-3x mb-3"></i>
          <p class="mb-0">No hay documentos pendientes de pago en el per√≠odo seleccionado</p>
        </div>
      `;
      return;
    }
    
    let html = `
      <div class="table-responsive">
        <table class="table table-hover mb-0">
          <thead>
            <tr>
              <th>C√≥digo</th>
              <th>Cliente</th>
              <th>Factura</th>
              <th>Valor</th>
              <th>Fecha</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
    `;
    
    documentos.forEach(doc => {
      const valorFormateado = doc.valorFacturaFormato || doc.valorFactura || '0.00';
      html += `
        <tr>
          <td>${doc.codigoBarras || 'N/A'}</td>
          <td>${doc.nombreCliente || 'N/A'}</td>
          <td>${doc.numeroFactura || 'N/A'}</td>
          <td class="valor-financiero" data-valor-original="${valorFormateado}">${valoresOcultos ? '***' : valorFormateado}</td>
          <td>${doc.fechaCreacionFormato || 'N/A'}</td>
          <td>
            <a href="/caja/documentos/detalle/${doc.id}" class="btn btn-sm btn-primary">
              <i class="fas fa-edit"></i>
            </a>
          </td>
        </tr>
      `;
    });
    
    html += `
          </tbody>
        </table>
      </div>
    `;
    
    tabla.innerHTML = html;
  }
  
  function actualizarTablaPagosRecientes(documentos) {
    const tabla = document.getElementById('tablaPagosRecientes');
    
    if (!documentos || documentos.length === 0) {
      tabla.innerHTML = `
        <div class="text-center py-5">
          <i class="fas fa-exclamation-triangle text-warning fa-3x mb-3"></i>
          <p class="mb-0">No hay pagos recientes en el per√≠odo seleccionado</p>
        </div>
      `;
      return;
    }
    
    let html = `
      <div class="table-responsive">
        <table class="table table-hover mb-0">
          <thead>
            <tr>
              <th>C√≥digo</th>
              <th>Cliente</th>
              <th>Valor</th>
              <th>M√©todo</th>
              <th>Fecha</th>
            </tr>
          </thead>
          <tbody>
    `;
    
    documentos.forEach(doc => {
      const valorFormateado = doc.valorFacturaFormato || doc.valorFactura || '0.00';
      html += `
        <tr>
          <td>${doc.codigoBarras || 'N/A'}</td>
          <td>${doc.nombreCliente || 'N/A'}</td>
          <td class="valor-financiero" data-valor-original="${valorFormateado}">${valoresOcultos ? '***' : valorFormateado}</td>
          <td>${doc.metodoPago || 'N/A'}</td>
          <td>${doc.fechaPagoFormato || 'N/A'}</td>
        </tr>
      `;
    });
    
    html += `
          </tbody>
        </table>
      </div>
    `;
    
    tabla.innerHTML = html;
  }
  
  function actualizarIndicadorPeriodo(fechaDesdeFormateada, fechaHastaFormateada) {
    const indicador = document.getElementById('periodoActivo');
    
    if (indicador) {
      indicador.textContent = `${fechaDesdeFormateada} al ${fechaHastaFormateada}`;
    }
  }
});
</script> 