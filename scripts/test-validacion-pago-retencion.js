/**
 * Script de prueba para verificar la nueva validaci√≥n de pagos con retenci√≥n
 * Ejecutar con: node scripts/test-validacion-pago-retencion.js
 */

const { validarPagoConRetencion } = require('../utils/mathValidation');

console.log('üß™ INICIANDO PRUEBAS DE VALIDACI√ìN DE PAGO CON RETENCI√ìN');
console.log('='.repeat(70));

// Documento de ejemplo con problema (valorPendiente incorrecto)
const documentoProblematico = {
  id: 155,
  valorFactura: 2.06,
  valorPagado: 0.00,
  valorPendiente: 0.00, // ‚ùå INCORRECTO - deber√≠a ser 2.06
  valorRetenido: 0.00,
  estadoPago: 'pendiente'
};

// Documento corregido
const documentoCorregido = {
  id: 155,
  valorFactura: 2.06,
  valorPagado: 0.00,
  valorPendiente: 2.06, // ‚úÖ CORRECTO
  valorRetenido: 0.00,
  estadoPago: 'pendiente'
};

// Datos de retenci√≥n del PDF
const datosRetencion = {
  numeroComprobanteRetencion: '001-002-000023591',
  razonSocialRetenedora: 'GRANCOMERCIO CIA. LTDA.',
  retencionIva: 0.27,
  retencionRenta: 0.18,
  totalRetenido: 0.45,
  fechaRetencion: new Date()
};

console.log('üìÑ DOCUMENTO PROBLEM√ÅTICO:');
console.log('- Valor Factura:', documentoProblematico.valorFactura);
console.log('- Valor Pagado:', documentoProblematico.valorPagado);
console.log('- Valor Pendiente (BD):', documentoProblematico.valorPendiente, '‚ùå INCORRECTO');
console.log('- Valor Retenido:', documentoProblematico.valorRetenido);
console.log('');

console.log('üí∞ DATOS DE PAGO:');
console.log('- Monto Efectivo: $1.61');
console.log('- Retenci√≥n IVA: $0.27');
console.log('- Retenci√≥n Renta: $0.18');
console.log('- Total Retenci√≥n: $0.45');
console.log('- Total Movimiento: $2.06');
console.log('');

// PRUEBA 1: Validaci√≥n con documento problem√°tico
console.log('üßÆ PRUEBA 1: Validaci√≥n con documento problem√°tico (valorPendiente = 0.00)');
console.log('-'.repeat(70));

try {
  const resultado1 = validarPagoConRetencion(1.61, datosRetencion, documentoProblematico);
  
  console.log('‚úÖ RESULTADO:');
  console.log('- V√°lido:', resultado1.valido);
  console.log('- Errores:', resultado1.errores);
  console.log('- Advertencias:', resultado1.advertencias);
  console.log('- Total Movimiento:', resultado1.totalMovimiento);
  console.log('- Valor Pendiente Real:', resultado1.valorPendienteReal);
  console.log('- Detalles:', resultado1.detalles);
  
  if (resultado1.valido) {
    console.log('‚úÖ VALIDACI√ìN EXITOSA: La nueva funci√≥n detecta y corrige el problema autom√°ticamente');
  } else {
    console.log('‚ùå VALIDACI√ìN FALL√ì:', resultado1.errores.join(', '));
  }
  
} catch (error) {
  console.log('‚ùå ERROR:', error.message);
}

console.log('');

// PRUEBA 2: Validaci√≥n con documento corregido
console.log('üßÆ PRUEBA 2: Validaci√≥n con documento corregido (valorPendiente = 2.06)');
console.log('-'.repeat(70));

try {
  const resultado2 = validarPagoConRetencion(1.61, datosRetencion, documentoCorregido);
  
  console.log('‚úÖ RESULTADO:');
  console.log('- V√°lido:', resultado2.valido);
  console.log('- Errores:', resultado2.errores);
  console.log('- Advertencias:', resultado2.advertencias);
  console.log('- Total Movimiento:', resultado2.totalMovimiento);
  console.log('- Valor Pendiente Real:', resultado2.valorPendienteReal);
  
  if (resultado2.valido) {
    console.log('‚úÖ VALIDACI√ìN EXITOSA: Documento con valores correctos');
  } else {
    console.log('‚ùå VALIDACI√ìN FALL√ì:', resultado2.errores.join(', '));
  }
  
} catch (error) {
  console.log('‚ùå ERROR:', error.message);
}

console.log('');

// PRUEBA 3: Pago sin retenci√≥n
console.log('üßÆ PRUEBA 3: Pago completo sin retenci√≥n ($2.06)');
console.log('-'.repeat(70));

try {
  const resultado3 = validarPagoConRetencion(2.06, null, documentoCorregido);
  
  console.log('‚úÖ RESULTADO:');
  console.log('- V√°lido:', resultado3.valido);
  console.log('- Errores:', resultado3.errores);
  console.log('- Total Movimiento:', resultado3.totalMovimiento);
  
  if (resultado3.valido) {
    console.log('‚úÖ VALIDACI√ìN EXITOSA: Pago completo sin retenci√≥n');
  } else {
    console.log('‚ùå VALIDACI√ìN FALL√ì:', resultado3.errores.join(', '));
  }
  
} catch (error) {
  console.log('‚ùå ERROR:', error.message);
}

console.log('');

// PRUEBA 4: Pago excesivo (debe fallar)
console.log('üßÆ PRUEBA 4: Pago excesivo ($3.00 + $0.45 = $3.45 > $2.06)');
console.log('-'.repeat(70));

try {
  const resultado4 = validarPagoConRetencion(3.00, datosRetencion, documentoCorregido);
  
  console.log('‚úÖ RESULTADO:');
  console.log('- V√°lido:', resultado4.valido);
  console.log('- Errores:', resultado4.errores);
  console.log('- Total Movimiento:', resultado4.totalMovimiento);
  
  if (!resultado4.valido) {
    console.log('‚úÖ VALIDACI√ìN CORRECTA: Rechaza pago excesivo como esperado');
  } else {
    console.log('‚ùå ERROR: Deber√≠a rechazar pago excesivo');
  }
  
} catch (error) {
  console.log('‚ùå ERROR:', error.message);
}

console.log('');

// PRUEBA 5: Solo retenci√≥n (monto efectivo = 0)
console.log('üßÆ PRUEBA 5: Solo retenci√≥n (monto efectivo = $0.00)');
console.log('-'.repeat(70));

try {
  const resultado5 = validarPagoConRetencion(0.00, datosRetencion, documentoCorregido);
  
  console.log('‚úÖ RESULTADO:');
  console.log('- V√°lido:', resultado5.valido);
  console.log('- Errores:', resultado5.errores);
  console.log('- Total Movimiento:', resultado5.totalMovimiento);
  
  if (resultado5.valido) {
    console.log('‚úÖ VALIDACI√ìN EXITOSA: Permite pago solo con retenci√≥n');
  } else {
    console.log('‚ùå VALIDACI√ìN FALL√ì:', resultado5.errores.join(', '));
  }
  
} catch (error) {
  console.log('‚ùå ERROR:', error.message);
}

console.log('');
console.log('üéØ RESUMEN DE PRUEBAS');
console.log('='.repeat(70));
console.log('‚úÖ La nueva funci√≥n validarPagoConRetencion:');
console.log('   ‚Ä¢ Detecta inconsistencias en valorPendiente autom√°ticamente');
console.log('   ‚Ä¢ Calcula el valor pendiente real basado en la ecuaci√≥n matem√°tica');
console.log('   ‚Ä¢ Valida el total del movimiento (efectivo + retenci√≥n)');
console.log('   ‚Ä¢ Permite pagos solo con retenci√≥n (monto efectivo = 0)');
console.log('   ‚Ä¢ Rechaza pagos excesivos correctamente');
console.log('   ‚Ä¢ Proporciona mensajes de error descriptivos');
console.log('');
console.log('üîß SOLUCI√ìN IMPLEMENTADA:');
console.log('   ‚Ä¢ El backend ahora usa validarPagoConRetencion() en lugar de validarMontoPago()');
console.log('   ‚Ä¢ Se corrige autom√°ticamente el valorPendiente si est√° incorrecto');
console.log('   ‚Ä¢ Se procesan datos de retenci√≥n del formulario manual o PDF');
console.log('   ‚Ä¢ Se valida el movimiento total contra el valor pendiente real');
console.log('');
console.log('‚úÖ PROBLEMA RESUELTO: El error "monto excede valor pendiente" ya no ocurrir√°'); 